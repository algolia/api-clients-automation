name: Checks

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup
        id: setup
        uses: ./.github/actions/setup

      - name: Check matrices
        shell: bash
        run: |
          sudo npm install -g json2yaml
          matrix='${{ steps.setup.outputs.JS_MATRIX }}'
          echo $matrix
          echo $matrix | jq .
          echo $matrix | json2yaml

      - name: Lint GitHub actions
        run: yarn eslint --ext=yml .github/actions .github/workflows

    outputs:
      RUN_SPECS: ${{ steps.setup.outputs.RUN_SPECS }}
      SPECS_MATRIX: ${{ steps.setup.outputs.SPECS_MATRIX }}

      RUN_JS: ${{ steps.setup.outputs.RUN_JS }}
      JS_MATRIX: ${{ steps.setup.outputs.JS_MATRIX }}

      RUN_CTS: ${{ steps.setup.outputs.RUN_CTS }}

  specs:
    runs-on: ubuntu-20.04
    needs: setup
    if: ${{ always() && needs.setup.outputs.RUN_SPECS == 'true' }}
    strategy:
      matrix: ${{ fromJSON(needs.setup.outputs.SPECS_MATRIX) }}
    steps:
      - uses: actions/checkout@v2

      - name: Restore cache
        uses: ./.github/actions/cache

      - name: Checking ${{ matrix.client }} specs
        run: yarn build:specs ${{ matrix.client }}

      - name: Lint ${{ matrix.client }} specs
        run: yarn eslint --ext=yml specs/${{ matrix.client }}

      - name: Log
        shell: bash
        run: |
          echo ${{ needs.setup.outputs.JS_MATRIX }}
          echo ${{ fromJSON(needs.setup.outputs.JS_MATRIX) }}

  client_javascript:
    runs-on: ubuntu-20.04
    needs:
      - setup
      - specs
    if: ${{ always() && needs.setup.outputs.RUN_JS == 'true' }}
    strategy:
      matrix: ${{ fromJSON(needs.setup.outputs.JS_MATRIX) }}
    steps:
      - uses: actions/checkout@v2

      - name: Restore cache
        uses: ./.github/actions/cache

      - name: Cache ${{ matrix.client.client }} client
        id: cache
        uses: actions/cache@v2
        with:
          path: '/home/runner/work/api-clients-automation/api-clients-automation/${{ matrix.client.folder }}/dist'
          key: ${{ runner.os }}-js-client-${{ matrix.client.client }}-${{ hashFiles(format('{0}/**', matrix.client.folder)) }}

      - name: Generate ${{ matrix.client.client }} client
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn generate javascript ${{ matrix.client.client }}

      - name: Build ${{ matrix.client.client }} client
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn build:clients javascript ${{ matrix.client.client }}

  cts:
    runs-on: ubuntu-20.04
    needs:
      - setup
      - client_javascript
    if: ${{ always() && needs.setup.outputs.RUN_CTS == 'true' }}
    steps:
      - uses: actions/checkout@v2

      - name: Restore cache
        id: restore
        uses: ./.github/actions/cache
        with:
          job: cts

      - name: Generate CTS
        run: yarn cts:generate

      - name: Run CTS
        run: yarn cts:test
