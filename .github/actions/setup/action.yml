name: Setup

description: Setup CI environment.

runs:
  using: composite
  steps:
    - name: Install Java
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: 11.0.4
        cache: maven

    - name: Install Node
      uses: actions/setup-node@v2
      with:
        node-version-file: .nvmrc
        cache: yarn

    - name: Restore cache
      uses: ./.github/actions/cache

    - name: Setting diff outputs variables
      id: diff
      shell: bash
      run: |
        echo "::set-output name=GITHUB_ACTIONS_CHANGED::$(git diff --shortstat origin/${{ github.base_ref }}..HEAD -- .github/actions .github/workflows | wc -l)"

        echo "::set-output name=SPECS_CHANGED::$(git diff --shortstat origin/${{ github.base_ref }}..HEAD -- specs | wc -l)"
        echo "::set-output name=COMMON_SPECS_CHANGED::$(git diff --shortstat origin/${{ github.base_ref }}..HEAD -- specs/common | wc -l)"

        echo "::set-output name=TESTS_CHANGED::$(git diff --shortstat origin/${{ github.base_ref }}..HEAD -- tests | wc -l)"

        echo "::set-output name=SCRIPTS_CHANGED::$(git diff --shortstat origin/${{ github.base_ref }}..HEAD -- scripts | wc -l)"

        echo "::set-output name=JS_CLIENT_CHANGED::$(git diff --shortstat origin/${{ github.base_ref }}..HEAD -- clients/algoliasearch-client-javascript | wc -l)"
        echo "::set-output name=JS_TEMPLATE_CHANGED::$(git diff --shortstat origin/${{ github.base_ref }}..HEAD -- templates/javascript | wc -l)"

        echo "::set-output name=JAVA_CLIENT_CHANGED::$(git diff --shortstat origin/${{ github.base_ref }}..HEAD -- clients/algoliasearch-client-java-2 | wc -l)"
        echo "::set-output name=JAVA_TEMPLATE_CHANGED::$(git diff --shortstat origin/${{ github.base_ref }}..HEAD -- templates/java | wc -l)"

    - name: Compute specs matrix
      id: spec-matrix
      shell: bash
      run: |
        # Read from openapitools.json and put each client in the specs array
        specs=""
        generators=( $(cat openapitools.json | jq '."generator-cli".generators' | jq -r 'keys[]') )

        base_changed=${{ github.ref == 'refs/heads/main' || steps.diff.outputs.GITHUB_ACTIONS_CHANGED > 0 || steps.diff.outputs.SCRIPTS_CHANGED > 0 || steps.diff.outputs.COMMON_SPECS_CHANGED > 0 }}

        for generator in "${generators[@]}"; do
          client=${generator#*-}
            if [[ ! ${specs[*]} =~ $client ]]; then
              changed=$(git diff --shortstat origin/${{ github.base_ref }}..HEAD -- specs/$client | wc -l)
              if [[ $base_changed || $changed > 0 ]]; then
                specs="$specs $client"
              fi
            fi
        done

        # Convert the array to json for the matrix
        if [[ $specs == "" ]]; then
          # client cannot be empty or the matrix will fail
          specs_matrix='{"client":["no-run"]}'
          run_specs="false"
        else
          specs_matrix=$((
            echo '{ "client" : ['
            echo $specs | xargs | sed 's/ /, /g' | xargs -n 1 echo | sed -r 's/^([^,]*)(,?)$/"\1"\2/'
            echo " ]}"
          ) | jq -c .)
          run_specs="true"
        fi
        echo $specs_matrix
        echo "Run specs: $run_specs"
        echo "::set-output name=SPECS_MATRIX::$specs_matrix"
        echo "::set-output name=RUN_SPECS::$run_specs"

    - name: Compute the JS client build matrix
      id: js-matrix
      shell: bash
      run: |
        base_changed=${{ github.ref == 'refs/heads/main' || steps.diff.outputs.GITHUB_ACTIONS_CHANGED > 0 || steps.diff.outputs.COMMON_SPECS_CHANGED > 0 || steps.diff.outputs.SCRIPTS_CHANGED > 0 || steps.diff.outputs.JS_TEMPLATE_CHANGED > 0 }}

        read -d "\n" matrix run <<< $(./scripts/ci/create-matrix.sh javascript $base_changed ${{ github.base_ref }})

        echo $matrix
        echo $matrix | jq

        echo "::set-output name=MATRIX::$matrix"
        echo "::set-output name=RUN::$run"

    - name: Compute the Java client build matrix
      id: java-matrix
      shell: bash
      run: |
        # Read from openapitools.json to get the clients and folders (not pretty jq)
        clients=$(cat openapitools.json | jq -c '."generator-cli".generators | with_entries(if (.key | test("java-.*")) then ({key:.key,value:.value}) else empty end) | to_entries | map({client:.key | sub("java-";""),folder:.value.output | sub("#{cwd}/";"")}) | .[]')

        base_changed=${{ github.ref == 'refs/heads/main' || steps.diff.outputs.GITHUB_ACTIONS_CHANGED > 0 || steps.diff.outputs.COMMON_SPECS_CHANGED > 0 || steps.diff.outputs.SCRIPTS_CHANGED > 0 || steps.diff.outputs.JAVA_TEMPLATE_CHANGED > 0 }}

        to_test='{"client": []}'
        for pair in $clients; do
          client=$(echo $pair | jq '.client')
          folder=$(echo $pair | jq '.folder')
          spec_changed=$(git diff --shortstat origin/${{ github.base_ref }}..HEAD -- specs/$client | wc -l)
          client_changed=$(git diff --shortstat origin/${{ github.base_ref }}..HEAD -- $folder | wc -l)
          if [[ $base_changed || $spec_changed > 0 || $client_changed > 0 ]]; then
            to_test=$(echo $to_test | jq --argjson pair $pair '.client |= .+ [$pair]')
          fi
        done

        # Convert the array to json for the matrix
        if [[ $(echo $to_test | jq '.client | length') == 0 ]]; then
          # client cannot be empty or the matrix will fail
          java_matrix='{"client":["no-run"]}'
          run_java="false"
        else
          java_matrix=$(echo $to_test | jq -c)
          run_java="true"
        fi
        echo $java_matrix | jq
        echo "Run Java: $run_java"
        echo "::set-output name=JAVA_MATRIX::$java_matrix"
        echo "::set-output name=RUN_JAVA::$run_java"

outputs:
  RUN_SPECS:
    description: Whether to run specs or not
    value: ${{ steps.spec-matrix.outputs.RUN_SPECS }}

  SPECS_MATRIX:
    description: Generate the matrix for specs
    value: ${{ steps.spec-matrix.outputs.SPECS_MATRIX }}

  RUN_JS:
    description: Whether to run js client or not
    value: ${{ steps.js-matrix.outputs.RUN }}

  JS_MATRIX:
    description: Generate the matrix for javascript client build
    value: ${{ steps.js-matrix.outputs.MATRIX }}

  RUN_JAVA:
    description: Whether to run java client or not
    value: ${{ steps.java-matrix.outputs.RUN_JAVA }}

  JAVA_MATRIX:
    description: Generate the matrix for javascript client build
    value: ${{ steps.java-matrix.outputs.JAVA_MATRIX }}

  RUN_CTS:
    description: Determine if the `cts` job should run
    value: ${{ github.ref_name == 'main' || steps.diff.outputs.GITHUB_ACTIONS_CHANGED > 0 || steps.diff.outputs.SPECS_CHANGED > 0 || steps.diff.outputs.TESTS_CHANGED > 0 || steps.diff.outputs.JS_CLIENT_CHANGED > 0 || steps.diff.outputs.JS_TEMPLATE_CHANGED > 0 || steps.diff.outputs.JAVA_CLIENT_CHANGED > 0 || steps.diff.outputs.JAVA_TEMPLATE_CHANGED > 0 }}
