// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package snippets

// >IMPORT
import suggestions "github.com/algolia/algoliasearch-client-go/v4/algolia/query-suggestions"

// IMPORT<

func SnippetForCreateConfigOfSuggestions() {
	/*
	   Snippet for the createConfig method.

	   createConfig
	*/

	// >SEPARATOR createConfig default
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CreateConfig(client.NewApiCreateConfigRequest(

		suggestions.NewEmptyConfigurationWithIndex().SetIndexName("<YOUR_INDEX_NAME>").SetSourceIndices(
			[]suggestions.SourceIndex{*suggestions.NewEmptySourceIndex().SetIndexName("<YOUR_INDEX_NAME>").SetFacets(
				[]suggestions.Facet{*suggestions.NewEmptyFacet().SetAttribute("test")}).SetGenerate(
				[][]string{
					[]string{"facetA", "facetB"},
					[]string{"facetC"}})}).SetLanguages(suggestions.ArrayOfStringAsLanguages(
			[]string{"french"})).SetExclude(
			[]string{"test"})))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomDeleteOfSuggestions() {
	/*
	   Snippet for the customDelete method.

	   allow del method for a custom path with minimal parameters
	*/

	// >SEPARATOR customDelete allow del method for a custom path with minimal parameters
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomDelete(client.NewApiCustomDeleteRequest(
		"test/minimal"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomDeleteOfSuggestions1() {
	/*
	   Snippet for the customDelete method.

	   allow del method for a custom path with all parameters
	*/

	// >SEPARATOR customDelete allow del method for a custom path with all parameters
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomDelete(client.NewApiCustomDeleteRequest(
		"test/all").WithParameters(map[string]any{"query": "parameters"}))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomGetOfSuggestions() {
	/*
	   Snippet for the customGet method.

	   allow get method for a custom path with minimal parameters
	*/

	// >SEPARATOR customGet allow get method for a custom path with minimal parameters
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomGet(client.NewApiCustomGetRequest(
		"test/minimal"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomGetOfSuggestions1() {
	/*
	   Snippet for the customGet method.

	   allow get method for a custom path with all parameters
	*/

	// >SEPARATOR customGet allow get method for a custom path with all parameters
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomGet(client.NewApiCustomGetRequest(
		"test/all").WithParameters(map[string]any{"query": "parameters with space"}))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomGetOfSuggestions2() {
	/*
	   Snippet for the customGet method.

	   requestOptions should be escaped too
	*/

	// >SEPARATOR customGet requestOptions should be escaped too
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomGet(client.NewApiCustomGetRequest(
		"test/all").WithParameters(map[string]any{"query": "to be overriden"}), suggestions.WithQueryParam("query", "parameters with space"), suggestions.WithQueryParam("and an array",
		[]string{"array", "with spaces"}), suggestions.WithHeaderParam("x-header-1", "spaces are left alone"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPostOfSuggestions() {
	/*
	   Snippet for the customPost method.

	   allow post method for a custom path with minimal parameters
	*/

	// >SEPARATOR customPost allow post method for a custom path with minimal parameters
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPost(client.NewApiCustomPostRequest(
		"test/minimal"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPostOfSuggestions1() {
	/*
	   Snippet for the customPost method.

	   allow post method for a custom path with all parameters
	*/

	// >SEPARATOR customPost allow post method for a custom path with all parameters
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPost(client.NewApiCustomPostRequest(
		"test/all").WithParameters(map[string]any{"query": "parameters"}).WithBody(map[string]any{"body": "parameters"}))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPostOfSuggestions2() {
	/*
	   Snippet for the customPost method.

	   requestOptions can override default query parameters
	*/

	// >SEPARATOR customPost requestOptions can override default query parameters
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPost(client.NewApiCustomPostRequest(
		"test/requestOptions").WithParameters(map[string]any{"query": "parameters"}).WithBody(map[string]any{"facet": "filters"}), suggestions.WithQueryParam("query", "myQueryParameter"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPostOfSuggestions3() {
	/*
	   Snippet for the customPost method.

	   requestOptions merges query parameters with default ones
	*/

	// >SEPARATOR customPost requestOptions merges query parameters with default ones
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPost(client.NewApiCustomPostRequest(
		"test/requestOptions").WithParameters(map[string]any{"query": "parameters"}).WithBody(map[string]any{"facet": "filters"}), suggestions.WithQueryParam("query2", "myQueryParameter"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPostOfSuggestions4() {
	/*
	   Snippet for the customPost method.

	   requestOptions can override default headers
	*/

	// >SEPARATOR customPost requestOptions can override default headers
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPost(client.NewApiCustomPostRequest(
		"test/requestOptions").WithParameters(map[string]any{"query": "parameters"}).WithBody(map[string]any{"facet": "filters"}), suggestions.WithHeaderParam("x-algolia-api-key", "ALGOLIA_API_KEY"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPostOfSuggestions5() {
	/*
	   Snippet for the customPost method.

	   requestOptions merges headers with default ones
	*/

	// >SEPARATOR customPost requestOptions merges headers with default ones
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPost(client.NewApiCustomPostRequest(
		"test/requestOptions").WithParameters(map[string]any{"query": "parameters"}).WithBody(map[string]any{"facet": "filters"}), suggestions.WithHeaderParam("x-algolia-api-key", "ALGOLIA_API_KEY"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPostOfSuggestions6() {
	/*
	   Snippet for the customPost method.

	   requestOptions queryParameters accepts booleans
	*/

	// >SEPARATOR customPost requestOptions queryParameters accepts booleans
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPost(client.NewApiCustomPostRequest(
		"test/requestOptions").WithParameters(map[string]any{"query": "parameters"}).WithBody(map[string]any{"facet": "filters"}), suggestions.WithQueryParam("isItWorking", true))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPostOfSuggestions7() {
	/*
	   Snippet for the customPost method.

	   requestOptions queryParameters accepts integers
	*/

	// >SEPARATOR customPost requestOptions queryParameters accepts integers
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPost(client.NewApiCustomPostRequest(
		"test/requestOptions").WithParameters(map[string]any{"query": "parameters"}).WithBody(map[string]any{"facet": "filters"}), suggestions.WithQueryParam("myParam", 2))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPostOfSuggestions8() {
	/*
	   Snippet for the customPost method.

	   requestOptions queryParameters accepts list of string
	*/

	// >SEPARATOR customPost requestOptions queryParameters accepts list of string
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPost(client.NewApiCustomPostRequest(
		"test/requestOptions").WithParameters(map[string]any{"query": "parameters"}).WithBody(map[string]any{"facet": "filters"}), suggestions.WithQueryParam("myParam",
		[]string{"b and c", "d"}))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPostOfSuggestions9() {
	/*
	   Snippet for the customPost method.

	   requestOptions queryParameters accepts list of booleans
	*/

	// >SEPARATOR customPost requestOptions queryParameters accepts list of booleans
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPost(client.NewApiCustomPostRequest(
		"test/requestOptions").WithParameters(map[string]any{"query": "parameters"}).WithBody(map[string]any{"facet": "filters"}), suggestions.WithQueryParam("myParam",
		[]bool{true, true, false}))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPostOfSuggestions10() {
	/*
	   Snippet for the customPost method.

	   requestOptions queryParameters accepts list of integers
	*/

	// >SEPARATOR customPost requestOptions queryParameters accepts list of integers
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPost(client.NewApiCustomPostRequest(
		"test/requestOptions").WithParameters(map[string]any{"query": "parameters"}).WithBody(map[string]any{"facet": "filters"}), suggestions.WithQueryParam("myParam",
		[]int32{1, 2}))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPutOfSuggestions() {
	/*
	   Snippet for the customPut method.

	   allow put method for a custom path with minimal parameters
	*/

	// >SEPARATOR customPut allow put method for a custom path with minimal parameters
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPut(client.NewApiCustomPutRequest(
		"test/minimal"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPutOfSuggestions1() {
	/*
	   Snippet for the customPut method.

	   allow put method for a custom path with all parameters
	*/

	// >SEPARATOR customPut allow put method for a custom path with all parameters
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPut(client.NewApiCustomPutRequest(
		"test/all").WithParameters(map[string]any{"query": "parameters"}).WithBody(map[string]any{"body": "parameters"}))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForDeleteConfigOfSuggestions() {
	/*
	   Snippet for the deleteConfig method.

	   deleteConfig
	*/

	// >SEPARATOR deleteConfig default
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.DeleteConfig(client.NewApiDeleteConfigRequest(
		"<YOUR_INDEX_NAME>"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetAllConfigsOfSuggestions() {
	/*
	   Snippet for the getAllConfigs method.

	   getAllConfigs
	*/

	// >SEPARATOR getAllConfigs default
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetAllConfigs()
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetConfigOfSuggestions() {
	/*
	   Snippet for the getConfig method.

	   Retrieve QS config e2e
	*/

	// >SEPARATOR getConfig default
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetConfig(client.NewApiGetConfigRequest(
		"<YOUR_INDEX_NAME>"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetConfigStatusOfSuggestions() {
	/*
	   Snippet for the getConfigStatus method.

	   getConfigStatus
	*/

	// >SEPARATOR getConfigStatus default
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetConfigStatus(client.NewApiGetConfigStatusRequest(
		"<YOUR_INDEX_NAME>"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetLogFileOfSuggestions() {
	/*
	   Snippet for the getLogFile method.

	   getLogFile
	*/

	// >SEPARATOR getLogFile default
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetLogFile(client.NewApiGetLogFileRequest(
		"<YOUR_INDEX_NAME>"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForSetClientApiKeyOfSuggestions() {
	/*
	   Snippet for the setClientApiKey method.

	   switch API key
	*/

	// >SEPARATOR setClientApiKey default
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	err = client.SetClientApiKey(
		"updated-api-key")
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// SEPARATOR<
}
func SnippetForUpdateConfigOfSuggestions() {
	/*
	   Snippet for the updateConfig method.

	   updateConfig
	*/

	// >SEPARATOR updateConfig default
	// Initialize the client with your application region, eg. suggestions.ALGOLIA_APPLICATION_REGION
	client, err := suggestions.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", suggestions.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.UpdateConfig(client.NewApiUpdateConfigRequest(
		"<YOUR_INDEX_NAME>",
		suggestions.NewEmptyConfiguration().SetSourceIndices(
			[]suggestions.SourceIndex{*suggestions.NewEmptySourceIndex().SetIndexName("<YOUR_INDEX_NAME>").SetFacets(
				[]suggestions.Facet{*suggestions.NewEmptyFacet().SetAttribute("test")}).SetGenerate(
				[][]string{
					[]string{"facetA", "facetB"},
					[]string{"facetC"}})}).SetLanguages(suggestions.ArrayOfStringAsLanguages(
			[]string{"french"})).SetExclude(
			[]string{"test"})))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
