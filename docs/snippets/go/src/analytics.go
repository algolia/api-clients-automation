// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package snippets

// >IMPORT
import "github.com/algolia/algoliasearch-client-go/v4/algolia/analytics"

// IMPORT<

func SnippetForCustomDeleteOfAnalytics() {
	/*
	   Snippet for the customDelete method.

	   allow del method for a custom path with minimal parameters
	*/

	// >SEPARATOR customDelete allow del method for a custom path with minimal parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomDelete(client.NewApiCustomDeleteRequest(
		"test/minimal"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomDeleteOfAnalytics1() {
	/*
	   Snippet for the customDelete method.

	   allow del method for a custom path with all parameters
	*/

	// >SEPARATOR customDelete allow del method for a custom path with all parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomDelete(client.NewApiCustomDeleteRequest(
		"test/all").WithParameters(map[string]any{"query": "parameters"}))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomGetOfAnalytics() {
	/*
	   Snippet for the customGet method.

	   allow get method for a custom path with minimal parameters
	*/

	// >SEPARATOR customGet allow get method for a custom path with minimal parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomGet(client.NewApiCustomGetRequest(
		"test/minimal"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomGetOfAnalytics1() {
	/*
	   Snippet for the customGet method.

	   allow get method for a custom path with all parameters
	*/

	// >SEPARATOR customGet allow get method for a custom path with all parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomGet(client.NewApiCustomGetRequest(
		"test/all").WithParameters(map[string]any{"query": "parameters with space"}))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomGetOfAnalytics2() {
	/*
	   Snippet for the customGet method.

	   requestOptions should be escaped too
	*/

	// >SEPARATOR customGet requestOptions should be escaped too
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomGet(client.NewApiCustomGetRequest(
		"test/all").WithParameters(map[string]any{"query": "to be overriden"}), analytics.WithQueryParam("query", "parameters with space"), analytics.WithQueryParam("and an array",
		[]string{"array", "with spaces"}), analytics.WithHeaderParam("x-header-1", "spaces are left alone"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPostOfAnalytics() {
	/*
	   Snippet for the customPost method.

	   allow post method for a custom path with minimal parameters
	*/

	// >SEPARATOR customPost allow post method for a custom path with minimal parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPost(client.NewApiCustomPostRequest(
		"test/minimal"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPostOfAnalytics1() {
	/*
	   Snippet for the customPost method.

	   allow post method for a custom path with all parameters
	*/

	// >SEPARATOR customPost allow post method for a custom path with all parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPost(client.NewApiCustomPostRequest(
		"test/all").WithParameters(map[string]any{"query": "parameters"}).WithBody(map[string]any{"body": "parameters"}))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPostOfAnalytics2() {
	/*
	   Snippet for the customPost method.

	   requestOptions can override default query parameters
	*/

	// >SEPARATOR customPost requestOptions can override default query parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPost(client.NewApiCustomPostRequest(
		"test/requestOptions").WithParameters(map[string]any{"query": "parameters"}).WithBody(map[string]any{"facet": "filters"}), analytics.WithQueryParam("query", "myQueryParameter"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPostOfAnalytics3() {
	/*
	   Snippet for the customPost method.

	   requestOptions merges query parameters with default ones
	*/

	// >SEPARATOR customPost requestOptions merges query parameters with default ones
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPost(client.NewApiCustomPostRequest(
		"test/requestOptions").WithParameters(map[string]any{"query": "parameters"}).WithBody(map[string]any{"facet": "filters"}), analytics.WithQueryParam("query2", "myQueryParameter"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPostOfAnalytics4() {
	/*
	   Snippet for the customPost method.

	   requestOptions can override default headers
	*/

	// >SEPARATOR customPost requestOptions can override default headers
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPost(client.NewApiCustomPostRequest(
		"test/requestOptions").WithParameters(map[string]any{"query": "parameters"}).WithBody(map[string]any{"facet": "filters"}), analytics.WithHeaderParam("x-algolia-api-key", "ALGOLIA_API_KEY"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPostOfAnalytics5() {
	/*
	   Snippet for the customPost method.

	   requestOptions merges headers with default ones
	*/

	// >SEPARATOR customPost requestOptions merges headers with default ones
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPost(client.NewApiCustomPostRequest(
		"test/requestOptions").WithParameters(map[string]any{"query": "parameters"}).WithBody(map[string]any{"facet": "filters"}), analytics.WithHeaderParam("x-algolia-api-key", "ALGOLIA_API_KEY"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPostOfAnalytics6() {
	/*
	   Snippet for the customPost method.

	   requestOptions queryParameters accepts booleans
	*/

	// >SEPARATOR customPost requestOptions queryParameters accepts booleans
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPost(client.NewApiCustomPostRequest(
		"test/requestOptions").WithParameters(map[string]any{"query": "parameters"}).WithBody(map[string]any{"facet": "filters"}), analytics.WithQueryParam("isItWorking", true))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPostOfAnalytics7() {
	/*
	   Snippet for the customPost method.

	   requestOptions queryParameters accepts integers
	*/

	// >SEPARATOR customPost requestOptions queryParameters accepts integers
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPost(client.NewApiCustomPostRequest(
		"test/requestOptions").WithParameters(map[string]any{"query": "parameters"}).WithBody(map[string]any{"facet": "filters"}), analytics.WithQueryParam("myParam", 2))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPostOfAnalytics8() {
	/*
	   Snippet for the customPost method.

	   requestOptions queryParameters accepts list of string
	*/

	// >SEPARATOR customPost requestOptions queryParameters accepts list of string
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPost(client.NewApiCustomPostRequest(
		"test/requestOptions").WithParameters(map[string]any{"query": "parameters"}).WithBody(map[string]any{"facet": "filters"}), analytics.WithQueryParam("myParam",
		[]string{"b and c", "d"}))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPostOfAnalytics9() {
	/*
	   Snippet for the customPost method.

	   requestOptions queryParameters accepts list of booleans
	*/

	// >SEPARATOR customPost requestOptions queryParameters accepts list of booleans
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPost(client.NewApiCustomPostRequest(
		"test/requestOptions").WithParameters(map[string]any{"query": "parameters"}).WithBody(map[string]any{"facet": "filters"}), analytics.WithQueryParam("myParam",
		[]bool{true, true, false}))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPostOfAnalytics10() {
	/*
	   Snippet for the customPost method.

	   requestOptions queryParameters accepts list of integers
	*/

	// >SEPARATOR customPost requestOptions queryParameters accepts list of integers
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPost(client.NewApiCustomPostRequest(
		"test/requestOptions").WithParameters(map[string]any{"query": "parameters"}).WithBody(map[string]any{"facet": "filters"}), analytics.WithQueryParam("myParam",
		[]int32{1, 2}))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPutOfAnalytics() {
	/*
	   Snippet for the customPut method.

	   allow put method for a custom path with minimal parameters
	*/

	// >SEPARATOR customPut allow put method for a custom path with minimal parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPut(client.NewApiCustomPutRequest(
		"test/minimal"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForCustomPutOfAnalytics1() {
	/*
	   Snippet for the customPut method.

	   allow put method for a custom path with all parameters
	*/

	// >SEPARATOR customPut allow put method for a custom path with all parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.CustomPut(client.NewApiCustomPutRequest(
		"test/all").WithParameters(map[string]any{"query": "parameters"}).WithBody(map[string]any{"body": "parameters"}))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetAddToCartRateOfAnalytics() {
	/*
	   Snippet for the getAddToCartRate method.

	   get getAddToCartRate with minimal parameters
	*/

	// >SEPARATOR getAddToCartRate get getAddToCartRate with minimal parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetAddToCartRate(client.NewApiGetAddToCartRateRequest(
		"index"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetAddToCartRateOfAnalytics1() {
	/*
	   Snippet for the getAddToCartRate method.

	   get getAddToCartRate with all parameters
	*/

	// >SEPARATOR getAddToCartRate get getAddToCartRate with all parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetAddToCartRate(client.NewApiGetAddToCartRateRequest(
		"index").WithStartDate("1999-09-19").WithEndDate("2001-01-01").WithTags("tag"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetAverageClickPositionOfAnalytics() {
	/*
	   Snippet for the getAverageClickPosition method.

	   get getAverageClickPosition with minimal parameters
	*/

	// >SEPARATOR getAverageClickPosition get getAverageClickPosition with minimal parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetAverageClickPosition(client.NewApiGetAverageClickPositionRequest(
		"index"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetAverageClickPositionOfAnalytics1() {
	/*
	   Snippet for the getAverageClickPosition method.

	   get getAverageClickPosition with all parameters
	*/

	// >SEPARATOR getAverageClickPosition get getAverageClickPosition with all parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetAverageClickPosition(client.NewApiGetAverageClickPositionRequest(
		"index").WithStartDate("1999-09-19").WithEndDate("2001-01-01").WithTags("tag"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetClickPositionsOfAnalytics() {
	/*
	   Snippet for the getClickPositions method.

	   get getClickPositions with minimal parameters
	*/

	// >SEPARATOR getClickPositions get getClickPositions with minimal parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetClickPositions(client.NewApiGetClickPositionsRequest(
		"index"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetClickPositionsOfAnalytics1() {
	/*
	   Snippet for the getClickPositions method.

	   get getClickPositions with all parameters
	*/

	// >SEPARATOR getClickPositions get getClickPositions with all parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetClickPositions(client.NewApiGetClickPositionsRequest(
		"index").WithStartDate("1999-09-19").WithEndDate("2001-01-01").WithTags("tag"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetClickThroughRateOfAnalytics() {
	/*
	   Snippet for the getClickThroughRate method.

	   get getClickThroughRate with minimal parameters
	*/

	// >SEPARATOR getClickThroughRate get getClickThroughRate with minimal parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetClickThroughRate(client.NewApiGetClickThroughRateRequest(
		"index"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetClickThroughRateOfAnalytics1() {
	/*
	   Snippet for the getClickThroughRate method.

	   get getClickThroughRate with all parameters
	*/

	// >SEPARATOR getClickThroughRate get getClickThroughRate with all parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetClickThroughRate(client.NewApiGetClickThroughRateRequest(
		"index").WithStartDate("1999-09-19").WithEndDate("2001-01-01").WithTags("tag"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetConversionRateOfAnalytics() {
	/*
	   Snippet for the getConversionRate method.

	   get getConversationRate with minimal parameters
	*/

	// >SEPARATOR getConversionRate get getConversationRate with minimal parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetConversionRate(client.NewApiGetConversionRateRequest(
		"index"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetConversionRateOfAnalytics1() {
	/*
	   Snippet for the getConversionRate method.

	   get getConversationRate with all parameters
	*/

	// >SEPARATOR getConversionRate get getConversationRate with all parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetConversionRate(client.NewApiGetConversionRateRequest(
		"index").WithStartDate("1999-09-19").WithEndDate("2001-01-01").WithTags("tag"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetNoClickRateOfAnalytics() {
	/*
	   Snippet for the getNoClickRate method.

	   get getNoClickRate with minimal parameters
	*/

	// >SEPARATOR getNoClickRate get getNoClickRate with minimal parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetNoClickRate(client.NewApiGetNoClickRateRequest(
		"index"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetNoClickRateOfAnalytics1() {
	/*
	   Snippet for the getNoClickRate method.

	   get getNoClickRate with all parameters
	*/

	// >SEPARATOR getNoClickRate get getNoClickRate with all parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetNoClickRate(client.NewApiGetNoClickRateRequest(
		"index").WithStartDate("1999-09-19").WithEndDate("2001-01-01").WithTags("tag"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetNoResultsRateOfAnalytics() {
	/*
	   Snippet for the getNoResultsRate method.

	   get getNoResultsRate with minimal parameters
	*/

	// >SEPARATOR getNoResultsRate get getNoResultsRate with minimal parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetNoResultsRate(client.NewApiGetNoResultsRateRequest(
		"index"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetNoResultsRateOfAnalytics1() {
	/*
	   Snippet for the getNoResultsRate method.

	   get getNoResultsRate with all parameters
	*/

	// >SEPARATOR getNoResultsRate get getNoResultsRate with all parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetNoResultsRate(client.NewApiGetNoResultsRateRequest(
		"index").WithStartDate("1999-09-19").WithEndDate("2001-01-01").WithTags("tag"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetPurchaseRateOfAnalytics() {
	/*
	   Snippet for the getPurchaseRate method.

	   get getPurchaseRate with minimal parameters
	*/

	// >SEPARATOR getPurchaseRate get getPurchaseRate with minimal parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetPurchaseRate(client.NewApiGetPurchaseRateRequest(
		"index"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetPurchaseRateOfAnalytics1() {
	/*
	   Snippet for the getPurchaseRate method.

	   get getPurchaseRate with all parameters
	*/

	// >SEPARATOR getPurchaseRate get getPurchaseRate with all parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetPurchaseRate(client.NewApiGetPurchaseRateRequest(
		"index").WithStartDate("1999-09-19").WithEndDate("2001-01-01").WithTags("tag"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetRevenueOfAnalytics() {
	/*
	   Snippet for the getRevenue method.

	   get getRevenue with minimal parameters
	*/

	// >SEPARATOR getRevenue get getRevenue with minimal parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetRevenue(client.NewApiGetRevenueRequest(
		"index"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetRevenueOfAnalytics1() {
	/*
	   Snippet for the getRevenue method.

	   get getRevenue with all parameters
	*/

	// >SEPARATOR getRevenue get getRevenue with all parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetRevenue(client.NewApiGetRevenueRequest(
		"index").WithStartDate("1999-09-19").WithEndDate("2001-01-01").WithTags("tag"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetSearchesCountOfAnalytics() {
	/*
	   Snippet for the getSearchesCount method.

	   get getSearchesCount with minimal parameters
	*/

	// >SEPARATOR getSearchesCount get getSearchesCount with minimal parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetSearchesCount(client.NewApiGetSearchesCountRequest(
		"index"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetSearchesCountOfAnalytics1() {
	/*
	   Snippet for the getSearchesCount method.

	   get getSearchesCount with all parameters
	*/

	// >SEPARATOR getSearchesCount get getSearchesCount with all parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetSearchesCount(client.NewApiGetSearchesCountRequest(
		"index").WithStartDate("1999-09-19").WithEndDate("2001-01-01").WithTags("tag"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetSearchesNoClicksOfAnalytics() {
	/*
	   Snippet for the getSearchesNoClicks method.

	   get getSearchesNoClicks with minimal parameters
	*/

	// >SEPARATOR getSearchesNoClicks get getSearchesNoClicks with minimal parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetSearchesNoClicks(client.NewApiGetSearchesNoClicksRequest(
		"index"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetSearchesNoClicksOfAnalytics1() {
	/*
	   Snippet for the getSearchesNoClicks method.

	   get getSearchesNoClicks with all parameters
	*/

	// >SEPARATOR getSearchesNoClicks get getSearchesNoClicks with all parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetSearchesNoClicks(client.NewApiGetSearchesNoClicksRequest(
		"index").WithStartDate("1999-09-19").WithEndDate("2001-01-01").WithLimit(21).WithOffset(42).WithTags("tag"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetSearchesNoResultsOfAnalytics() {
	/*
	   Snippet for the getSearchesNoResults method.

	   get getSearchesNoResults with minimal parameters
	*/

	// >SEPARATOR getSearchesNoResults get getSearchesNoResults with minimal parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetSearchesNoResults(client.NewApiGetSearchesNoResultsRequest(
		"index"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetSearchesNoResultsOfAnalytics1() {
	/*
	   Snippet for the getSearchesNoResults method.

	   get getSearchesNoResults with all parameters
	*/

	// >SEPARATOR getSearchesNoResults get getSearchesNoResults with all parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetSearchesNoResults(client.NewApiGetSearchesNoResultsRequest(
		"index").WithStartDate("1999-09-19").WithEndDate("2001-01-01").WithLimit(21).WithOffset(42).WithTags("tag"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetStatusOfAnalytics() {
	/*
	   Snippet for the getStatus method.

	   get getStatus with minimal parameters
	*/

	// >SEPARATOR getStatus default
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetStatus(client.NewApiGetStatusRequest(
		"index"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetTopCountriesOfAnalytics() {
	/*
	   Snippet for the getTopCountries method.

	   get getTopCountries with minimal parameters
	*/

	// >SEPARATOR getTopCountries get getTopCountries with minimal parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetTopCountries(client.NewApiGetTopCountriesRequest(
		"index"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetTopCountriesOfAnalytics1() {
	/*
	   Snippet for the getTopCountries method.

	   get getTopCountries with all parameters
	*/

	// >SEPARATOR getTopCountries get getTopCountries with all parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetTopCountries(client.NewApiGetTopCountriesRequest(
		"index").WithStartDate("1999-09-19").WithEndDate("2001-01-01").WithLimit(21).WithOffset(42).WithTags("tag"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetTopFilterAttributesOfAnalytics() {
	/*
	   Snippet for the getTopFilterAttributes method.

	   get getTopFilterAttributes with minimal parameters
	*/

	// >SEPARATOR getTopFilterAttributes get getTopFilterAttributes with minimal parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetTopFilterAttributes(client.NewApiGetTopFilterAttributesRequest(
		"index"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetTopFilterAttributesOfAnalytics1() {
	/*
	   Snippet for the getTopFilterAttributes method.

	   get getTopFilterAttributes with all parameters
	*/

	// >SEPARATOR getTopFilterAttributes get getTopFilterAttributes with all parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetTopFilterAttributes(client.NewApiGetTopFilterAttributesRequest(
		"index").WithSearch("mySearch").WithStartDate("1999-09-19").WithEndDate("2001-01-01").WithLimit(21).WithOffset(42).WithTags("tag"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetTopFilterForAttributeOfAnalytics() {
	/*
	   Snippet for the getTopFilterForAttribute method.

	   get getTopFilterForAttribute with minimal parameters
	*/

	// >SEPARATOR getTopFilterForAttribute get getTopFilterForAttribute with minimal parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetTopFilterForAttribute(client.NewApiGetTopFilterForAttributeRequest(
		"myAttribute", "index"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetTopFilterForAttributeOfAnalytics1() {
	/*
	   Snippet for the getTopFilterForAttribute method.

	   get getTopFilterForAttribute with minimal parameters and multiple attributes
	*/

	// >SEPARATOR getTopFilterForAttribute get getTopFilterForAttribute with minimal parameters and multiple attributes
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetTopFilterForAttribute(client.NewApiGetTopFilterForAttributeRequest(
		"myAttribute1,myAttribute2", "index"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetTopFilterForAttributeOfAnalytics2() {
	/*
	   Snippet for the getTopFilterForAttribute method.

	   get getTopFilterForAttribute with all parameters
	*/

	// >SEPARATOR getTopFilterForAttribute get getTopFilterForAttribute with all parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetTopFilterForAttribute(client.NewApiGetTopFilterForAttributeRequest(
		"myAttribute", "index").WithSearch("mySearch").WithStartDate("1999-09-19").WithEndDate("2001-01-01").WithLimit(21).WithOffset(42).WithTags("tag"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetTopFilterForAttributeOfAnalytics3() {
	/*
	   Snippet for the getTopFilterForAttribute method.

	   get getTopFilterForAttribute with all parameters and multiple attributes
	*/

	// >SEPARATOR getTopFilterForAttribute get getTopFilterForAttribute with all parameters and multiple attributes
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetTopFilterForAttribute(client.NewApiGetTopFilterForAttributeRequest(
		"myAttribute1,myAttribute2", "index").WithSearch("mySearch").WithStartDate("1999-09-19").WithEndDate("2001-01-01").WithLimit(21).WithOffset(42).WithTags("tag"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetTopFiltersNoResultsOfAnalytics() {
	/*
	   Snippet for the getTopFiltersNoResults method.

	   get getTopFiltersNoResults with minimal parameters
	*/

	// >SEPARATOR getTopFiltersNoResults get getTopFiltersNoResults with minimal parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetTopFiltersNoResults(client.NewApiGetTopFiltersNoResultsRequest(
		"index"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetTopFiltersNoResultsOfAnalytics1() {
	/*
	   Snippet for the getTopFiltersNoResults method.

	   get getTopFiltersNoResults with all parameters
	*/

	// >SEPARATOR getTopFiltersNoResults get getTopFiltersNoResults with all parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetTopFiltersNoResults(client.NewApiGetTopFiltersNoResultsRequest(
		"index").WithSearch("mySearch").WithStartDate("1999-09-19").WithEndDate("2001-01-01").WithLimit(21).WithOffset(42).WithTags("tag"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetTopHitsOfAnalytics() {
	/*
	   Snippet for the getTopHits method.

	   get getTopHits with minimal parameters
	*/

	// >SEPARATOR getTopHits get getTopHits with minimal parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetTopHits(client.NewApiGetTopHitsRequest(
		"index"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetTopHitsOfAnalytics1() {
	/*
	   Snippet for the getTopHits method.

	   get getTopHits with all parameters
	*/

	// >SEPARATOR getTopHits get getTopHits with all parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetTopHits(client.NewApiGetTopHitsRequest(
		"index").WithSearch("mySearch").WithClickAnalytics(true).WithRevenueAnalytics(true).WithStartDate("1999-09-19").WithEndDate("2001-01-01").WithLimit(21).WithOffset(42).WithTags("tag"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetTopSearchesOfAnalytics() {
	/*
	   Snippet for the getTopSearches method.

	   get getTopSearches with minimal parameters
	*/

	// >SEPARATOR getTopSearches get getTopSearches with minimal parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetTopSearches(client.NewApiGetTopSearchesRequest(
		"index"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetTopSearchesOfAnalytics1() {
	/*
	   Snippet for the getTopSearches method.

	   get getTopSearches with all parameters
	*/

	// >SEPARATOR getTopSearches get getTopSearches with all parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetTopSearches(client.NewApiGetTopSearchesRequest(
		"index").WithClickAnalytics(true).WithRevenueAnalytics(true).WithStartDate("1999-09-19").WithEndDate("2001-01-01").WithOrderBy(analytics.OrderBy("searchCount")).WithDirection(analytics.Direction("asc")).WithLimit(21).WithOffset(42).WithTags("tag"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetUsersCountOfAnalytics() {
	/*
	   Snippet for the getUsersCount method.

	   get getUsersCount with minimal parameters
	*/

	// >SEPARATOR getUsersCount get getUsersCount with minimal parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetUsersCount(client.NewApiGetUsersCountRequest(
		"index"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForGetUsersCountOfAnalytics1() {
	/*
	   Snippet for the getUsersCount method.

	   get getUsersCount with all parameters
	*/

	// >SEPARATOR getUsersCount get getUsersCount with all parameters
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	response, err := client.GetUsersCount(client.NewApiGetUsersCountRequest(
		"index").WithStartDate("1999-09-19").WithEndDate("2001-01-01").WithTags("tag"))
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// use the model directly
	print(response)
	// SEPARATOR<
}
func SnippetForSetClientApiKeyOfAnalytics() {
	/*
	   Snippet for the setClientApiKey method.

	   switch API key
	*/

	// >SEPARATOR setClientApiKey default
	// Initialize the client with your application region, eg. analytics.ALGOLIA_APPLICATION_REGION
	client, err := analytics.NewClient("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", analytics.US)
	if err != nil {
		// The client can fail to initialize if you pass an invalid parameter.
		panic(err)
	}

	// Call the API
	err = client.SetClientApiKey(
		"updated-api-key")
	if err != nil {
		// handle the eventual error
		panic(err)
	}

	// >LOG
	// SEPARATOR<
}
