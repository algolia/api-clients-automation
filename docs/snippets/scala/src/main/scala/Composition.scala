// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package algoliasearch.methods.snippets

import scala.concurrent.duration.Duration

// >IMPORT
import algoliasearch.api.CompositionClient
import algoliasearch.config.*

// IMPORT<
import algoliasearch.composition.*

import org.json4s.*
import org.json4s.native.JsonParser.*
import scala.concurrent.{Await, ExecutionContextExecutor}

class SnippetCompositionClient {
  implicit val ec: ExecutionContextExecutor = scala.concurrent.ExecutionContext.global
  implicit val formats: Formats = JsonSupport.format

  /** Snippet for the search method.
    *
    * search
    */
  def snippetForCompositionClientSearch(): Unit = {
    // >SEPARATOR search default
    // Initialize the client
    val client = CompositionClient(appId = "ALGOLIA_APPLICATION_ID", apiKey = "ALGOLIA_API_KEY")

    // Call the API
    val response = Await.result(
      client.search(
        compositionID = "foo",
        requestBody = RequestBody(
          params = Some(
            Params(
              query = Some("batman")
            )
          )
        )
      ),
      Duration(100, "sec")
    )
    // >LOG
    // SEPARATOR<
  }

  /** Snippet for the searchForFacetValues method.
    *
    * searchForFacetValues
    */
  def snippetForCompositionClientSearchForFacetValues(): Unit = {
    // >SEPARATOR searchForFacetValues default
    // Initialize the client
    val client = CompositionClient(appId = "ALGOLIA_APPLICATION_ID", apiKey = "ALGOLIA_API_KEY")

    // Call the API
    val response = Await.result(
      client.searchForFacetValues(
        compositionID = "foo",
        facetName = "brand",
        searchForFacetValuesRequest = Some(
          SearchForFacetValuesRequest(
            params = Some(
              SearchForFacetValuesParams(
                maxFacetHits = Some(10)
              )
            )
          )
        )
      ),
      Duration(100, "sec")
    )
    // >LOG
    // SEPARATOR<
  }

}
