// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
// >IMPORT
using Algolia.Search.Clients;
using Algolia.Search.Models.Analytics;
// IMPORT<
using Action = Algolia.Search.Models.Ingestion.Action;

public class SnippetAnalyticsClient
{
  /// <summary>
  /// Snippet for the CustomDelete method.
  ///
  /// allow del method for a custom path with minimal parameters
  /// </summary>
  public async Task SnippetForAnalyticsClientCustomDelete()
  {
    // >SEPARATOR customDelete default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    var response = await client.CustomDeleteAsync("test/minimal");
    // >LOG
    // SEPARATOR<
  }

  /// <summary>
  /// Snippet for the CustomGet method.
  ///
  /// allow get method for a custom path with minimal parameters
  /// </summary>
  public async Task SnippetForAnalyticsClientCustomGet()
  {
    // >SEPARATOR customGet default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    var response = await client.CustomGetAsync("test/minimal");
    // >LOG
    // SEPARATOR<
  }

  /// <summary>
  /// Snippet for the CustomPost method.
  ///
  /// allow post method for a custom path with minimal parameters
  /// </summary>
  public async Task SnippetForAnalyticsClientCustomPost()
  {
    // >SEPARATOR customPost default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    var response = await client.CustomPostAsync("test/minimal");
    // >LOG
    // SEPARATOR<
  }

  /// <summary>
  /// Snippet for the CustomPut method.
  ///
  /// allow put method for a custom path with minimal parameters
  /// </summary>
  public async Task SnippetForAnalyticsClientCustomPut()
  {
    // >SEPARATOR customPut default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    var response = await client.CustomPutAsync("test/minimal");
    // >LOG
    // SEPARATOR<
  }

  /// <summary>
  /// Snippet for the GetAddToCartRate method.
  ///
  /// get getAddToCartRate with minimal parameters
  /// </summary>
  public async Task SnippetForAnalyticsClientGetAddToCartRate()
  {
    // >SEPARATOR getAddToCartRate default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    var response = await client.GetAddToCartRateAsync("index");
    // >LOG
    // SEPARATOR<
  }

  /// <summary>
  /// Snippet for the GetAverageClickPosition method.
  ///
  /// get getAverageClickPosition with minimal parameters
  /// </summary>
  public async Task SnippetForAnalyticsClientGetAverageClickPosition()
  {
    // >SEPARATOR getAverageClickPosition default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    var response = await client.GetAverageClickPositionAsync("index");
    // >LOG
    // SEPARATOR<
  }

  /// <summary>
  /// Snippet for the GetClickPositions method.
  ///
  /// get getClickPositions with minimal parameters
  /// </summary>
  public async Task SnippetForAnalyticsClientGetClickPositions()
  {
    // >SEPARATOR getClickPositions default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    var response = await client.GetClickPositionsAsync("index");
    // >LOG
    // SEPARATOR<
  }

  /// <summary>
  /// Snippet for the GetClickThroughRate method.
  ///
  /// get getClickThroughRate with minimal parameters
  /// </summary>
  public async Task SnippetForAnalyticsClientGetClickThroughRate()
  {
    // >SEPARATOR getClickThroughRate default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    var response = await client.GetClickThroughRateAsync("index");
    // >LOG
    // SEPARATOR<
  }

  /// <summary>
  /// Snippet for the GetConversionRate method.
  ///
  /// get getConversationRate with minimal parameters
  /// </summary>
  public async Task SnippetForAnalyticsClientGetConversionRate()
  {
    // >SEPARATOR getConversionRate default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    var response = await client.GetConversionRateAsync("index");
    // >LOG
    // SEPARATOR<
  }

  /// <summary>
  /// Snippet for the GetNoClickRate method.
  ///
  /// get getNoClickRate with minimal parameters
  /// </summary>
  public async Task SnippetForAnalyticsClientGetNoClickRate()
  {
    // >SEPARATOR getNoClickRate default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    var response = await client.GetNoClickRateAsync("index");
    // >LOG
    // SEPARATOR<
  }

  /// <summary>
  /// Snippet for the GetNoResultsRate method.
  ///
  /// get getNoResultsRate with minimal parameters
  /// </summary>
  public async Task SnippetForAnalyticsClientGetNoResultsRate()
  {
    // >SEPARATOR getNoResultsRate default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    var response = await client.GetNoResultsRateAsync("index");
    // >LOG
    // SEPARATOR<
  }

  /// <summary>
  /// Snippet for the GetPurchaseRate method.
  ///
  /// get getPurchaseRate with minimal parameters
  /// </summary>
  public async Task SnippetForAnalyticsClientGetPurchaseRate()
  {
    // >SEPARATOR getPurchaseRate default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    var response = await client.GetPurchaseRateAsync("index");
    // >LOG
    // SEPARATOR<
  }

  /// <summary>
  /// Snippet for the GetRevenue method.
  ///
  /// get getRevenue with minimal parameters
  /// </summary>
  public async Task SnippetForAnalyticsClientGetRevenue()
  {
    // >SEPARATOR getRevenue default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    var response = await client.GetRevenueAsync("index");
    // >LOG
    // SEPARATOR<
  }

  /// <summary>
  /// Snippet for the GetSearchesCount method.
  ///
  /// get getSearchesCount with minimal parameters
  /// </summary>
  public async Task SnippetForAnalyticsClientGetSearchesCount()
  {
    // >SEPARATOR getSearchesCount default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    var response = await client.GetSearchesCountAsync("index");
    // >LOG
    // SEPARATOR<
  }

  /// <summary>
  /// Snippet for the GetSearchesNoClicks method.
  ///
  /// get getSearchesNoClicks with minimal parameters
  /// </summary>
  public async Task SnippetForAnalyticsClientGetSearchesNoClicks()
  {
    // >SEPARATOR getSearchesNoClicks default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    var response = await client.GetSearchesNoClicksAsync("index");
    // >LOG
    // SEPARATOR<
  }

  /// <summary>
  /// Snippet for the GetSearchesNoResults method.
  ///
  /// get getSearchesNoResults with minimal parameters
  /// </summary>
  public async Task SnippetForAnalyticsClientGetSearchesNoResults()
  {
    // >SEPARATOR getSearchesNoResults default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    var response = await client.GetSearchesNoResultsAsync("index");
    // >LOG
    // SEPARATOR<
  }

  /// <summary>
  /// Snippet for the GetStatus method.
  ///
  /// get getStatus with minimal parameters
  /// </summary>
  public async Task SnippetForAnalyticsClientGetStatus()
  {
    // >SEPARATOR getStatus default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    var response = await client.GetStatusAsync("index");
    // >LOG
    // SEPARATOR<
  }

  /// <summary>
  /// Snippet for the GetTopCountries method.
  ///
  /// get getTopCountries with minimal parameters
  /// </summary>
  public async Task SnippetForAnalyticsClientGetTopCountries()
  {
    // >SEPARATOR getTopCountries default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    var response = await client.GetTopCountriesAsync("index");
    // >LOG
    // SEPARATOR<
  }

  /// <summary>
  /// Snippet for the GetTopFilterAttributes method.
  ///
  /// get getTopFilterAttributes with minimal parameters
  /// </summary>
  public async Task SnippetForAnalyticsClientGetTopFilterAttributes()
  {
    // >SEPARATOR getTopFilterAttributes default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    var response = await client.GetTopFilterAttributesAsync("index");
    // >LOG
    // SEPARATOR<
  }

  /// <summary>
  /// Snippet for the GetTopFilterForAttribute method.
  ///
  /// get getTopFilterForAttribute with minimal parameters
  /// </summary>
  public async Task SnippetForAnalyticsClientGetTopFilterForAttribute()
  {
    // >SEPARATOR getTopFilterForAttribute default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    var response = await client.GetTopFilterForAttributeAsync("myAttribute", "index");
    // >LOG
    // SEPARATOR<
  }

  /// <summary>
  /// Snippet for the GetTopFiltersNoResults method.
  ///
  /// get getTopFiltersNoResults with minimal parameters
  /// </summary>
  public async Task SnippetForAnalyticsClientGetTopFiltersNoResults()
  {
    // >SEPARATOR getTopFiltersNoResults default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    var response = await client.GetTopFiltersNoResultsAsync("index");
    // >LOG
    // SEPARATOR<
  }

  /// <summary>
  /// Snippet for the GetTopHits method.
  ///
  /// get getTopHits with minimal parameters
  /// </summary>
  public async Task SnippetForAnalyticsClientGetTopHits()
  {
    // >SEPARATOR getTopHits default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    var response = await client.GetTopHitsAsync("index");
    // >LOG
    // SEPARATOR<
  }

  /// <summary>
  /// Snippet for the GetTopSearches method.
  ///
  /// get getTopSearches with minimal parameters
  /// </summary>
  public async Task SnippetForAnalyticsClientGetTopSearches()
  {
    // >SEPARATOR getTopSearches default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    var response = await client.GetTopSearchesAsync("index");
    // >LOG
    // SEPARATOR<
  }

  /// <summary>
  /// Snippet for the GetUsersCount method.
  ///
  /// get getUsersCount with minimal parameters
  /// </summary>
  public async Task SnippetForAnalyticsClientGetUsersCount()
  {
    // >SEPARATOR getUsersCount default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    var response = await client.GetUsersCountAsync("index");
    // >LOG
    // SEPARATOR<
  }

  /// <summary>
  /// Snippet for the SetClientApiKey method.
  ///
  /// switch API key
  /// </summary>
  public async Task SnippetForAnalyticsClientSetClientApiKey()
  {
    // >SEPARATOR setClientApiKey default
    // Initialize the client
    var client = new AnalyticsClient(
      new AnalyticsConfig("ALGOLIA_APPLICATION_ID", "ALGOLIA_API_KEY", "ALGOLIA_APPLICATION_REGION")
    );

    // Call the API
    client.SetClientApiKey("updated-api-key");
    // >LOG
    // SEPARATOR<
  }
}
