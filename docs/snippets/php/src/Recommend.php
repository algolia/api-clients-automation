<?php

// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

namespace Algolia\AlgoliaSearch\Snippets;

// >IMPORT
use Algolia\AlgoliaSearch\Api\RecommendClient;

// IMPORT<

class SnippetRecommendClient
{
    /**
     * Snippet for the BatchRecommendRules method.
     *
     * batch recommend rules
     */
    public function snippetForBatchRecommendRules(): void
    {
        // >SEPARATOR batchRecommendRules default
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->batchRecommendRules(
            '<YOUR_INDEX_NAME>',
            'related-products',
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the CustomDelete method.
     *
     * allow del method for a custom path with minimal parameters
     */
    public function snippetForCustomDelete(): void
    {
        // >SEPARATOR customDelete allow del method for a custom path with minimal parameters
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->customDelete(
            'test/minimal',
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the CustomDelete method.
     *
     * allow del method for a custom path with all parameters
     */
    public function snippetForCustomDelete1(): void
    {
        // >SEPARATOR customDelete allow del method for a custom path with all parameters
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->customDelete(
            'test/all',
            ['query' => 'parameters',
            ],
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the CustomGet method.
     *
     * allow get method for a custom path with minimal parameters
     */
    public function snippetForCustomGet(): void
    {
        // >SEPARATOR customGet allow get method for a custom path with minimal parameters
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->customGet(
            'test/minimal',
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the CustomGet method.
     *
     * allow get method for a custom path with all parameters
     */
    public function snippetForCustomGet1(): void
    {
        // >SEPARATOR customGet allow get method for a custom path with all parameters
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->customGet(
            'test/all',
            ['query' => 'parameters with space',
            ],
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the CustomGet method.
     *
     * requestOptions should be escaped too
     */
    public function snippetForCustomGet2(): void
    {
        // >SEPARATOR customGet requestOptions should be escaped too
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->customGet(
            'test/all',
            ['query' => 'to be overriden',
            ],
            [
                'queryParameters' => [
                    'query' => 'parameters with space',
                    'and an array' => ['array', 'with spaces',
                    ],
                ],
                'headers' => [
                    'x-header-1' => 'spaces are left alone',
                ],
            ]
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the CustomPost method.
     *
     * allow post method for a custom path with minimal parameters
     */
    public function snippetForCustomPost(): void
    {
        // >SEPARATOR customPost allow post method for a custom path with minimal parameters
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->customPost(
            'test/minimal',
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the CustomPost method.
     *
     * allow post method for a custom path with all parameters
     */
    public function snippetForCustomPost1(): void
    {
        // >SEPARATOR customPost allow post method for a custom path with all parameters
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->customPost(
            'test/all',
            ['query' => 'parameters',
            ],
            ['body' => 'parameters',
            ],
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the CustomPost method.
     *
     * requestOptions can override default query parameters
     */
    public function snippetForCustomPost2(): void
    {
        // >SEPARATOR customPost requestOptions can override default query parameters
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->customPost(
            'test/requestOptions',
            ['query' => 'parameters',
            ],
            ['facet' => 'filters',
            ],
            [
                'queryParameters' => [
                    'query' => 'myQueryParameter',
                ], ]
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the CustomPost method.
     *
     * requestOptions merges query parameters with default ones
     */
    public function snippetForCustomPost3(): void
    {
        // >SEPARATOR customPost requestOptions merges query parameters with default ones
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->customPost(
            'test/requestOptions',
            ['query' => 'parameters',
            ],
            ['facet' => 'filters',
            ],
            [
                'queryParameters' => [
                    'query2' => 'myQueryParameter',
                ], ]
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the CustomPost method.
     *
     * requestOptions can override default headers
     */
    public function snippetForCustomPost4(): void
    {
        // >SEPARATOR customPost requestOptions can override default headers
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->customPost(
            'test/requestOptions',
            ['query' => 'parameters',
            ],
            ['facet' => 'filters',
            ],
            [
                'headers' => [
                    'x-algolia-api-key' => 'ALGOLIA_API_KEY',
                ],
            ]
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the CustomPost method.
     *
     * requestOptions merges headers with default ones
     */
    public function snippetForCustomPost5(): void
    {
        // >SEPARATOR customPost requestOptions merges headers with default ones
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->customPost(
            'test/requestOptions',
            ['query' => 'parameters',
            ],
            ['facet' => 'filters',
            ],
            [
                'headers' => [
                    'x-algolia-api-key' => 'ALGOLIA_API_KEY',
                ],
            ]
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the CustomPost method.
     *
     * requestOptions queryParameters accepts booleans
     */
    public function snippetForCustomPost6(): void
    {
        // >SEPARATOR customPost requestOptions queryParameters accepts booleans
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->customPost(
            'test/requestOptions',
            ['query' => 'parameters',
            ],
            ['facet' => 'filters',
            ],
            [
                'queryParameters' => [
                    'isItWorking' => true,
                ], ]
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the CustomPost method.
     *
     * requestOptions queryParameters accepts integers
     */
    public function snippetForCustomPost7(): void
    {
        // >SEPARATOR customPost requestOptions queryParameters accepts integers
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->customPost(
            'test/requestOptions',
            ['query' => 'parameters',
            ],
            ['facet' => 'filters',
            ],
            [
                'queryParameters' => [
                    'myParam' => 2,
                ], ]
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the CustomPost method.
     *
     * requestOptions queryParameters accepts list of string
     */
    public function snippetForCustomPost8(): void
    {
        // >SEPARATOR customPost requestOptions queryParameters accepts list of string
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->customPost(
            'test/requestOptions',
            ['query' => 'parameters',
            ],
            ['facet' => 'filters',
            ],
            [
                'queryParameters' => [
                    'myParam' => ['b and c', 'd',
                    ],
                ], ]
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the CustomPost method.
     *
     * requestOptions queryParameters accepts list of booleans
     */
    public function snippetForCustomPost9(): void
    {
        // >SEPARATOR customPost requestOptions queryParameters accepts list of booleans
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->customPost(
            'test/requestOptions',
            ['query' => 'parameters',
            ],
            ['facet' => 'filters',
            ],
            [
                'queryParameters' => [
                    'myParam' => [true, true, false,
                    ],
                ], ]
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the CustomPost method.
     *
     * requestOptions queryParameters accepts list of integers
     */
    public function snippetForCustomPost10(): void
    {
        // >SEPARATOR customPost requestOptions queryParameters accepts list of integers
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->customPost(
            'test/requestOptions',
            ['query' => 'parameters',
            ],
            ['facet' => 'filters',
            ],
            [
                'queryParameters' => [
                    'myParam' => [1, 2,
                    ],
                ], ]
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the CustomPut method.
     *
     * allow put method for a custom path with minimal parameters
     */
    public function snippetForCustomPut(): void
    {
        // >SEPARATOR customPut allow put method for a custom path with minimal parameters
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->customPut(
            'test/minimal',
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the CustomPut method.
     *
     * allow put method for a custom path with all parameters
     */
    public function snippetForCustomPut1(): void
    {
        // >SEPARATOR customPut allow put method for a custom path with all parameters
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->customPut(
            'test/all',
            ['query' => 'parameters',
            ],
            ['body' => 'parameters',
            ],
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the DeleteRecommendRule method.
     *
     * deleteRecommendRule
     */
    public function snippetForDeleteRecommendRule(): void
    {
        // >SEPARATOR deleteRecommendRule default
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->deleteRecommendRule(
            '<YOUR_INDEX_NAME>',
            'related-products',
            'objectID',
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the GetRecommendRule method.
     *
     * getRecommendRule
     */
    public function snippetForGetRecommendRule(): void
    {
        // >SEPARATOR getRecommendRule default
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->getRecommendRule(
            '<YOUR_INDEX_NAME>',
            'related-products',
            'objectID',
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the GetRecommendStatus method.
     *
     * getRecommendStatus
     */
    public function snippetForGetRecommendStatus(): void
    {
        // >SEPARATOR getRecommendStatus default
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->getRecommendStatus(
            '<YOUR_INDEX_NAME>',
            'related-products',
            12345,
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the GetRecommendations method.
     *
     * get recommendations for recommend model with minimal parameters
     */
    public function snippetForGetRecommendations(): void
    {
        // >SEPARATOR getRecommendations get recommendations for recommend model with minimal parameters
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->getRecommendations(
            ['requests' => [
                ['indexName' => '<YOUR_INDEX_NAME>',
                    'objectID' => 'objectID',
                    'model' => 'related-products',
                    'threshold' => 42.1,
                ],
            ],
            ],
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the GetRecommendations method.
     *
     * get recommendations with e2e to check oneOf model
     */
    public function snippetForGetRecommendations1(): void
    {
        // >SEPARATOR getRecommendations get recommendations with e2e to check oneOf model
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->getRecommendations(
            ['requests' => [
                ['indexName' => '<YOUR_INDEX_NAME>',
                    'objectID' => 'Æon Flux',
                    'model' => 'related-products',
                    'threshold' => 20.0,
                    'maxRecommendations' => 2,
                ],
            ],
            ],
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the GetRecommendations method.
     *
     * get recommendations for recommend model with all parameters
     */
    public function snippetForGetRecommendations2(): void
    {
        // >SEPARATOR getRecommendations get recommendations for recommend model with all parameters
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->getRecommendations(
            ['requests' => [
                ['indexName' => '<YOUR_INDEX_NAME>',
                    'objectID' => 'objectID',
                    'model' => 'related-products',
                    'threshold' => 42.1,
                    'maxRecommendations' => 10,
                    'queryParameters' => ['query' => 'myQuery',
                        'facetFilters' => [
                            'query',
                        ],
                    ],
                    'fallbackParameters' => ['query' => 'myQuery',
                        'facetFilters' => [
                            'fallback',
                        ],
                    ],
                ],
            ],
            ],
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the GetRecommendations method.
     *
     * get recommendations for trending model with minimal parameters
     */
    public function snippetForGetRecommendations3(): void
    {
        // >SEPARATOR getRecommendations get recommendations for trending model with minimal parameters
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->getRecommendations(
            ['requests' => [
                ['indexName' => '<YOUR_INDEX_NAME>',
                    'model' => 'trending-items',
                    'threshold' => 42.1,
                    'facetName' => 'facet',
                    'facetValue' => 'value',
                ],
            ],
            ],
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the GetRecommendations method.
     *
     * get recommendations for trending model with all parameters
     */
    public function snippetForGetRecommendations4(): void
    {
        // >SEPARATOR getRecommendations get recommendations for trending model with all parameters
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->getRecommendations(
            ['requests' => [
                ['indexName' => '<YOUR_INDEX_NAME>',
                    'model' => 'trending-items',
                    'threshold' => 42.1,
                    'maxRecommendations' => 10,
                    'facetName' => 'myFacetName',
                    'facetValue' => 'myFacetValue',
                    'queryParameters' => ['query' => 'myQuery',
                        'facetFilters' => [
                            'query',
                        ],
                    ],
                    'fallbackParameters' => ['query' => 'myQuery',
                        'facetFilters' => [
                            'fallback',
                        ],
                    ],
                ],
            ],
            ],
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the GetRecommendations method.
     *
     * get multiple recommendations with minimal parameters
     */
    public function snippetForGetRecommendations5(): void
    {
        // >SEPARATOR getRecommendations get multiple recommendations with minimal parameters
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->getRecommendations(
            ['requests' => [
                ['indexName' => '<YOUR_INDEX_NAME>',
                    'objectID' => 'objectID1',
                    'model' => 'related-products',
                    'threshold' => 21.7,
                ],

                ['indexName' => '<YOUR_INDEX_NAME>',
                    'objectID' => 'objectID2',
                    'model' => 'related-products',
                    'threshold' => 21.7,
                ],
            ],
            ],
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the GetRecommendations method.
     *
     * get multiple recommendations with all parameters
     */
    public function snippetForGetRecommendations6(): void
    {
        // >SEPARATOR getRecommendations get multiple recommendations with all parameters
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->getRecommendations(
            ['requests' => [
                ['indexName' => '<YOUR_INDEX_NAME>',
                    'objectID' => 'objectID1',
                    'model' => 'related-products',
                    'threshold' => 21.7,
                    'maxRecommendations' => 10,
                    'queryParameters' => ['query' => 'myQuery',
                        'facetFilters' => [
                            'query1',
                        ],
                    ],
                    'fallbackParameters' => ['query' => 'myQuery',
                        'facetFilters' => [
                            'fallback1',
                        ],
                    ],
                ],

                ['indexName' => '<YOUR_INDEX_NAME>',
                    'objectID' => 'objectID2',
                    'model' => 'related-products',
                    'threshold' => 21.7,
                    'maxRecommendations' => 10,
                    'queryParameters' => ['query' => 'myQuery',
                        'facetFilters' => [
                            'query2',
                        ],
                    ],
                    'fallbackParameters' => ['query' => 'myQuery',
                        'facetFilters' => [
                            'fallback2',
                        ],
                    ],
                ],
            ],
            ],
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the GetRecommendations method.
     *
     * get frequently bought together recommendations
     */
    public function snippetForGetRecommendations7(): void
    {
        // >SEPARATOR getRecommendations get frequently bought together recommendations
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->getRecommendations(
            ['requests' => [
                ['indexName' => '<YOUR_INDEX_NAME>',
                    'objectID' => 'objectID1',
                    'model' => 'bought-together',
                    'threshold' => 42.7,
                ],
            ],
            ],
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the SearchRecommendRules method.
     *
     * searchRecommendRules
     */
    public function snippetForSearchRecommendRules(): void
    {
        // >SEPARATOR searchRecommendRules default
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $response = $client->searchRecommendRules(
            '<YOUR_INDEX_NAME>',
            'related-products',
        );

        // >LOG
        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    /**
     * Snippet for the SetClientApiKey method.
     *
     * switch API key
     */
    public function snippetForSetClientApiKey(): void
    {
        // >SEPARATOR setClientApiKey default
        // Initialize the client
        $client = RecommendClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');

        // Call the API
        $client->setClientApiKey(
            'updated-api-key',
        );

        // >LOG
        // SEPARATOR<
    }
}
