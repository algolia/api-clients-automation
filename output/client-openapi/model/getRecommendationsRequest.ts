/**
 * Recommend API
 * API powering the Recommend feature of Algolia.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class GetRecommendationsRequest {
  'indexName': string;
  'model': GetRecommendationsRequest.ModelEnum;
  'objectID': string;
  'threshold'?: number;
  'maxRecommendations'?: number;
  /**
   * A key-value mapping of additional search parameters
   */
  '_queryParameters'?: { [key: string]: object };
  /**
   * A key-value mapping of additional search parameters
   */
  'fallbackParameters'?: { [key: string]: object };

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{ name: string; baseName: string; type: string }> = [
    {
      name: 'indexName',
      baseName: 'indexName',
      type: 'string',
    },
    {
      name: 'model',
      baseName: 'model',
      type: 'GetRecommendationsRequest.ModelEnum',
    },
    {
      name: 'objectID',
      baseName: 'objectID',
      type: 'string',
    },
    {
      name: 'threshold',
      baseName: 'threshold',
      type: 'number',
    },
    {
      name: 'maxRecommendations',
      baseName: 'maxRecommendations',
      type: 'number',
    },
    {
      name: '_queryParameters',
      baseName: 'queryParameters',
      type: '{ [key: string]: object; }',
    },
    {
      name: 'fallbackParameters',
      baseName: 'fallbackParameters',
      type: '{ [key: string]: object; }',
    },
  ];

  static getAttributeTypeMap() {
    return GetRecommendationsRequest.attributeTypeMap;
  }
}

export namespace GetRecommendationsRequest {
  export enum ModelEnum {
    RelatedProducts = <any>'related-products',
    BoughtTogether = <any>'bought-together',
  }
}
