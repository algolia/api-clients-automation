{{#hasCustomHosts}}
{{clientPrefix}}Config _config = new {{clientPrefix}}Config("{{parametersWithDataTypeMap.appId.value}}","{{parametersWithDataTypeMap.apiKey.value}}"{{#hasRegionalHost}}{{#parametersWithDataTypeMap.region}},"{{parametersWithDataTypeMap.region.value}}"{{/parametersWithDataTypeMap.region}}{{/hasRegionalHost}}) {
  CustomHosts = new List<StatefulHost>
    {
      {{#parametersWithDataTypeMap.customHosts.value}}new () {
        Scheme = HttpScheme.Http,
        Url = "{{value}}".Split(':')[0],
        Port = int.Parse("{{value}}".Split(':')[1]),
        Up = true,
        LastUse = DateTime.UtcNow,
        Accept = CallType.Read | CallType.Write,
      }{{^-last}},{{/-last}}{{/parametersWithDataTypeMap.customHosts.value}}
  }
};
{{^autoCreateClient}}var client = {{/autoCreateClient}}new {{client}}(_config);
{{/hasCustomHosts}}
{{#useEchoRequester}}
{{^autoCreateClient}}var client = {{/autoCreateClient}}new {{client}}(new {{clientPrefix}}Config("{{parametersWithDataTypeMap.appId.value}}","{{parametersWithDataTypeMap.apiKey.value}}"{{#hasRegionalHost}}{{#parametersWithDataTypeMap.region}},"{{parametersWithDataTypeMap.region.value}}"{{/parametersWithDataTypeMap.region}}{{/hasRegionalHost}}), _echo);{{/useEchoRequester}}