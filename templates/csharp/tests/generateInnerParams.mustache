{{#isNull}}
  null
{{/isNull}}
{{#isVerbatim}}
  {{{value}}}
{{/isVerbatim}}
{{#isString}}
  "{{#lambda.escapeJSON}}{{{value}}}{{/lambda.escapeJSON}}"
{{/isString}}
{{#isInteger}}
  {{{value}}}
{{/isInteger}}
{{#isLong}}
  {{{value}}}L
{{/isLong}}
{{#isDouble}}
  {{{value}}}
{{/isDouble}}
{{#isBoolean}}
  {{{value}}}
{{/isBoolean}}
{{#isEnum}}
  {{#oneOfModel}}new {{{parentClassName}}}({{/oneOfModel}}Enum.Parse<{{{objectName}}}>("{{#lambda.pascalcase}}{{{value}}}{{/lambda.pascalcase}}"){{#oneOfModel}}){{/oneOfModel}}
{{/isEnum}}
{{#isArray}}
  new List{{> tests/generateGenerics}}{ {{#value}}{{> tests/generateParams}}{{^-last}},{{/-last}}{{/value}} }
{{/isArray}}
{{#isObject}}
  {{#oneOfModel}}new {{{parentClassName}}}({{/oneOfModel}}new {{{objectName}}}{
    {{#value}}
      {{^isAdditionalProperty}}{{#lambda.pascalcase}}{{#lambda.identifier}}{{key}}{{/lambda.identifier}}{{/lambda.pascalcase}} = {{> tests/generateParams}},{{/isAdditionalProperty}}{{/value}}
    {{#hasAdditionalProperties}}
    AdditionalProperties = new Dictionary<string, object>{
    {{#value}}
      {{#isAdditionalProperty}} {"{{{key}}}", {{> tests/generateParams}} },{{/isAdditionalProperty}}{{/value}}
    }
    {{/hasAdditionalProperties}}
  }{{#oneOfModel}}){{/oneOfModel}}
{{/isObject}}
{{#isFreeFormObject}}
  {{#isAnyType}}
    new Dictionary<string, object> { {{#value}}{ {{#entrySet}}"{{{key}}}", "{{{value}}}" }{{^-last}},{{/-last}}{{/entrySet}}{{/value}} }
  {{/isAnyType}}
  {{^isAnyType}}
    new Dictionary{{> tests/forceMapGenerics}}{ {{#value}}{"{{{key}}}", {{> tests/generateParams}} }{{^-last}},{{/-last}}{{/value}} }
  {{/isAnyType}}
{{/isFreeFormObject}}