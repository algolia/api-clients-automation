{{^autoCreateClient}}const client = {{/autoCreateClient}}{{{clientName}}}(
  '{{parametersWithDataTypeMap.appId.value}}',
  '{{parametersWithDataTypeMap.apiKey.value}}'
  {{#isStandaloneClient}},
  {{#hasRegionalHost}}'{{{parametersWithDataTypeMap.region.value}}}', {{/hasRegionalHost}}
  {
    {{#useEchoRequester}}
    requester: nodeEchoRequester(),
    {{/useEchoRequester}}
    {{#hasCustomHosts}}
    hosts:[
    {{#customHosts}}
    {
      url: 'localhost',
      port: {{port}},
      accept: 'readWrite',
      protocol: 'http'
    },
    {{/customHosts}}
    ],
    {{/hasCustomHosts}} 
    {{#hasCustomWriteTimeout}}
    writeTimeout: {{writeTimeout}},
    {{/hasCustomWriteTimeout}}
    {{#hasTransformationRegion}}
    transformation: { region : "{{{transformationRegion}}}" },
    {{/hasTransformationRegion}} 
  }
  {{/isStandaloneClient}}
){{^isStandaloneClient}}.{{{initMethod}}}(
  {
    options: {
    {{#useEchoRequester}}
      requester: nodeEchoRequester(),
    {{/useEchoRequester}}
    {{#hasCustomHosts}}
      hosts:[
      {{#customHosts}}
      {
        url: 'localhost',
        port: {{port}},
        accept: 'readWrite',
        protocol: 'http'
      },
      {{/customHosts}}
      ]
    {{/hasCustomHosts}}
    {{#hasCustomWriteTimeout}}
      writeTimeout: {{writeTimeout}},
    {{/hasCustomWriteTimeout}}
  },
 {{#hasRegionalHost}}
 // @ts-ignore
 region: '{{{parametersWithDataTypeMap.region.value}}}'
 {{/hasRegionalHost}}
})
{{/isStandaloneClient}};