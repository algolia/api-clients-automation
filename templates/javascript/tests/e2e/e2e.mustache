// {{generationBanner}}
import { describe, test, expect } from 'vitest';

import { union } from '../helpers.js';

import * as dotenv from 'dotenv';

dotenv.config({path:'../../.env'});
{{^isCompositionClient}}
import { {{{clientName}}} } from '{{{importPackage}}}';
{{/isCompositionClient}}
{{#isCompositionClient}}
import { compositionClient } from '@algolia/client-composition';
{{/isCompositionClient}}
import type { RequestOptions } from '@algolia/client-common';

if (!process.env.ALGOLIA_APPLICATION_ID) {
  throw new Error("please provide an `ALGOLIA_APPLICATION_ID` env var for e2e tests");
}

if (!process.env.{{e2eApiKey}}) {
  throw new Error("please provide an `{{e2eApiKey}}` env var for e2e tests");
}

{{^isCompositionClient}}
const client = {{{clientName}}}(process.env.ALGOLIA_APPLICATION_ID, process.env.{{e2eApiKey}}){{^isSearchClient}}.{{{initMethod}}}({{#hasRegionalHost}} {region:'{{{defaultRegion}}}'} {{/hasRegionalHost}}){{/isSearchClient}};
{{/isCompositionClient}}
{{#isCompositionClient}}
const client = compositionClient(process.env.ALGOLIA_APPLICATION_ID, process.env.{{e2eApiKey}});
{{/isCompositionClient}}

{{#blocksE2E}}
describe('{{operationId}}', () => {
  {{#tests}}
  test('{{{testName}}}', async () => {
    {{#response}}
    {{#body}}const resp = {{/body}}{{> tests/method}};
  
    {{#body}}
    const expectedBody = {{{.}}};

    expect(expectedBody).toEqual(union(expectedBody, resp));
    {{/body}}
    {{/response}}
  });

  {{/tests}}
})

{{/blocksE2E}}