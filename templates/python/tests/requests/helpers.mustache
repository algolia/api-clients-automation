def test_generate_secured_api_key_0(self):
        """
        allow generating a secured api key without restrictions
        """
        _resp = self._client.generate_secured_api_key(parent_api_key="foo")
        assert _resp == "NjgzNzE2ZDlkN2Y4MmVlZDE3NGM2Y2FlYmUwODZlZTkzMzc2Yzc5ZDdjNjFkZDY3MGVhMDBmN2Y4ZDZlYjBhOA=="

    def test_generate_secured_api_key_1(self):
        """
        allow generating a secured api key with a dict of restrictions
        """
        _resp = self._client.generate_secured_api_key(parent_api_key="foo", restrictions={
            "searchParams": {"query": "foo"},
            "validUntil": 100,
            "restrictIndices": ["bar"],
            "restrictSources": "baz",
            "userToken": "foobarbaz",
        })
        assert _resp == "NDNjMzVmODEzY2YyYzI1YTNkNzQ4YWZmZGM1YTdiMTE3MDBjNzc3YzU0ZWM3ODcyZjAwMGEwYTk1YTdhN2MzY3F1ZXJ5PWZvbyZyZXN0cmljdEluZGljZXM9YmFyJnJlc3RyaWN0U291cmNlcz1iYXomdXNlclRva2VuPWZvb2JhcmJheiZ2YWxpZFVudGlsPTEwMA=="

    def test_generate_secured_api_key_2(self):
        """
        allow generating a secured api key with the model
        """
        _resp = self._client.generate_secured_api_key(parent_api_key="bar", restrictions=SecuredApiKeyRestrictions(
              searchParams={"query": "bar", "page": 3},
              validUntil=42,
              restrictIndices=["baz"],
              restrictSources="foo",
              userToken="bazbarfoo",
        ))
        assert _resp == "OGYyNWMxZjI2YjkxOWNjY2U1ZjcxOWQ0OTQ0ZDY0ZDdlNGZlN2Y2NGI2YTkyZDFhZDMxYzNiNDRkZDMyOGNiMGFkdmFuY2VkU3ludGF4PWZhbHNlJmFsbG93VHlwb3NPbk51bWVyaWNUb2tlbnM9dHJ1ZSZhbmFseXRpY3M9dHJ1ZSZhcm91bmRMYXRMbmc9JmFyb3VuZExhdExuZ1ZpYUlQPWZhbHNlJmF0dHJpYnV0ZUNyaXRlcmlhQ29tcHV0ZWRCeU1pblByb3hpbWl0eT1mYWxzZSZjbGlja0FuYWx5dGljcz1mYWxzZSZkZWNvbXBvdW5kUXVlcnk9dHJ1ZSZlbmFibGVBQlRlc3Q9dHJ1ZSZlbmFibGVQZXJzb25hbGl6YXRpb249ZmFsc2UmZW5hYmxlUmVSYW5raW5nPXRydWUmZW5hYmxlUnVsZXM9dHJ1ZSZmYWNldGluZ0FmdGVyRGlzdGluY3Q9ZmFsc2UmZ2V0UmFua2luZ0luZm89ZmFsc2UmaGlnaGxpZ2h0UG9zdFRhZz0lM0MlMkZlbSUzRSZoaWdobGlnaHRQcmVUYWc9JTNDZW0lM0UmaGl0c1BlclBhZ2U9MjAma2VlcERpYWNyaXRpY3NPbkNoYXJhY3RlcnM9Jm1heEZhY2V0SGl0cz0xMCZtYXhWYWx1ZXNQZXJGYWNldD0xMDAmbWluUHJveGltaXR5PTEmbWluV29yZFNpemVmb3IxVHlwbz00Jm1pbldvcmRTaXplZm9yMlR5cG9zPTgmcGFnZT0zJnBlcmNlbnRpbGVDb21wdXRhdGlvbj10cnVlJnBlcnNvbmFsaXphdGlvbkltcGFjdD0xMDAmcXVlcnk9YmFyJnJlbGV2YW5jeVN0cmljdG5lc3M9MTAwJnJlcGxhY2VTeW5vbnltc0luSGlnaGxpZ2h0PWZhbHNlJnJlc3RyaWN0SGlnaGxpZ2h0QW5kU25pcHBldEFycmF5cz1mYWxzZSZyZXN0cmljdEluZGljZXM9YmF6JnJlc3RyaWN0U291cmNlcz1mb28mc2ltaWxhclF1ZXJ5PSZzbmlwcGV0RWxsaXBzaXNUZXh0PSVFMiU4MCVBNiZzb3J0RmFjZXRWYWx1ZXNCeT1jb3VudCZzdW1PckZpbHRlcnNTY29yZXM9ZmFsc2Umc3lub255bXM9dHJ1ZSZ1c2VyVG9rZW49YmF6YmFyZm9vJnZhbGlkVW50aWw9NDI="

    def test_generate_secured_api_key_and_validity_0(self):
        """
        is able to check the remaining validity of a key
        """
        _resp = self._client.generate_secured_api_key(parent_api_key="foo", restrictions={"validUntil": 0})
        _validity = self._client.get_secured_api_key_remaining_validity(_resp)
        assert abs(_validity) == int(round(time()))

    def test_generate_secured_api_key_and_validity_1(self):
        """
        throws when the validity field is not found
        """
        try:
            _resp = self._client.generate_secured_api_key("foo", {"validUntil": None})
            self._client.get_secured_api_key_remaining_validity(_resp)
            assert False
        except Exception as e:
            assert str(e) == "validUntil not found in api key."

    def test_generate_secured_api_key_and_validity_2(self):
        """
        throws when the invalid key
        """
        try:
            self._client.get_secured_api_key_remaining_validity("foo")
            assert False
        except Exception as e:
            assert str(e) == "Incorrect padding"