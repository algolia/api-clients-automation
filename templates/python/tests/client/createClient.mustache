_config = {{#lambda.pascalcase}}{{clientPrefix}}Config{{/lambda.pascalcase}}("{{parametersWithDataTypeMap.appId.value}}", "{{parametersWithDataTypeMap.apiKey.value}}"{{#hasRegionalHost}}{{#parametersWithDataTypeMap.region}},"{{parametersWithDataTypeMap.region.value}}"{{/parametersWithDataTypeMap.region}}{{/hasRegionalHost}})
        {{#hasCustomHosts}}
        {{#isError}}    {{/isError}}_config.hosts = HostsCollection([{{#customHosts}}Host(url='localhost' if environ.get('CI') == 'true' else 'host.docker.internal', scheme='http', port={{port}}){{^-last}},{{/-last}}{{/customHosts}}])
        {{/hasCustomHosts}}
        {{#hasCustomWriteTimeout}}
        {{#isError}}    {{/isError}}_config.write_timeout = {{writeTimeout}}
        {{/hasCustomWriteTimeout}}
        {{#hasTransformationRegion}}
        {{#isError}}    {{/isError}}_config.set_transformation_region("{{{transformationRegion}}}")
        {{/hasTransformationRegion}}
        {{#isError}}    {{/isError}}_client = {{#lambda.pascalcase}}{{{client}}}{{/lambda.pascalcase}}{{#isSyncClient}}Sync{{/isSyncClient}}.create_with_config(config=_config{{#useEchoRequester}}, transporter=EchoTransporter{{#isSyncClient}}Sync{{/isSyncClient}}(_config){{/useEchoRequester}})