# {{generationBanner}}
from os import environ
from re import compile
from json import loads

from algoliasearch.http.transporter import EchoTransporter
from algoliasearch.http.transporter_sync import EchoTransporterSync
from algoliasearch.http.hosts import Host, HostsCollection
from algoliasearch.{{{import}}}.client import {{#lambda.pascalcase}}{{{client}}}{{/lambda.pascalcase}}
from algoliasearch.{{{import}}}.client import {{#lambda.pascalcase}}{{{client}}}Sync{{/lambda.pascalcase}}
from algoliasearch.{{{import}}}.config import {{#lambda.pascalcase}}{{clientPrefix}}Config{{/lambda.pascalcase}}


{{#modes}}
class Test{{#lambda.pascalcase}}{{{client}}}{{/lambda.pascalcase}}{{#isSyncClient}}Sync{{/isSyncClient}}:
    def create_client(self) -> {{#lambda.pascalcase}}{{{client}}}{{/lambda.pascalcase}}{{#isSyncClient}}Sync{{/isSyncClient}}:
        _config = {{#lambda.pascalcase}}{{clientPrefix}}Config{{/lambda.pascalcase}}("appId", "apiKey"{{#hasRegionalHost}}, "{{{defaultRegion}}}"{{/hasRegionalHost}})
        return {{#lambda.pascalcase}}{{{client}}}{{/lambda.pascalcase}}{{#isSyncClient}}Sync{{/isSyncClient}}.create_with_config(config=_config, transporter=EchoTransporter{{#isSyncClient}}Sync{{/isSyncClient}}(_config))

    {{#blocksClient}}
{{> tests/client/tests}}
    {{/blocksClient}}

{{/modes}}