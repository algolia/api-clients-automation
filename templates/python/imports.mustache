from __future__ import annotations

import base64
import hashlib
import hmac
from sys import version_info
from warnings import warn
from random import randint
from time import time
from urllib.parse import quote
from re import match, search
from enum import Enum
from json import (
  loads,
  dumps,
)
from pydantic import (
  BaseModel,
  ConfigDict,
  Field,
  StrictBool,
  StrictFloat,
  StrictInt,
  StrictStr,
  ValidationError,
  field_validator,
  model_serializer,
)
from typing import (
  Any,
  Callable,
  ClassVar,
  Dict,
  Iterator,
  List,
  Set,
  Optional,
  Tuple,
  Union,
)

from typing_extensions import Annotated

if version_info >= (3, 11):
  from typing import Self
else:
  from typing_extensions import Self

from algoliasearch.http.api_response import ApiResponse
from algoliasearch.http.base_config import BaseConfig
from algoliasearch.http.exceptions import RequestException, ValidUntilNotFoundException
from algoliasearch.http.helpers import create_iterable, create_iterable_sync, RetryTimeout
from algoliasearch.http.request_options import RequestOptions
from algoliasearch.http.serializer import body_serializer, QueryParametersSerializer
from algoliasearch.http.transporter import Transporter
from algoliasearch.http.transporter_sync import TransporterSync
from algoliasearch.http.verb import Verb

from algoliasearch.{{packageName}}.config import {{#lambda.pascalcase}}{{client}}Config{{/lambda.pascalcase}}