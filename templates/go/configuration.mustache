// {{{generationBanner}}}
package {{packageName}}

import (
  "github.com/algolia/algoliasearch-client-go/v4/algolia/transport"
	"github.com/algolia/algoliasearch-client-go/v4/algolia/ingestion"
)

{{#hasRegionalHost}}
var allowedRegions = [...]string{ {{#allowedRegions}}"{{.}}",{{/allowedRegions}} }

type Region string

const (
  {{#allowedRegions}}
  {{#lambda.uppercase}}{{.}}{{/lambda.uppercase}} Region = "{{.}}"
  {{/allowedRegions}}
)
{{/hasRegionalHost}}

// {{#lambda.titlecase}}{{#lambda.camelcase}}{{client}}{{/lambda.camelcase}}{{/lambda.titlecase}}Configuration stores the configuration of the API client
type {{#lambda.titlecase}}{{#lambda.camelcase}}{{client}}{{/lambda.camelcase}}{{/lambda.titlecase}}Configuration struct {
	transport.Configuration
  
  {{#hasRegionalHost}}Region Region{{/hasRegionalHost}}
  {{#isSearchClient}}
  Transformation *TransformationConfiguration
  {{/isSearchClient}}
}

{{#isSearchClient}}
type TransformationConfiguration struct {
  Region ingestion.Region
}

// WithTransformation sets the region of the current algolia application to the configuration, this is required to be called if you wish to leverage the transformation pipeline (via the *WithTransformation methods).
func (s *SearchConfiguration) WithTransformation(region ingestion.Region) {
  s.Transformation = &TransformationConfiguration{
    Region: region,
  }
}
{{/isSearchClient}}