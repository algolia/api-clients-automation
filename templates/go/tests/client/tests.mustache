{{#tests}}
// {{{testName}}}
func Test{{#lambda.titlecase}}{{clientPrefix}}{{testType}}{{/lambda.titlecase}}{{testIndex}}(t *testing.T) {
  var err error
  var res any
  _ = res
  {{#autoCreateClient}}
  client, echo := create{{#lambda.titlecase}}{{clientPrefix}}{{/lambda.titlecase}}Client(t)
  {{/autoCreateClient}}
  {{^autoCreateClient}}
  echo := &tests.EchoRequester{}
  var client *{{clientPrefix}}.APIClient
  var cfg {{clientPrefix}}.{{clientName}}Configuration
  _ = client
  {{/autoCreateClient}}
  _ = echo
  {{#steps}}
  {{#times}}
  for i := 0; i < {{.}}; i++ {
  {{/times}}
  {{#isError}}
  {{#dynamicTemplate}}{{/dynamicTemplate}}
  require.EqualError(t, err, "{{{expectedError}}}")
  {{/isError}}
  {{^isError}}
  {{#shouldScope}}
  {
  {{/shouldScope}}
  {{#dynamicTemplate}}{{/dynamicTemplate}}
  require.NoError(t, err)
  {{#testUserAgent}}
    require.Regexp(t, regexp.MustCompile(`{{{match.value}}}`), echo.Header.Get("User-Agent"))
  {{/testUserAgent}}
  {{#testTimeouts}}
    require.Equal(t, int64({{{matchConnectTimeout}}}), echo.ConnectTimeout.Milliseconds())
    require.Equal(t, int64({{{matchResponseTimeout}}}), echo.Timeout.Milliseconds())
  {{/testTimeouts}}
  {{#testHost}}
    require.Equal(t, "{{{match.value}}}", echo.Host)
  {{/testHost}}
  {{#testResponse}}
    {{#match.isPrimitive}}
      {{#match.isNull}}
      require.Nil(t, res)
      {{/match.isNull}}
      {{^match.isNull}}
      require.Equal(t, {{#match}}{{> tests/generateParams}}{{/match}}, res)
      {{/match.isNull}}
    {{/match.isPrimitive}}
    {{^match.isPrimitive}}
      rawBody, err := json.Marshal(res)
      require.NoError(t, err)
      require.JSONEq(t, `{{{match.value}}}`, string(rawBody))
    {{/match.isPrimitive}}
  {{/testResponse}}
  {{#shouldScope}}
  }
  {{/shouldScope}}
  {{/isError}}
  {{#times}}
  }
  {{/times}}
  {{/steps}}
}

{{/tests}}