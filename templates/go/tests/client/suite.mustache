package client

import (
  "encoding/json"
  "net/url"
  "testing"
  "regexp"

  "github.com/kinbiko/jsonassert"
  "github.com/stretchr/testify/require"

  "gotests/tests"

  "github.com/algolia/algoliasearch-client-go/v4/algolia/{{clientImport}}"
)

func create{{#lambda.titlecase}}{{clientPrefix}}{{/lambda.titlecase}}Client() (*{{clientPrefix}}.APIClient, *tests.EchoRequester) {
  echo := &tests.EchoRequester{}
  cfg := {{clientPrefix}}.Configuration{
    AppID:     "appID",
    ApiKey:    "apiKey",{{#hasRegionalHost}}
    Region:    {{clientPrefix}}.{{#lambda.uppercase}}{{defaultRegion}}{{/lambda.uppercase}},{{/hasRegionalHost}}
    Requester: echo,
  }
  client, _ := {{clientPrefix}}.NewClientWithConfig(cfg)

  return client, echo
}

func zeroValue[T any]() T {
    var v T
    return v
}

{{#blocksClient}}
{{#tests}}
func Test{{#lambda.titlecase}}{{testType}}{{/lambda.titlecase}}{{testIndex}}(t *testing.T) {
  var err error
  _ = err
  {{#autoCreateClient}}
  client, echo := create{{#lambda.titlecase}}{{clientPrefix}}{{/lambda.titlecase}}Client()
  _ = echo
  {{/autoCreateClient}}
  {{^autoCreateClient}}
  echo := &tests.EchoRequester{}
  var client *{{clientPrefix}}.APIClient
  var cfg {{clientPrefix}}.Configuration
  _ = client
  _ = cfg
  {{/autoCreateClient}}
  {{#steps}}
  {{#isError}}
  {{> tests/client/step}}
  require.EqualError(t, err, "{{{expectedError}}}")
  {{/isError}}
  {{^isError}}
  {{> tests/client/step}}
  {{#match}}
  {{#testUserAgent}}
  require.Regexp(t, regexp.MustCompile(`{{{match}}}`), echo.Header.Get("User-Agent"))
  {{/testUserAgent}}
  {{#testTimeouts}}
  //require.Equal(t, {{{match.parametersWithDataTypeMap.connectTimeout.value}}}, echo.connect_timeout)
  //require.Equal(t, {{{match.parametersWithDataTypeMap.responseTimeout.value}}}, echo.timeout)
  {{/testTimeouts}}
  {{#testHost}}
  require.Equal(t, "{{{match}}}", echo.Host)
  {{/testHost}}
  {{/match}}
  {{/isError}}
  {{/steps}}
}

{{/tests}}
{{/blocksClient}}

