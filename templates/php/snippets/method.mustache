<?php

// {{generationBanner}}

namespace Algolia\AlgoliaSearch\Snippets;

// >IMPORT
use Algolia\AlgoliaSearch\Api\{{client}};
// IMPORT<

class Snippet{{client}}
{
    {{#blocksRequests}}
    {{#snippets}}
    /**
    * Snippet for the {{#lambda.titlecase}}{{{method}}}{{/lambda.titlecase}} method
    *
    * {{{description}}}
    */
    public function snippetFor{{#lambda.titlecase}}{{method}}{{/lambda.titlecase}}{{testIndex}}()
    {
        // >SEPARATOR {{method}} {{testName}}
        // Initialize the client
        $client = {{client}}::create('<YOUR_APP_ID>', '<YOUR_API_KEY>'{{#hasRegionalHost}}, 'YOUR_APP_ID_REGION'{{/hasRegionalHost}});

        {{#hasRequestOptions}}
          $requestOptions = [
            'queryParameters' => [
              {{#requestOptions.queryParameters.parametersWithDataType}}
                '{{{key}}}' => {{> tests/requests/requestOptionsParams}},
              {{/requestOptions.queryParameters.parametersWithDataType}}
            ],
            'headers' => [
              {{#requestOptions.headers.parametersWithDataType}}
                '{{{key}}}' => '{{{value}}}',
              {{/requestOptions.headers.parametersWithDataType}}
            ]
          ];
        {{/hasRequestOptions}}

        // Call the API
        $response = $client->{{^hasParameters}}{{{method}}}();{{/hasParameters}}{{#hasParameters}}{{{method}}}({{#parametersWithDataType}}{{> tests/generateParams}}{{/parametersWithDataType}}{{#hasRequestOptions}}$requestOptions{{/hasRequestOptions}});{{/hasParameters}}

        // play with the response
        var_dump($response);
        // SEPARATOR<
    }

    {{/snippets}}
    {{/blocksRequests}}
}