{{> snippets/import}}

void savePopularRecords() async {
  {{> snippets/init}}

  final List<Map<String, dynamic>> records = [];

  BrowseResponse? browseResponse;
  do {
    final browseParams = BrowseParamsObject(hitsPerPage: 1000, cursor: browseResponse?.cursor);
    browseResponse = await client.browse(
        indexName: "indexName", browseParams: browseParams
    );
    for (final hit in browseResponse.hits) {
      final props = hit.toJson();
      final isPopular = props['nbFollowers'] > 1000;
      final updatedProduct = {
        ...props,
        'isPopular': isPopular,
      };
      records.add(updatedProduct);
    }
  } while (browseResponse.cursor != null);

  final batchParams = BatchWriteParams(
    requests: records
        .map((record) => BatchRequest(
              action: Action.addObject,
              body: record,
            ))
        .toList());
  await {{#dynamicSnippet}}batchChunks{{/dynamicSnippet}};
}