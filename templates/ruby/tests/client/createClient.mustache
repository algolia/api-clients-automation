{{#hasCustomHosts}}
client = Algolia::{{#lambda.pascalcase}}{{{client}}}{{/lambda.pascalcase}}.create_with_config(Algolia::Configuration.new(
  '{{parametersWithDataTypeMap.appId.value}}',
  '{{parametersWithDataTypeMap.apiKey.value}}',
  [{{#parametersWithDataTypeMap.customHosts.value}}Algolia::Transport::StatefulHost.new('{{value}}', protocol: 'http://', accept: CallType::READ | CallType::WRITE),{{/parametersWithDataTypeMap.customHosts.value}}],
  '{{client}}'
)){{/hasCustomHosts}}{{^hasCustomHosts}}
{{^isError}}client = {{/isError}}Algolia::{{#lambda.pascalcase}}{{{client}}}{{/lambda.pascalcase}}.create(
  '{{parametersWithDataTypeMap.appId.value}}',
  '{{parametersWithDataTypeMap.apiKey.value}}',
  {{#hasRegionalHost}}{{#parametersWithDataTypeMap.region}}'{{parametersWithDataTypeMap.region.value}}',{{/parametersWithDataTypeMap.region}}{{/hasRegionalHost}}
  { requester: Algolia::Transport::EchoRequester.new }
){{/hasCustomHosts}}