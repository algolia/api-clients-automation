// swift-tools-version: 5.9
// {{{generationBanner}}}

import PackageDescription

var extraPackageDependencies: [Package.Dependency] = []
var extraTargetDependencies: [Target.Dependency] = []
var targets: [Target] = []
var products: [Product] = []

#if os(Linux)
  extraPackageDependencies.append(
    .package(url: "https://github.com/apple/swift-crypto.git", from: "3.2.0")
  )
  extraTargetDependencies.append(
    .product(name: "Crypto", package: "swift-crypto")
  )
#endif

extraTargetDependencies.append(contentsOf: [
  .product(name: "AnyCodable", package: "AnyCodable"),
  .product(name: "Logging", package: "swift-log")
])

targets.append(
  .target(
    name: "Core",
    dependencies: [
      .product(name: "Gzip", package: "GzipSwift")
    ] + extraTargetDependencies,
    path: "Sources/Core"
  )
)

products.append(
  .library(
    name: "Core",
    targets: ["Core"]
  )
)

[{{#packageList}}
  "{{#lambda.client-to-name}}{{.}}{{/lambda.client-to-name}}"{{^-last}},{{/-last}}{{/packageList}}
].enumerated().forEach { (_, library) in
  targets.append(
    .target(
      name: library,
      dependencies: [
        .target(name: "Core"),
      ] + extraTargetDependencies,
      path: "Sources/\(library)"
    )
  )

  products.append(
    .library(
      name: "\(library)",
      targets: ["\(library)"]
    )
  )
}

let package = Package(
  name: "{{projectName}}",
  platforms: [
    .iOS(.v13),
    .macOS(.v10_15),
    .tvOS(.v13),
    .watchOS(.v6),
  ],
  products: products,
  dependencies: [
    .package(url: "https://github.com/Flight-School/AnyCodable", from: "0.6.7"),
    .package(url: "https://github.com/apple/swift-log.git", from: "1.5.4"),
    .package(url: "https://github.com/1024jp/GzipSwift", from: "6.0.1"),
  ] + extraPackageDependencies,
  targets: targets
)
