#if canImport(Core)
  import Core
#endif
// >IMPORT
import {{import}}
// IMPORT<

final class {{client}}Snippet {
  {{#blocksRequests}}
  {{#snippets}}
  // Snippet for the {{method}} method.
  //
  // {{{description}}}
  func snippetFor{{#lambda.pascalcase}}{{method}}{{/lambda.pascalcase}}{{testIndex}}() async throws {
    // >SEPARATOR {{method}} {{testName}}
    // Initialize the client
    let client = try {{client}}(appID: "YOUR_APP_ID", apiKey: "YOUR_API_KEY"{{#hasRegionalHost}}, region: .{{defaultRegion}}{{/hasRegionalHost}})

  {{#hasRequestOptions}}
    let requestOptions = RequestOptions({{#requestOptions.headers}}
      headers: [{{#parametersWithDataType}}"{{key}}": {{> tests/paramValue }}{{^-last}}, {{/-last}}{{/parametersWithDataType}}]{{/requestOptions.headers}}
      {{#requestOptions.headers}}{{#requestOptions.queryParameters}},{{/requestOptions.queryParameters}}{{/requestOptions.headers}}{{#requestOptions.queryParameters}}
      queryItems: APIHelper.mapValuesToQueryItems([{{#parametersWithDataType}}"{{key}}": {{> tests/paramValue }}{{^-last}}, {{/-last}}{{/parametersWithDataType}}]){{/requestOptions.queryParameters}}
    )
  {{/hasRequestOptions}}

    // Call the API
    let response{{#isGeneric}}: {{{returnType}}}<Hit>{{/isGeneric}} = try await client.{{method}}({{#parametersWithDataType}}{{> tests/generateParams}}{{^-last}},{{/-last}}{{/parametersWithDataType}}{{#hasRequestOptions}}, requestOptions: requestOptions{{/hasRequestOptions}})
    // SEPARATOR<
  }
  {{/snippets}}
  {{/blocksRequests}}
}