import scala.concurrent.Future
import scala.concurrent.ExecutionContext.Implicits.global

{{> snippets/import}}
import algoliasearch.search.SearchParamsObject

val getPlatformTag: String = {
  "" // Implement your logic here
}

def searchWithRuleContexts(): Future[Unit] = {
  {{> snippets/init}}

  val platformTag = getPlatformTag
  val searchParams = SearchParamsObject(
    query = Some("<YOUR_SEARCH_QUERY>"),
    ruleContexts = Some(Seq(platformTag))
  )

  {{#dynamicSnippet}}searchWithSearchParams{{/dynamicSnippet}}.map { response =>
    println(response)
  }.recover {
    case ex: Exception =>
      println(s"An error occurred: ${ex.getMessage}")
  }
}