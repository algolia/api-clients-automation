// {{generationBanner}}
package com.algolia.e2e

import com.algolia.client.api.{{client}}
import com.algolia.client.model.{{import}}.*
import com.algolia.client.configuration.*
import com.algolia.client.transport.*
import com.algolia.utils.*
import io.ktor.http.*
import io.github.cdimascio.dotenv.Dotenv
import kotlinx.coroutines.test.*
import kotlinx.serialization.json.*
import kotlinx.serialization.encodeToString
import kotlin.test.*

class {{clientPrefix}}Test {

    var client: {{client}};

    init {
      if (System.getenv("CI") == "true") {
        var client = {{client}}(appId = System.getenv("ALGOLIA_APPLICATION_ID"), apiKey = System.getenv("{{e2eApiKey}}"){{#hasRegionalHost}}, region = "{{defaultRegion}}", {{/hasRegionalHost}});
      } else {
        val dotenv = Dotenv.configure().directory("../../").load()
        val client = {{client}}(appId = dotenv["ALGOLIA_APPLICATION_ID"], apiKey = dotenv["{{e2eApiKey}}"]{{#hasRegionalHost}}, region = "{{defaultRegion}}", {{/hasRegionalHost}});
      }
    }

    {{#blocksE2E}}
    {{#tests}}
    @Test
    fun `{{#lambda.replaceBacktick}}{{{testName}}}{{testIndex}}{{/lambda.replaceBacktick}}`() = runTest {
        client.runTest(
            call = {
                {{> tests/method}}
            },
            {{#response}}
            {{#body}}
            response = {
              areJsonElementsEqual(Json.parseToJsonElement("{{#lambda.escapeQuotes}}{{{body}}}{{/lambda.escapeQuotes}}"), Json.parseToJsonElement(Json.encodeToString(it)))
            },
            {{/body}}
            {{/response}}
        )
    }

    {{/tests}}
    {{/blocksE2E}}
}