package com.algolia.snippets

import com.algolia.client.api.{{client}}
import com.algolia.client.model.{{import}}.*

import kotlinx.serialization.json.*
import kotlin.system.exitProcess

class Snippet{{client}} {
  {{#blocksRequests}}
  {{#snippet}}
  suspend fun snippetFor{{#lambda.pascalcase}}{{method}}{{/lambda.pascalcase}}() {
      // >SEPARATOR {{method}}
      // Initialize the client
      val client = {{client}}(appId = "YOUR_APP_ID", apiKey = "YOUR_API_KEY"{{#hasRegionalHost}}, region = "YOUR_APP_ID_REGION"{{/hasRegionalHost}})

      // Call the API
      var response = client.{{method}}(
        {{#parametersWithDataType}}
        {{> tests/request_param}}
        {{/parametersWithDataType}}
        {{#hasRequestOptions}}
        requestOptions = RequestOptions(
            {{#requestOptions.queryParameters}}
            urlParameters = buildMap {
                {{#parametersWithDataType}}
                put("{{{key}}}", {{> tests/param_value}})
                {{/parametersWithDataType}}
            },
            {{/requestOptions.queryParameters}}
            {{#requestOptions.headers}}
            headers = buildMap {
            {{#parametersWithDataType}}
                put("{{{key}}}", {{> tests/param_value}})
            {{/parametersWithDataType}}
            },
            {{/requestOptions.headers}}
        )
        {{/hasRequestOptions}}
      )

      // Use the response
      println(response)
      // SEPARATOR<

      exitProcess(0)
  }

  {{/snippet}}
  {{/blocksRequests}}
}