import java.io.File
import kotlinx.serialization.builtins.ListSerializer
import kotlinx.serialization.json.Json
import kotlinx.serialization.json.JsonObject

{{> snippets/import}}
import com.algolia.client.model.search.*

suspend fun saveObjectsChunks() {
  val path = "/tmp/records.json"
  val json = try {
    File(path).readText()
  } catch (e: Exception) {
      throw RuntimeException("Failed to read file at $path", e)
  }
  val records: List<JsonObject> = Json.decodeFromString(ListSerializer(JsonObject.serializer()), json)

  {{> snippets/init}}

  records.chunked(10000).forEach { chunk ->
    try {
      client.{{#dynamicSnippet}}saveObjectsChunks{{/dynamicSnippet}}
    } catch (exception: Exception) {
        println(exception.message)
    }
  }
}
