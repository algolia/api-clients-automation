diff --git a/lib/index.js b/lib/index.js
index 483d41fe6e4b52f4d2210452a2f2e528e324a6f3..c8852f31dd5b40b706ac91254ef38f9a4eb7f154 100644
--- a/lib/index.js
+++ b/lib/index.js
@@ -45,10 +45,11 @@ function parseInput (data, queryStart, queryEnd, excludeMaster, projectName) {
   Object.keys(data).forEach((v) => {
     const version = data[v];
     const name = `${projectName} ${v.replace('v', '')}`;
-    const current = version.start ? new Date(version.start) : null;
-    const active = version.lts ? new Date(version.lts) : null;
-    const maint = version.maintenance ? new Date(version.maintenance) : null;
-    let end = version.end ? new Date(version.end) : null;
+    const isPreRelease = version.prerelease === true;
+    const current = isPreRelease ? queryStart : version.start ? new Date(version.start) : null;
+    const active = isPreRelease ? queryStart : version.lts ? new Date(version.lts) : null;
+    const maint = isPreRelease ? queryStart : version.maintenance ? new Date(version.maintenance) : null;
+    let end = isPreRelease ? queryEnd : version.end ? new Date(version.end) : null;
 
     if (current === null) {
       throw new Error(`missing start in ${version}`);
@@ -60,7 +61,7 @@ function parseInput (data, queryStart, queryEnd, excludeMaster, projectName) {
 
     if (maint !== null) {
       if (maint < queryEnd && end > queryStart) {
-        output.push({ name, type: 'maintenance', start: maint, end });
+        output.push({ name, type: isPreRelease ? 'unstable' : 'maintenance', start: maint, end });
       }
 
       end = maint;
@@ -68,20 +69,20 @@ function parseInput (data, queryStart, queryEnd, excludeMaster, projectName) {
 
     if (active !== null) {
       if (active < queryEnd && end > queryStart) {
-        output.push({ name, type: 'active', start: active, end });
+        output.push({ name, type: isPreRelease ? 'unstable' : 'active', start: active, end });
       }
 
       end = active;
     }
 
     if (current < queryEnd && end > queryStart) {
-      output.push({ name, type: 'current', start: current, end });
+      output.push({ name, type: isPreRelease ? 'unstable' : 'current', start: current, end });
     }
   });
 
   if (!excludeMaster) {
     output.unshift({
-      name: 'Master',
+      name: 'Main',
       type: 'unstable',
       start: queryStart,
       end: queryEnd
