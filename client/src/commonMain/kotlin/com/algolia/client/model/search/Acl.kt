/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.algolia.client.model.search


import kotlinx.serialization.*

/**
 * API key permissions:  `addObject`: required to add or update records, copy or move an index. `analytics`: required to access the Analytics API. `browse`: required to view records `deleteIndex`: required to delete indices. `deleteObject`: required to delete records. `editSettings`: required to change index settings. `inference`: required to access the Inference API. `listIndexes`: required to list indices. `logs`: required to access logs of search and indexing operations. `recommendation`: required to access the Personalization and Recommend APIs. `search`: required to search records `seeUnretrievableAttributes`: required to retrieve [`unretrievableAttributes`](https://www.algolia.com/doc/api-reference/api-parameters/unretrievableAttributes/) for all operations that return records. `settings`: required to examine index settings. 
 *
 * Values: addObject,analytics,browse,deleteObject,deleteIndex,editSettings,inference,listIndexes,logs,personalization,recommendation,search,seeUnretrievableAttributes,settings,usage
 */
@Serializable
enum class Acl(val value: String) {

    @SerialName(value = "addObject")
    addObject("addObject"),

    @SerialName(value = "analytics")
    analytics("analytics"),

    @SerialName(value = "browse")
    browse("browse"),

    @SerialName(value = "deleteObject")
    deleteObject("deleteObject"),

    @SerialName(value = "deleteIndex")
    deleteIndex("deleteIndex"),

    @SerialName(value = "editSettings")
    editSettings("editSettings"),

    @SerialName(value = "inference")
    inference("inference"),

    @SerialName(value = "listIndexes")
    listIndexes("listIndexes"),

    @SerialName(value = "logs")
    logs("logs"),

    @SerialName(value = "personalization")
    personalization("personalization"),

    @SerialName(value = "recommendation")
    recommendation("recommendation"),

    @SerialName(value = "search")
    search("search"),

    @SerialName(value = "seeUnretrievableAttributes")
    seeUnretrievableAttributes("seeUnretrievableAttributes"),

    @SerialName(value = "settings")
    settings("settings"),

    @SerialName(value = "usage")
    usage("usage");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is Acl) "$data" else null

        /**
         * Returns a valid [Acl] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): Acl? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

