/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.algolia.client.model.search

import com.algolia.client.model.search.SynonymType

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * Synonym object.
 *
 * @param objectID Unique identifier of a synonym object.
 * @param type 
 * @param synonyms Words or phrases considered equivalent.
 * @param input Word or phrase to appear in query strings (for [`onewaysynonym`s](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/adding-synonyms/in-depth/one-way-synonyms/)).
 * @param word Word or phrase to appear in query strings (for [`altcorrection1` and `altcorrection2`](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/adding-synonyms/in-depth/synonyms-alternative-corrections/)).
 * @param corrections Words to be matched in records.
 * @param placeholder [Placeholder token](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/adding-synonyms/in-depth/synonyms-placeholders/) to be put inside records. 
 * @param replacements Query words that will match the [placeholder token](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/adding-synonyms/in-depth/synonyms-placeholders/).
 */
@Serializable

data class SynonymHit (

    /* Unique identifier of a synonym object. */
    @SerialName(value = "objectID") @Required val objectID: String,

    @SerialName(value = "type") @Required val type: SynonymType,

    /* Words or phrases considered equivalent. */
    @SerialName(value = "synonyms") val synonyms: kotlin.collections.List<String>? = null,

    /* Word or phrase to appear in query strings (for [`onewaysynonym`s](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/adding-synonyms/in-depth/one-way-synonyms/)). */
    @SerialName(value = "input") val input: String? = null,

    /* Word or phrase to appear in query strings (for [`altcorrection1` and `altcorrection2`](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/adding-synonyms/in-depth/synonyms-alternative-corrections/)). */
    @SerialName(value = "word") val word: String? = null,

    /* Words to be matched in records. */
    @SerialName(value = "corrections") val corrections: kotlin.collections.List<String>? = null,

    /* [Placeholder token](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/adding-synonyms/in-depth/synonyms-placeholders/) to be put inside records.  */
    @SerialName(value = "placeholder") val placeholder: String? = null,

    /* Query words that will match the [placeholder token](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/adding-synonyms/in-depth/synonyms-placeholders/). */
    @SerialName(value = "replacements") val replacements: kotlin.collections.List<String>? = null

)

