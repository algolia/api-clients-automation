post:
  tags:
    - search
  operationId: search
  summary: Get search results
  parameters:
    - $ref: '../../parameters.yml#/AppId'
    - $ref: '../../parameters.yml#/ApiKey'
    - $ref: '../../parameters.yml#/IndexName'
  requestBody:
    $ref: '../../schemas/SearchParams.yml'
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            title: singleQueryResponse
            type: object
            additionalProperties: false
            properties:
              query:
                $ref: '../../parameters.yml#/query'
              hits:
                type: array
                items:
                  type: object
                  additionalProperties: false
                  properties:
                    objectID:
                      $ref: '../../responses/common.yml#/objectID'
              nbHits:
                type: integer
                description: "Number of hits that the search query matched"
                example: 20
              exhaustiveNbHits:
                type: boolean
                description: "Indicate if the nbHits count was exhaustive or approximate"
              exhaustiveTypo:
                type: boolean
                description: "Indicate if the typo-tolerence search was exhaustive or approximate (only included when typo-tolerance is enabled)"
              exhaustiveFacetsCount:
                type: boolean
                description: Whether the facet count is exhaustive or approximate.
              hitsPerPage:
                $ref: '../../parameters.yml#/hitsPerPage'
              index:
                type: string
                example: "indexName"
              nbPages:
                type: integer
                description: "Number of pages available for the current query"
                example: 1
              page:
                $ref: '../../parameters.yml#/page'
              params:
                type: string
                description: A url-encoded string of all search parameters.
                example: "query=a&hitsPerPage=20"
              processingTimeMS:
                type: number
                example: 20
                description: "Time the server took to process the request, in milliseconds."
              userData:
                $ref: '../../parameters.yml#/userData'
              nbSortedHits:
                type: integer
                description: "The number of hits selected and sorted by the relevant sort algorithm"
              queryAfterRemoval:
                type: string
                description: "A markup text indicating which parts of the original query have been removed in order to retrieve a non-empty result set."
              message:
                type: string
                description: "Used to return warnings about the query."
              aroundLatLng:
                type: string
                description: The computed geo location.
                pattern: "^(-?\d+(\.\d+)?),\s*(-?\d+(\.\d+)?)$"
              automaticRadius:
                type: string
                description: "The automatically computed radius. For legacy reasons, this parameter is a string and not an integer."
              serverUsed:
                type: string
                description: "Actual host name of the server that processed the request."
              indexUsed:
                type: string
                description: "Index name used for the query. In the case of an A/B test, the targeted index isnâ€™t always the index used by the query."
              abTestID:
                type: integer
                description: "If a search encounters an index that is being A/B tested, abTestID reports the ongoing A/B test ID."
              abTestVariantID:
                type: integer
                description: "If a search encounters an index that is being A/B tested, abTestVariantID reports the variant ID of the index used."
              parsedQuery:
                type: string
                description: "The query string that will be searched, after normalization."
              facets:
                type: object
                description: "A mapping of each facet name to the corresponding facet counts."
                additionalProperties:
                  type: object
                  additionalProperties:
                    type: string
                example: { "facets": { "category": { "tech": 42, "food": 1 } } }
              facets_stats:
                type: object
                description: "Statistics for numerical facets."
                queryID:
                  $ref: '../../responses/common.yml#/queryID'



    '400':
      $ref: '../../responses/BadRequest.yml'
    '404':
      $ref: '../../responses/IndexNotFound.yml'
