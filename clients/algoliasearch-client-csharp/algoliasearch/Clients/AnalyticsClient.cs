//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//
using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Threading;
using System.Threading.Tasks;
using Algolia.Search.Models.Analytics;
using Algolia.Search.Transport;
using Algolia.Search.Http;
using Algolia.Search.Utils;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Logging.Abstractions;

namespace Algolia.Search.Clients;


/// <summary>
/// Represents a collection of functions to interact with the API endpoints
/// </summary>
public interface IAnalyticsClient
{
  /// <summary>
  /// This method allow you to send requests to the Algolia REST API.
  /// </summary>
  /// <param name="path">Path of the endpoint, anything after \"/1\" must be specified.</param>
  /// <param name="parameters">Query parameters to apply to the current query. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of object</returns>
  Task<object> CustomDeleteAsync(string path, Dictionary<string, object> parameters = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// This method allow you to send requests to the Algolia REST API. (Synchronous version)
  /// </summary>
  /// <param name="path">Path of the endpoint, anything after \"/1\" must be specified.</param>
  /// <param name="parameters">Query parameters to apply to the current query. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>object</returns>
  object CustomDelete(string path, Dictionary<string, object> parameters = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// This method allow you to send requests to the Algolia REST API.
  /// </summary>
  /// <param name="path">Path of the endpoint, anything after \"/1\" must be specified.</param>
  /// <param name="parameters">Query parameters to apply to the current query. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of object</returns>
  Task<object> CustomGetAsync(string path, Dictionary<string, object> parameters = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// This method allow you to send requests to the Algolia REST API. (Synchronous version)
  /// </summary>
  /// <param name="path">Path of the endpoint, anything after \"/1\" must be specified.</param>
  /// <param name="parameters">Query parameters to apply to the current query. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>object</returns>
  object CustomGet(string path, Dictionary<string, object> parameters = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// This method allow you to send requests to the Algolia REST API.
  /// </summary>
  /// <param name="path">Path of the endpoint, anything after \"/1\" must be specified.</param>
  /// <param name="parameters">Query parameters to apply to the current query. (optional)</param>
  /// <param name="body">Parameters to send with the custom request. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of object</returns>
  Task<object> CustomPostAsync(string path, Dictionary<string, object> parameters = default, object body = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// This method allow you to send requests to the Algolia REST API. (Synchronous version)
  /// </summary>
  /// <param name="path">Path of the endpoint, anything after \"/1\" must be specified.</param>
  /// <param name="parameters">Query parameters to apply to the current query. (optional)</param>
  /// <param name="body">Parameters to send with the custom request. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>object</returns>
  object CustomPost(string path, Dictionary<string, object> parameters = default, object body = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// This method allow you to send requests to the Algolia REST API.
  /// </summary>
  /// <param name="path">Path of the endpoint, anything after \"/1\" must be specified.</param>
  /// <param name="parameters">Query parameters to apply to the current query. (optional)</param>
  /// <param name="body">Parameters to send with the custom request. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of object</returns>
  Task<object> CustomPutAsync(string path, Dictionary<string, object> parameters = default, object body = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// This method allow you to send requests to the Algolia REST API. (Synchronous version)
  /// </summary>
  /// <param name="path">Path of the endpoint, anything after \"/1\" must be specified.</param>
  /// <param name="parameters">Query parameters to apply to the current query. (optional)</param>
  /// <param name="body">Parameters to send with the custom request. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>object</returns>
  object CustomPut(string path, Dictionary<string, object> parameters = default, object body = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Return the average click position for the complete time range and for individual days. > **Note**: If all `positions` have a `clickCount` of `0` or `null`, it means Algolia didn't receive any click events for tracked searches. A _tracked_ search is a search request where the `clickAnalytics` parameter is `true`. 
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetAverageClickPositionResponse</returns>
  Task<GetAverageClickPositionResponse> GetAverageClickPositionAsync(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Return the average click position for the complete time range and for individual days. > **Note**: If all `positions` have a `clickCount` of `0` or `null`, it means Algolia didn't receive any click events for tracked searches. A _tracked_ search is a search request where the `clickAnalytics` parameter is `true`.  (Synchronous version)
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetAverageClickPositionResponse</returns>
  GetAverageClickPositionResponse GetAverageClickPosition(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Show the number of clicks events and their associated position in the search results.  > **Note**: If all `positions` have a `clickCount` of `0` or `null`, it means Algolia didn't receive any click events for tracked searches. A _tracked_ search is a search request where the `clickAnalytics` parameter is `true`. 
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetClickPositionsResponse</returns>
  Task<GetClickPositionsResponse> GetClickPositionsAsync(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Show the number of clicks events and their associated position in the search results.  > **Note**: If all `positions` have a `clickCount` of `0` or `null`, it means Algolia didn't receive any click events for tracked searches. A _tracked_ search is a search request where the `clickAnalytics` parameter is `true`.  (Synchronous version)
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetClickPositionsResponse</returns>
  GetClickPositionsResponse GetClickPositions(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Returns a [click-through rate (CTR)](https://www.algolia.com/doc/guides/search-analytics/concepts/metrics/#click-through-rate).
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetClickThroughRateResponse</returns>
  Task<GetClickThroughRateResponse> GetClickThroughRateAsync(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Returns a [click-through rate (CTR)](https://www.algolia.com/doc/guides/search-analytics/concepts/metrics/#click-through-rate). (Synchronous version)
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetClickThroughRateResponse</returns>
  GetClickThroughRateResponse GetClickThroughRate(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Return a [conversion rate](https://www.algolia.com/doc/guides/search-analytics/concepts/metrics/#conversion-rate).
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetConversationRateResponse</returns>
  Task<GetConversationRateResponse> GetConversationRateAsync(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Return a [conversion rate](https://www.algolia.com/doc/guides/search-analytics/concepts/metrics/#conversion-rate). (Synchronous version)
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetConversationRateResponse</returns>
  GetConversationRateResponse GetConversationRate(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Returns the rate at which searches don't lead to any clicks. The endpoint returns a value for the complete given time range, as well as a value per day. It also returns the count of searches and searches without clicks.
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetNoClickRateResponse</returns>
  Task<GetNoClickRateResponse> GetNoClickRateAsync(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Returns the rate at which searches don't lead to any clicks. The endpoint returns a value for the complete given time range, as well as a value per day. It also returns the count of searches and searches without clicks. (Synchronous version)
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetNoClickRateResponse</returns>
  GetNoClickRateResponse GetNoClickRate(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Returns the rate at which searches didn't return any results.
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetNoResultsRateResponse</returns>
  Task<GetNoResultsRateResponse> GetNoResultsRateAsync(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Returns the rate at which searches didn't return any results. (Synchronous version)
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetNoResultsRateResponse</returns>
  GetNoResultsRateResponse GetNoResultsRate(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Returns the number of searches within a time range.
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetSearchesCountResponse</returns>
  Task<GetSearchesCountResponse> GetSearchesCountAsync(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Returns the number of searches within a time range. (Synchronous version)
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetSearchesCountResponse</returns>
  GetSearchesCountResponse GetSearchesCount(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Return the most popular of the last 1,000 searches that didn't lead to any clicks.
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetSearchesNoClicksResponse</returns>
  Task<GetSearchesNoClicksResponse> GetSearchesNoClicksAsync(string index, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Return the most popular of the last 1,000 searches that didn't lead to any clicks. (Synchronous version)
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetSearchesNoClicksResponse</returns>
  GetSearchesNoClicksResponse GetSearchesNoClicks(string index, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Returns the most popular of the latest 1,000 searches that didn't return any results.
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetSearchesNoResultsResponse</returns>
  Task<GetSearchesNoResultsResponse> GetSearchesNoResultsAsync(string index, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Returns the most popular of the latest 1,000 searches that didn't return any results. (Synchronous version)
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetSearchesNoResultsResponse</returns>
  GetSearchesNoResultsResponse GetSearchesNoResults(string index, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Return the latest update time of the Analytics API for an index. If the index has been recently created or no search has been performed yet, `updatedAt` will be `null`. > **Note**: The Analytics API is updated every 5&nbsp;minutes. 
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetStatusResponse</returns>
  Task<GetStatusResponse> GetStatusAsync(string index, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Return the latest update time of the Analytics API for an index. If the index has been recently created or no search has been performed yet, `updatedAt` will be `null`. > **Note**: The Analytics API is updated every 5&nbsp;minutes.  (Synchronous version)
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetStatusResponse</returns>
  GetStatusResponse GetStatus(string index, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Returns top countries. Limited to the 1,000 most frequent ones.
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetTopCountriesResponse</returns>
  Task<GetTopCountriesResponse> GetTopCountriesAsync(string index, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Returns top countries. Limited to the 1,000 most frequent ones. (Synchronous version)
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetTopCountriesResponse</returns>
  GetTopCountriesResponse GetTopCountries(string index, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Return the most popular [filterable attributes](https://www.algolia.com/doc/guides/managing-results/refine-results/filtering/) in the 1,000 most recently used filters.
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="search">User query. (optional)</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetTopFilterAttributesResponse</returns>
  Task<GetTopFilterAttributesResponse> GetTopFilterAttributesAsync(string index, string search = default, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Return the most popular [filterable attributes](https://www.algolia.com/doc/guides/managing-results/refine-results/filtering/) in the 1,000 most recently used filters. (Synchronous version)
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="search">User query. (optional)</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetTopFilterAttributesResponse</returns>
  GetTopFilterAttributesResponse GetTopFilterAttributes(string index, string search = default, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Returns the most popular filter values for an attribute in the 1,000 most recently used filters.
  /// </summary>
  /// <param name="attribute">Attribute name.</param>
  /// <param name="index">Index name.</param>
  /// <param name="search">User query. (optional)</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetTopFilterForAttributeResponse</returns>
  Task<GetTopFilterForAttributeResponse> GetTopFilterForAttributeAsync(string attribute, string index, string search = default, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Returns the most popular filter values for an attribute in the 1,000 most recently used filters. (Synchronous version)
  /// </summary>
  /// <param name="attribute">Attribute name.</param>
  /// <param name="index">Index name.</param>
  /// <param name="search">User query. (optional)</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetTopFilterForAttributeResponse</returns>
  GetTopFilterForAttributeResponse GetTopFilterForAttribute(string attribute, string index, string search = default, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Returns top filters for filter-enabled searches that don't return results. Limited to the 1,000 most recently used filters.
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="search">User query. (optional)</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetTopFiltersNoResultsResponse</returns>
  Task<GetTopFiltersNoResultsResponse> GetTopFiltersNoResultsAsync(string index, string search = default, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Returns top filters for filter-enabled searches that don't return results. Limited to the 1,000 most recently used filters. (Synchronous version)
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="search">User query. (optional)</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetTopFiltersNoResultsResponse</returns>
  GetTopFiltersNoResultsResponse GetTopFiltersNoResults(string index, string search = default, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Return the most popular clicked results in the last 1,000 searches.
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="search">User query. (optional)</param>
  /// <param name="clickAnalytics">Whether to include [click and conversion](https://www.algolia.com/doc/guides/sending-events/getting-started/) rates for a search. (optional, default to false)</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetTopHitsResponse</returns>
  Task<GetTopHitsResponse> GetTopHitsAsync(string index, string search = default, bool? clickAnalytics = default, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Return the most popular clicked results in the last 1,000 searches. (Synchronous version)
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="search">User query. (optional)</param>
  /// <param name="clickAnalytics">Whether to include [click and conversion](https://www.algolia.com/doc/guides/sending-events/getting-started/) rates for a search. (optional, default to false)</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetTopHitsResponse</returns>
  GetTopHitsResponse GetTopHits(string index, string search = default, bool? clickAnalytics = default, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Returns the most popular of the latest 1,000 searches. For each search, also returns the number of hits.
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="clickAnalytics">Whether to include [click and conversion](https://www.algolia.com/doc/guides/sending-events/getting-started/) rates for a search. (optional, default to false)</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="orderBy">Reorder the results. (optional)</param>
  /// <param name="direction">Sorting direction of the results: ascending or descending.  (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetTopSearchesResponse</returns>
  Task<GetTopSearchesResponse> GetTopSearchesAsync(string index, bool? clickAnalytics = default, string startDate = default, string endDate = default, OrderBy? orderBy = default, Direction? direction = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Returns the most popular of the latest 1,000 searches. For each search, also returns the number of hits. (Synchronous version)
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="clickAnalytics">Whether to include [click and conversion](https://www.algolia.com/doc/guides/sending-events/getting-started/) rates for a search. (optional, default to false)</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="orderBy">Reorder the results. (optional)</param>
  /// <param name="direction">Sorting direction of the results: ascending or descending.  (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetTopSearchesResponse</returns>
  GetTopSearchesResponse GetTopSearches(string index, bool? clickAnalytics = default, string startDate = default, string endDate = default, OrderBy? orderBy = default, Direction? direction = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Return the count of unique users.
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetUsersCountResponse</returns>
  Task<GetUsersCountResponse> GetUsersCountAsync(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

  /// <summary>
  /// Return the count of unique users. (Synchronous version)
  /// </summary>
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (`YYYY-MM-DD`) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [`analyticsTags`](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetUsersCountResponse</returns>
  GetUsersCountResponse GetUsersCount(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default);

}



/// <summary>
/// Represents a collection of functions to interact with the API endpoints
/// </summary>
public partial class AnalyticsClient : IAnalyticsClient
{
  private readonly HttpTransport _transport;
  private readonly ILogger<AnalyticsClient> _logger;

  /// <summary>
  /// Create a new Analytics client for the given appID and apiKey.
  /// </summary>
  /// <param name="applicationId">Your application</param>
  /// <param name="apiKey">Your API key</param>
  /// <param name="loggerFactory">Logger factory</param>
  /// <param name="region">The targeted region</param>
  public AnalyticsClient(string applicationId, string apiKey, string region = null, ILoggerFactory loggerFactory = null) : this(new AnalyticsConfig(applicationId, apiKey, region), new AlgoliaHttpRequester(loggerFactory), loggerFactory)
  {
  }

  /// <summary>
  /// Initialize a client with custom config
  /// </summary>
  /// <param name="config">Algolia configuration</param>
  /// <param name="loggerFactory">Logger factory</param>
  public AnalyticsClient(AnalyticsConfig config, ILoggerFactory loggerFactory = null) : this(config, new AlgoliaHttpRequester(loggerFactory), loggerFactory)
  {
  }

  /// <summary>
  /// Initialize the client with custom config and custom Requester
  /// </summary>
  /// <param name="config">Algolia Config</param>
  /// <param name="httpRequester">Your Http requester implementation of <see cref="IHttpRequester"/></param>
  /// <param name="loggerFactory">Logger factory</param>
  public AnalyticsClient(AnalyticsConfig config, IHttpRequester httpRequester, ILoggerFactory loggerFactory = null)
  {
    if (httpRequester == null)
    {
      throw new ArgumentException("An httpRequester is required");
    }
    if (config == null)
    {
      throw new ArgumentException("A config is required");
    }
    if (string.IsNullOrWhiteSpace(config.AppId))
    {
      throw new ArgumentException("`AppId` is missing.");
    }
    if (string.IsNullOrWhiteSpace(config.ApiKey))
    {
      throw new ArgumentException("`ApiKey` is missing.");
    }

    var factory = loggerFactory ?? NullLoggerFactory.Instance;
    _transport = new HttpTransport(config, httpRequester, factory);
    _logger = factory.CreateLogger<AnalyticsClient>();

    if (_logger.IsEnabled(Microsoft.Extensions.Logging.LogLevel.Information))
    {
      _logger.LogInformation("Algolia Analytics client is initialized.");
    }
  }


  /// <summary>
  /// This method allow you to send requests to the Algolia REST API.
  /// </summary>
  /// <param name="path">Path of the endpoint, anything after \&quot;/1\&quot; must be specified.</param>
  /// <param name="parameters">Query parameters to apply to the current query. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of object</returns>
  public async Task<object> CustomDeleteAsync(string path, Dictionary<string, object> parameters = default, RequestOptions options = null, CancellationToken cancellationToken = default)
  {

    if (path == null)
      throw new ArgumentException("Parameter `path` is required when calling `CustomDelete`.");

    var requestOptions = new InternalRequestOptions(options);
    requestOptions.CustomPathParameters.Add("path", QueryStringHelper.ParameterToString(path));

    requestOptions.AddCustomQueryParameters(parameters);
    return await _transport.ExecuteRequestAsync<object>(new HttpMethod("DELETE"), "/{path}", requestOptions, cancellationToken).ConfigureAwait(false);
  }


  /// <summary>
  /// This method allow you to send requests to the Algolia REST API. (Synchronous version)
  /// </summary>
  /// <param name="path">Path of the endpoint, anything after \&quot;/1\&quot; must be specified.</param>
  /// <param name="parameters">Query parameters to apply to the current query. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>object</returns>
  public object CustomDelete(string path, Dictionary<string, object> parameters = default, RequestOptions options = null, CancellationToken cancellationToken = default) =>
    AsyncHelper.RunSync(() => CustomDeleteAsync(path, parameters, options, cancellationToken));


  /// <summary>
  /// This method allow you to send requests to the Algolia REST API.
  /// </summary>
  /// <param name="path">Path of the endpoint, anything after \&quot;/1\&quot; must be specified.</param>
  /// <param name="parameters">Query parameters to apply to the current query. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of object</returns>
  public async Task<object> CustomGetAsync(string path, Dictionary<string, object> parameters = default, RequestOptions options = null, CancellationToken cancellationToken = default)
  {

    if (path == null)
      throw new ArgumentException("Parameter `path` is required when calling `CustomGet`.");

    var requestOptions = new InternalRequestOptions(options);
    requestOptions.CustomPathParameters.Add("path", QueryStringHelper.ParameterToString(path));

    requestOptions.AddCustomQueryParameters(parameters);
    return await _transport.ExecuteRequestAsync<object>(new HttpMethod("GET"), "/{path}", requestOptions, cancellationToken).ConfigureAwait(false);
  }


  /// <summary>
  /// This method allow you to send requests to the Algolia REST API. (Synchronous version)
  /// </summary>
  /// <param name="path">Path of the endpoint, anything after \&quot;/1\&quot; must be specified.</param>
  /// <param name="parameters">Query parameters to apply to the current query. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>object</returns>
  public object CustomGet(string path, Dictionary<string, object> parameters = default, RequestOptions options = null, CancellationToken cancellationToken = default) =>
    AsyncHelper.RunSync(() => CustomGetAsync(path, parameters, options, cancellationToken));


  /// <summary>
  /// This method allow you to send requests to the Algolia REST API.
  /// </summary>
  /// <param name="path">Path of the endpoint, anything after \&quot;/1\&quot; must be specified.</param>
  /// <param name="parameters">Query parameters to apply to the current query. (optional)</param>
  /// <param name="body">Parameters to send with the custom request. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of object</returns>
  public async Task<object> CustomPostAsync(string path, Dictionary<string, object> parameters = default, object body = default, RequestOptions options = null, CancellationToken cancellationToken = default)
  {

    if (path == null)
      throw new ArgumentException("Parameter `path` is required when calling `CustomPost`.");

    var requestOptions = new InternalRequestOptions(options);
    requestOptions.CustomPathParameters.Add("path", QueryStringHelper.ParameterToString(path));

    requestOptions.AddCustomQueryParameters(parameters);
    requestOptions.Data = body;
    return await _transport.ExecuteRequestAsync<object>(new HttpMethod("POST"), "/{path}", requestOptions, cancellationToken).ConfigureAwait(false);
  }


  /// <summary>
  /// This method allow you to send requests to the Algolia REST API. (Synchronous version)
  /// </summary>
  /// <param name="path">Path of the endpoint, anything after \&quot;/1\&quot; must be specified.</param>
  /// <param name="parameters">Query parameters to apply to the current query. (optional)</param>
  /// <param name="body">Parameters to send with the custom request. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>object</returns>
  public object CustomPost(string path, Dictionary<string, object> parameters = default, object body = default, RequestOptions options = null, CancellationToken cancellationToken = default) =>
    AsyncHelper.RunSync(() => CustomPostAsync(path, parameters, body, options, cancellationToken));


  /// <summary>
  /// This method allow you to send requests to the Algolia REST API.
  /// </summary>
  /// <param name="path">Path of the endpoint, anything after \&quot;/1\&quot; must be specified.</param>
  /// <param name="parameters">Query parameters to apply to the current query. (optional)</param>
  /// <param name="body">Parameters to send with the custom request. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of object</returns>
  public async Task<object> CustomPutAsync(string path, Dictionary<string, object> parameters = default, object body = default, RequestOptions options = null, CancellationToken cancellationToken = default)
  {

    if (path == null)
      throw new ArgumentException("Parameter `path` is required when calling `CustomPut`.");

    var requestOptions = new InternalRequestOptions(options);
    requestOptions.CustomPathParameters.Add("path", QueryStringHelper.ParameterToString(path));

    requestOptions.AddCustomQueryParameters(parameters);
    requestOptions.Data = body;
    return await _transport.ExecuteRequestAsync<object>(new HttpMethod("PUT"), "/{path}", requestOptions, cancellationToken).ConfigureAwait(false);
  }


  /// <summary>
  /// This method allow you to send requests to the Algolia REST API. (Synchronous version)
  /// </summary>
  /// <param name="path">Path of the endpoint, anything after \&quot;/1\&quot; must be specified.</param>
  /// <param name="parameters">Query parameters to apply to the current query. (optional)</param>
  /// <param name="body">Parameters to send with the custom request. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>object</returns>
  public object CustomPut(string path, Dictionary<string, object> parameters = default, object body = default, RequestOptions options = null, CancellationToken cancellationToken = default) =>
    AsyncHelper.RunSync(() => CustomPutAsync(path, parameters, body, options, cancellationToken));


  /// <summary>
  /// Return the average click position for the complete time range and for individual days. > **Note**: If all `positions` have a `clickCount` of `0` or `null`, it means Algolia didn't receive any click events for tracked searches. A _tracked_ search is a search request where the `clickAnalytics` parameter is `true`. 
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetAverageClickPositionResponse</returns>
  public async Task<GetAverageClickPositionResponse> GetAverageClickPositionAsync(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default)
  {

    if (index == null)
      throw new ArgumentException("Parameter `index` is required when calling `GetAverageClickPosition`.");

    var requestOptions = new InternalRequestOptions(options);


    requestOptions.AddQueryParameter("index", index);
    requestOptions.AddQueryParameter("startDate", startDate);
    requestOptions.AddQueryParameter("endDate", endDate);
    requestOptions.AddQueryParameter("tags", tags);
    return await _transport.ExecuteRequestAsync<GetAverageClickPositionResponse>(new HttpMethod("GET"), "/2/clicks/averageClickPosition", requestOptions, cancellationToken).ConfigureAwait(false);
  }


  /// <summary>
  /// Return the average click position for the complete time range and for individual days. > **Note**: If all `positions` have a `clickCount` of `0` or `null`, it means Algolia didn't receive any click events for tracked searches. A _tracked_ search is a search request where the `clickAnalytics` parameter is `true`.  (Synchronous version)
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetAverageClickPositionResponse</returns>
  public GetAverageClickPositionResponse GetAverageClickPosition(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default) =>
    AsyncHelper.RunSync(() => GetAverageClickPositionAsync(index, startDate, endDate, tags, options, cancellationToken));


  /// <summary>
  /// Show the number of clicks events and their associated position in the search results.  > **Note**: If all `positions` have a `clickCount` of `0` or `null`, it means Algolia didn't receive any click events for tracked searches. A _tracked_ search is a search request where the `clickAnalytics` parameter is `true`. 
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetClickPositionsResponse</returns>
  public async Task<GetClickPositionsResponse> GetClickPositionsAsync(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default)
  {

    if (index == null)
      throw new ArgumentException("Parameter `index` is required when calling `GetClickPositions`.");

    var requestOptions = new InternalRequestOptions(options);


    requestOptions.AddQueryParameter("index", index);
    requestOptions.AddQueryParameter("startDate", startDate);
    requestOptions.AddQueryParameter("endDate", endDate);
    requestOptions.AddQueryParameter("tags", tags);
    return await _transport.ExecuteRequestAsync<GetClickPositionsResponse>(new HttpMethod("GET"), "/2/clicks/positions", requestOptions, cancellationToken).ConfigureAwait(false);
  }


  /// <summary>
  /// Show the number of clicks events and their associated position in the search results.  > **Note**: If all `positions` have a `clickCount` of `0` or `null`, it means Algolia didn't receive any click events for tracked searches. A _tracked_ search is a search request where the `clickAnalytics` parameter is `true`.  (Synchronous version)
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetClickPositionsResponse</returns>
  public GetClickPositionsResponse GetClickPositions(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default) =>
    AsyncHelper.RunSync(() => GetClickPositionsAsync(index, startDate, endDate, tags, options, cancellationToken));


  /// <summary>
  /// Returns a [click-through rate (CTR)](https://www.algolia.com/doc/guides/search-analytics/concepts/metrics/#click-through-rate).
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetClickThroughRateResponse</returns>
  public async Task<GetClickThroughRateResponse> GetClickThroughRateAsync(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default)
  {

    if (index == null)
      throw new ArgumentException("Parameter `index` is required when calling `GetClickThroughRate`.");

    var requestOptions = new InternalRequestOptions(options);


    requestOptions.AddQueryParameter("index", index);
    requestOptions.AddQueryParameter("startDate", startDate);
    requestOptions.AddQueryParameter("endDate", endDate);
    requestOptions.AddQueryParameter("tags", tags);
    return await _transport.ExecuteRequestAsync<GetClickThroughRateResponse>(new HttpMethod("GET"), "/2/clicks/clickThroughRate", requestOptions, cancellationToken).ConfigureAwait(false);
  }


  /// <summary>
  /// Returns a [click-through rate (CTR)](https://www.algolia.com/doc/guides/search-analytics/concepts/metrics/#click-through-rate). (Synchronous version)
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetClickThroughRateResponse</returns>
  public GetClickThroughRateResponse GetClickThroughRate(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default) =>
    AsyncHelper.RunSync(() => GetClickThroughRateAsync(index, startDate, endDate, tags, options, cancellationToken));


  /// <summary>
  /// Return a [conversion rate](https://www.algolia.com/doc/guides/search-analytics/concepts/metrics/#conversion-rate).
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetConversationRateResponse</returns>
  public async Task<GetConversationRateResponse> GetConversationRateAsync(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default)
  {

    if (index == null)
      throw new ArgumentException("Parameter `index` is required when calling `GetConversationRate`.");

    var requestOptions = new InternalRequestOptions(options);


    requestOptions.AddQueryParameter("index", index);
    requestOptions.AddQueryParameter("startDate", startDate);
    requestOptions.AddQueryParameter("endDate", endDate);
    requestOptions.AddQueryParameter("tags", tags);
    return await _transport.ExecuteRequestAsync<GetConversationRateResponse>(new HttpMethod("GET"), "/2/conversions/conversionRate", requestOptions, cancellationToken).ConfigureAwait(false);
  }


  /// <summary>
  /// Return a [conversion rate](https://www.algolia.com/doc/guides/search-analytics/concepts/metrics/#conversion-rate). (Synchronous version)
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetConversationRateResponse</returns>
  public GetConversationRateResponse GetConversationRate(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default) =>
    AsyncHelper.RunSync(() => GetConversationRateAsync(index, startDate, endDate, tags, options, cancellationToken));


  /// <summary>
  /// Returns the rate at which searches don't lead to any clicks. The endpoint returns a value for the complete given time range, as well as a value per day. It also returns the count of searches and searches without clicks.
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetNoClickRateResponse</returns>
  public async Task<GetNoClickRateResponse> GetNoClickRateAsync(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default)
  {

    if (index == null)
      throw new ArgumentException("Parameter `index` is required when calling `GetNoClickRate`.");

    var requestOptions = new InternalRequestOptions(options);


    requestOptions.AddQueryParameter("index", index);
    requestOptions.AddQueryParameter("startDate", startDate);
    requestOptions.AddQueryParameter("endDate", endDate);
    requestOptions.AddQueryParameter("tags", tags);
    return await _transport.ExecuteRequestAsync<GetNoClickRateResponse>(new HttpMethod("GET"), "/2/searches/noClickRate", requestOptions, cancellationToken).ConfigureAwait(false);
  }


  /// <summary>
  /// Returns the rate at which searches don't lead to any clicks. The endpoint returns a value for the complete given time range, as well as a value per day. It also returns the count of searches and searches without clicks. (Synchronous version)
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetNoClickRateResponse</returns>
  public GetNoClickRateResponse GetNoClickRate(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default) =>
    AsyncHelper.RunSync(() => GetNoClickRateAsync(index, startDate, endDate, tags, options, cancellationToken));


  /// <summary>
  /// Returns the rate at which searches didn't return any results.
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetNoResultsRateResponse</returns>
  public async Task<GetNoResultsRateResponse> GetNoResultsRateAsync(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default)
  {

    if (index == null)
      throw new ArgumentException("Parameter `index` is required when calling `GetNoResultsRate`.");

    var requestOptions = new InternalRequestOptions(options);


    requestOptions.AddQueryParameter("index", index);
    requestOptions.AddQueryParameter("startDate", startDate);
    requestOptions.AddQueryParameter("endDate", endDate);
    requestOptions.AddQueryParameter("tags", tags);
    return await _transport.ExecuteRequestAsync<GetNoResultsRateResponse>(new HttpMethod("GET"), "/2/searches/noResultRate", requestOptions, cancellationToken).ConfigureAwait(false);
  }


  /// <summary>
  /// Returns the rate at which searches didn't return any results. (Synchronous version)
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetNoResultsRateResponse</returns>
  public GetNoResultsRateResponse GetNoResultsRate(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default) =>
    AsyncHelper.RunSync(() => GetNoResultsRateAsync(index, startDate, endDate, tags, options, cancellationToken));


  /// <summary>
  /// Returns the number of searches within a time range.
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetSearchesCountResponse</returns>
  public async Task<GetSearchesCountResponse> GetSearchesCountAsync(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default)
  {

    if (index == null)
      throw new ArgumentException("Parameter `index` is required when calling `GetSearchesCount`.");

    var requestOptions = new InternalRequestOptions(options);


    requestOptions.AddQueryParameter("index", index);
    requestOptions.AddQueryParameter("startDate", startDate);
    requestOptions.AddQueryParameter("endDate", endDate);
    requestOptions.AddQueryParameter("tags", tags);
    return await _transport.ExecuteRequestAsync<GetSearchesCountResponse>(new HttpMethod("GET"), "/2/searches/count", requestOptions, cancellationToken).ConfigureAwait(false);
  }


  /// <summary>
  /// Returns the number of searches within a time range. (Synchronous version)
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetSearchesCountResponse</returns>
  public GetSearchesCountResponse GetSearchesCount(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default) =>
    AsyncHelper.RunSync(() => GetSearchesCountAsync(index, startDate, endDate, tags, options, cancellationToken));


  /// <summary>
  /// Return the most popular of the last 1,000 searches that didn't lead to any clicks.
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetSearchesNoClicksResponse</returns>
  public async Task<GetSearchesNoClicksResponse> GetSearchesNoClicksAsync(string index, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default)
  {

    if (index == null)
      throw new ArgumentException("Parameter `index` is required when calling `GetSearchesNoClicks`.");

    var requestOptions = new InternalRequestOptions(options);


    requestOptions.AddQueryParameter("index", index);
    requestOptions.AddQueryParameter("startDate", startDate);
    requestOptions.AddQueryParameter("endDate", endDate);
    requestOptions.AddQueryParameter("limit", limit);
    requestOptions.AddQueryParameter("offset", offset);
    requestOptions.AddQueryParameter("tags", tags);
    return await _transport.ExecuteRequestAsync<GetSearchesNoClicksResponse>(new HttpMethod("GET"), "/2/searches/noClicks", requestOptions, cancellationToken).ConfigureAwait(false);
  }


  /// <summary>
  /// Return the most popular of the last 1,000 searches that didn't lead to any clicks. (Synchronous version)
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetSearchesNoClicksResponse</returns>
  public GetSearchesNoClicksResponse GetSearchesNoClicks(string index, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default) =>
    AsyncHelper.RunSync(() => GetSearchesNoClicksAsync(index, startDate, endDate, limit, offset, tags, options, cancellationToken));


  /// <summary>
  /// Returns the most popular of the latest 1,000 searches that didn't return any results.
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetSearchesNoResultsResponse</returns>
  public async Task<GetSearchesNoResultsResponse> GetSearchesNoResultsAsync(string index, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default)
  {

    if (index == null)
      throw new ArgumentException("Parameter `index` is required when calling `GetSearchesNoResults`.");

    var requestOptions = new InternalRequestOptions(options);


    requestOptions.AddQueryParameter("index", index);
    requestOptions.AddQueryParameter("startDate", startDate);
    requestOptions.AddQueryParameter("endDate", endDate);
    requestOptions.AddQueryParameter("limit", limit);
    requestOptions.AddQueryParameter("offset", offset);
    requestOptions.AddQueryParameter("tags", tags);
    return await _transport.ExecuteRequestAsync<GetSearchesNoResultsResponse>(new HttpMethod("GET"), "/2/searches/noResults", requestOptions, cancellationToken).ConfigureAwait(false);
  }


  /// <summary>
  /// Returns the most popular of the latest 1,000 searches that didn't return any results. (Synchronous version)
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetSearchesNoResultsResponse</returns>
  public GetSearchesNoResultsResponse GetSearchesNoResults(string index, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default) =>
    AsyncHelper.RunSync(() => GetSearchesNoResultsAsync(index, startDate, endDate, limit, offset, tags, options, cancellationToken));


  /// <summary>
  /// Return the latest update time of the Analytics API for an index. If the index has been recently created or no search has been performed yet, `updatedAt` will be `null`. > **Note**: The Analytics API is updated every 5&nbsp;minutes. 
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetStatusResponse</returns>
  public async Task<GetStatusResponse> GetStatusAsync(string index, RequestOptions options = null, CancellationToken cancellationToken = default)
  {

    if (index == null)
      throw new ArgumentException("Parameter `index` is required when calling `GetStatus`.");

    var requestOptions = new InternalRequestOptions(options);


    requestOptions.AddQueryParameter("index", index);
    return await _transport.ExecuteRequestAsync<GetStatusResponse>(new HttpMethod("GET"), "/2/status", requestOptions, cancellationToken).ConfigureAwait(false);
  }


  /// <summary>
  /// Return the latest update time of the Analytics API for an index. If the index has been recently created or no search has been performed yet, `updatedAt` will be `null`. > **Note**: The Analytics API is updated every 5&nbsp;minutes.  (Synchronous version)
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetStatusResponse</returns>
  public GetStatusResponse GetStatus(string index, RequestOptions options = null, CancellationToken cancellationToken = default) =>
    AsyncHelper.RunSync(() => GetStatusAsync(index, options, cancellationToken));


  /// <summary>
  /// Returns top countries. Limited to the 1,000 most frequent ones.
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetTopCountriesResponse</returns>
  public async Task<GetTopCountriesResponse> GetTopCountriesAsync(string index, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default)
  {

    if (index == null)
      throw new ArgumentException("Parameter `index` is required when calling `GetTopCountries`.");

    var requestOptions = new InternalRequestOptions(options);


    requestOptions.AddQueryParameter("index", index);
    requestOptions.AddQueryParameter("startDate", startDate);
    requestOptions.AddQueryParameter("endDate", endDate);
    requestOptions.AddQueryParameter("limit", limit);
    requestOptions.AddQueryParameter("offset", offset);
    requestOptions.AddQueryParameter("tags", tags);
    return await _transport.ExecuteRequestAsync<GetTopCountriesResponse>(new HttpMethod("GET"), "/2/countries", requestOptions, cancellationToken).ConfigureAwait(false);
  }


  /// <summary>
  /// Returns top countries. Limited to the 1,000 most frequent ones. (Synchronous version)
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetTopCountriesResponse</returns>
  public GetTopCountriesResponse GetTopCountries(string index, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default) =>
    AsyncHelper.RunSync(() => GetTopCountriesAsync(index, startDate, endDate, limit, offset, tags, options, cancellationToken));


  /// <summary>
  /// Return the most popular [filterable attributes](https://www.algolia.com/doc/guides/managing-results/refine-results/filtering/) in the 1,000 most recently used filters.
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="search">User query. (optional)</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetTopFilterAttributesResponse</returns>
  public async Task<GetTopFilterAttributesResponse> GetTopFilterAttributesAsync(string index, string search = default, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default)
  {

    if (index == null)
      throw new ArgumentException("Parameter `index` is required when calling `GetTopFilterAttributes`.");

    var requestOptions = new InternalRequestOptions(options);


    requestOptions.AddQueryParameter("index", index);
    requestOptions.AddQueryParameter("search", search);
    requestOptions.AddQueryParameter("startDate", startDate);
    requestOptions.AddQueryParameter("endDate", endDate);
    requestOptions.AddQueryParameter("limit", limit);
    requestOptions.AddQueryParameter("offset", offset);
    requestOptions.AddQueryParameter("tags", tags);
    return await _transport.ExecuteRequestAsync<GetTopFilterAttributesResponse>(new HttpMethod("GET"), "/2/filters", requestOptions, cancellationToken).ConfigureAwait(false);
  }


  /// <summary>
  /// Return the most popular [filterable attributes](https://www.algolia.com/doc/guides/managing-results/refine-results/filtering/) in the 1,000 most recently used filters. (Synchronous version)
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="search">User query. (optional)</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetTopFilterAttributesResponse</returns>
  public GetTopFilterAttributesResponse GetTopFilterAttributes(string index, string search = default, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default) =>
    AsyncHelper.RunSync(() => GetTopFilterAttributesAsync(index, search, startDate, endDate, limit, offset, tags, options, cancellationToken));


  /// <summary>
  /// Returns the most popular filter values for an attribute in the 1,000 most recently used filters.
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="attribute">Attribute name.</param>
  /// <param name="index">Index name.</param>
  /// <param name="search">User query. (optional)</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetTopFilterForAttributeResponse</returns>
  public async Task<GetTopFilterForAttributeResponse> GetTopFilterForAttributeAsync(string attribute, string index, string search = default, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default)
  {

    if (attribute == null)
      throw new ArgumentException("Parameter `attribute` is required when calling `GetTopFilterForAttribute`.");


    if (index == null)
      throw new ArgumentException("Parameter `index` is required when calling `GetTopFilterForAttribute`.");

    var requestOptions = new InternalRequestOptions(options);

    requestOptions.PathParameters.Add("attribute", QueryStringHelper.ParameterToString(attribute));

    requestOptions.AddQueryParameter("index", index);
    requestOptions.AddQueryParameter("search", search);
    requestOptions.AddQueryParameter("startDate", startDate);
    requestOptions.AddQueryParameter("endDate", endDate);
    requestOptions.AddQueryParameter("limit", limit);
    requestOptions.AddQueryParameter("offset", offset);
    requestOptions.AddQueryParameter("tags", tags);
    return await _transport.ExecuteRequestAsync<GetTopFilterForAttributeResponse>(new HttpMethod("GET"), "/2/filters/{attribute}", requestOptions, cancellationToken).ConfigureAwait(false);
  }


  /// <summary>
  /// Returns the most popular filter values for an attribute in the 1,000 most recently used filters. (Synchronous version)
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="attribute">Attribute name.</param>
  /// <param name="index">Index name.</param>
  /// <param name="search">User query. (optional)</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetTopFilterForAttributeResponse</returns>
  public GetTopFilterForAttributeResponse GetTopFilterForAttribute(string attribute, string index, string search = default, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default) =>
    AsyncHelper.RunSync(() => GetTopFilterForAttributeAsync(attribute, index, search, startDate, endDate, limit, offset, tags, options, cancellationToken));


  /// <summary>
  /// Returns top filters for filter-enabled searches that don't return results. Limited to the 1,000 most recently used filters.
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="search">User query. (optional)</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetTopFiltersNoResultsResponse</returns>
  public async Task<GetTopFiltersNoResultsResponse> GetTopFiltersNoResultsAsync(string index, string search = default, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default)
  {

    if (index == null)
      throw new ArgumentException("Parameter `index` is required when calling `GetTopFiltersNoResults`.");

    var requestOptions = new InternalRequestOptions(options);


    requestOptions.AddQueryParameter("index", index);
    requestOptions.AddQueryParameter("search", search);
    requestOptions.AddQueryParameter("startDate", startDate);
    requestOptions.AddQueryParameter("endDate", endDate);
    requestOptions.AddQueryParameter("limit", limit);
    requestOptions.AddQueryParameter("offset", offset);
    requestOptions.AddQueryParameter("tags", tags);
    return await _transport.ExecuteRequestAsync<GetTopFiltersNoResultsResponse>(new HttpMethod("GET"), "/2/filters/noResults", requestOptions, cancellationToken).ConfigureAwait(false);
  }


  /// <summary>
  /// Returns top filters for filter-enabled searches that don't return results. Limited to the 1,000 most recently used filters. (Synchronous version)
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="search">User query. (optional)</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetTopFiltersNoResultsResponse</returns>
  public GetTopFiltersNoResultsResponse GetTopFiltersNoResults(string index, string search = default, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default) =>
    AsyncHelper.RunSync(() => GetTopFiltersNoResultsAsync(index, search, startDate, endDate, limit, offset, tags, options, cancellationToken));


  /// <summary>
  /// Return the most popular clicked results in the last 1,000 searches.
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="search">User query. (optional)</param>
  /// <param name="clickAnalytics">Whether to include [click and conversion](https://www.algolia.com/doc/guides/sending-events/getting-started/) rates for a search. (optional, default to false)</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetTopHitsResponse</returns>
  public async Task<GetTopHitsResponse> GetTopHitsAsync(string index, string search = default, bool? clickAnalytics = default, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default)
  {

    if (index == null)
      throw new ArgumentException("Parameter `index` is required when calling `GetTopHits`.");

    var requestOptions = new InternalRequestOptions(options);


    requestOptions.AddQueryParameter("index", index);
    requestOptions.AddQueryParameter("search", search);
    requestOptions.AddQueryParameter("clickAnalytics", clickAnalytics);
    requestOptions.AddQueryParameter("startDate", startDate);
    requestOptions.AddQueryParameter("endDate", endDate);
    requestOptions.AddQueryParameter("limit", limit);
    requestOptions.AddQueryParameter("offset", offset);
    requestOptions.AddQueryParameter("tags", tags);
    return await _transport.ExecuteRequestAsync<GetTopHitsResponse>(new HttpMethod("GET"), "/2/hits", requestOptions, cancellationToken).ConfigureAwait(false);
  }


  /// <summary>
  /// Return the most popular clicked results in the last 1,000 searches. (Synchronous version)
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="search">User query. (optional)</param>
  /// <param name="clickAnalytics">Whether to include [click and conversion](https://www.algolia.com/doc/guides/sending-events/getting-started/) rates for a search. (optional, default to false)</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetTopHitsResponse</returns>
  public GetTopHitsResponse GetTopHits(string index, string search = default, bool? clickAnalytics = default, string startDate = default, string endDate = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default) =>
    AsyncHelper.RunSync(() => GetTopHitsAsync(index, search, clickAnalytics, startDate, endDate, limit, offset, tags, options, cancellationToken));


  /// <summary>
  /// Returns the most popular of the latest 1,000 searches. For each search, also returns the number of hits.
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="clickAnalytics">Whether to include [click and conversion](https://www.algolia.com/doc/guides/sending-events/getting-started/) rates for a search. (optional, default to false)</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="orderBy">Reorder the results. (optional)</param>
  /// <param name="direction">Sorting direction of the results: ascending or descending.  (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetTopSearchesResponse</returns>
  public async Task<GetTopSearchesResponse> GetTopSearchesAsync(string index, bool? clickAnalytics = default, string startDate = default, string endDate = default, OrderBy? orderBy = default, Direction? direction = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default)
  {

    if (index == null)
      throw new ArgumentException("Parameter `index` is required when calling `GetTopSearches`.");

    var requestOptions = new InternalRequestOptions(options);


    requestOptions.AddQueryParameter("index", index);
    requestOptions.AddQueryParameter("clickAnalytics", clickAnalytics);
    requestOptions.AddQueryParameter("startDate", startDate);
    requestOptions.AddQueryParameter("endDate", endDate);
    requestOptions.AddQueryParameter("orderBy", orderBy);
    requestOptions.AddQueryParameter("direction", direction);
    requestOptions.AddQueryParameter("limit", limit);
    requestOptions.AddQueryParameter("offset", offset);
    requestOptions.AddQueryParameter("tags", tags);
    return await _transport.ExecuteRequestAsync<GetTopSearchesResponse>(new HttpMethod("GET"), "/2/searches", requestOptions, cancellationToken).ConfigureAwait(false);
  }


  /// <summary>
  /// Returns the most popular of the latest 1,000 searches. For each search, also returns the number of hits. (Synchronous version)
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="clickAnalytics">Whether to include [click and conversion](https://www.algolia.com/doc/guides/sending-events/getting-started/) rates for a search. (optional, default to false)</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="orderBy">Reorder the results. (optional)</param>
  /// <param name="direction">Sorting direction of the results: ascending or descending.  (optional)</param>
  /// <param name="limit">Number of items to return. (optional, default to 10)</param>
  /// <param name="offset">Position of the first item to return. (optional, default to 0)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetTopSearchesResponse</returns>
  public GetTopSearchesResponse GetTopSearches(string index, bool? clickAnalytics = default, string startDate = default, string endDate = default, OrderBy? orderBy = default, Direction? direction = default, int? limit = default, int? offset = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default) =>
    AsyncHelper.RunSync(() => GetTopSearchesAsync(index, clickAnalytics, startDate, endDate, orderBy, direction, limit, offset, tags, options, cancellationToken));


  /// <summary>
  /// Return the count of unique users.
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>Task of GetUsersCountResponse</returns>
  public async Task<GetUsersCountResponse> GetUsersCountAsync(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default)
  {

    if (index == null)
      throw new ArgumentException("Parameter `index` is required when calling `GetUsersCount`.");

    var requestOptions = new InternalRequestOptions(options);


    requestOptions.AddQueryParameter("index", index);
    requestOptions.AddQueryParameter("startDate", startDate);
    requestOptions.AddQueryParameter("endDate", endDate);
    requestOptions.AddQueryParameter("tags", tags);
    return await _transport.ExecuteRequestAsync<GetUsersCountResponse>(new HttpMethod("GET"), "/2/users/count", requestOptions, cancellationToken).ConfigureAwait(false);
  }


  /// <summary>
  /// Return the count of unique users. (Synchronous version)
  /// </summary>
  ///
  /// Required API Key ACLs:
  ///   - analytics
  /// <param name="index">Index name.</param>
  /// <param name="startDate">Start date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="endDate">End date (&#x60;YYYY-MM-DD&#x60;) of the period to analyze. (optional)</param>
  /// <param name="tags">Filter analytics on the [&#x60;analyticsTags&#x60;](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/) set at search time. Multiple tags can be combined with the operators OR and AND. If a tag contains characters like spaces or parentheses, it must be URL-encoded. (optional)</param>
  /// <param name="options">Add extra http header or query parameters to Algolia.</param>
  /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
  /// <exception cref="ArgumentException">Thrown when arguments are not correct</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaApiException">Thrown when the API call was rejected by Algolia</exception>
  /// <exception cref="Algolia.Search.Exceptions.AlgoliaUnreachableHostException">Thrown when the client failed to call the endpoint</exception>
  /// <returns>GetUsersCountResponse</returns>
  public GetUsersCountResponse GetUsersCount(string index, string startDate = default, string endDate = default, string tags = default, RequestOptions options = null, CancellationToken cancellationToken = default) =>
    AsyncHelper.RunSync(() => GetUsersCountAsync(index, startDate, endDate, tags, options, cancellationToken));

}

