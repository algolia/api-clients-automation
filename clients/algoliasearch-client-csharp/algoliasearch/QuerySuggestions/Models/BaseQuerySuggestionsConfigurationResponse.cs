//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using Algolia.Search.Models;

namespace Algolia.Search.QuerySuggestions.Models
{
  /// <summary>
  /// BaseQuerySuggestionsConfigurationResponse
  /// </summary>
  [DataContract(Name = "baseQuerySuggestionsConfigurationResponse")]
  public partial class BaseQuerySuggestionsConfigurationResponse
  {
    /// <summary>
    /// Initializes a new instance of the <see cref="BaseQuerySuggestionsConfigurationResponse" /> class.
    /// </summary>
    /// <param name="appId">Your Algolia application ID..</param>
    /// <param name="sourceIndicesAPIKey">API key used to read from your source index..</param>
    /// <param name="suggestionsIndicesAPIKey">API key used to write and configure your Query Suggestions index..</param>
    /// <param name="externalIndicesAPIKey">API key used to read from external Algolia indices. (default to &quot;&quot;).</param>
    public BaseQuerySuggestionsConfigurationResponse(string appId = default(string), string sourceIndicesAPIKey = default(string), string suggestionsIndicesAPIKey = default(string), string externalIndicesAPIKey = @"")
    {
      this.AppId = appId;
      this.SourceIndicesAPIKey = sourceIndicesAPIKey;
      this.SuggestionsIndicesAPIKey = suggestionsIndicesAPIKey;
      // use default value if no "externalIndicesAPIKey" provided
      this.ExternalIndicesAPIKey = externalIndicesAPIKey ?? @"";
    }

    /// <summary>
    /// Your Algolia application ID.
    /// </summary>
    /// <value>Your Algolia application ID.</value>
    [DataMember(Name = "appId", EmitDefaultValue = false)]
    public string AppId { get; set; }

    /// <summary>
    /// API key used to read from your source index.
    /// </summary>
    /// <value>API key used to read from your source index.</value>
    [DataMember(Name = "sourceIndicesAPIKey", EmitDefaultValue = false)]
    public string SourceIndicesAPIKey { get; set; }

    /// <summary>
    /// API key used to write and configure your Query Suggestions index.
    /// </summary>
    /// <value>API key used to write and configure your Query Suggestions index.</value>
    [DataMember(Name = "suggestionsIndicesAPIKey", EmitDefaultValue = false)]
    public string SuggestionsIndicesAPIKey { get; set; }

    /// <summary>
    /// API key used to read from external Algolia indices.
    /// </summary>
    /// <value>API key used to read from external Algolia indices.</value>
    [DataMember(Name = "externalIndicesAPIKey", EmitDefaultValue = false)]
    public string ExternalIndicesAPIKey { get; set; }

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
      StringBuilder sb = new StringBuilder();
      sb.Append("class BaseQuerySuggestionsConfigurationResponse {\n");
      sb.Append("  AppId: ").Append(AppId).Append("\n");
      sb.Append("  SourceIndicesAPIKey: ").Append(SourceIndicesAPIKey).Append("\n");
      sb.Append("  SuggestionsIndicesAPIKey: ").Append(SuggestionsIndicesAPIKey).Append("\n");
      sb.Append("  ExternalIndicesAPIKey: ").Append(ExternalIndicesAPIKey).Append("\n");
      sb.Append("}\n");
      return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
      return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
    }

  }

}
