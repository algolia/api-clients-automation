//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using Algolia.Search.Models;

namespace Algolia.Search.Models.Search
{
  /// <summary>
  /// Dictionary language.
  /// </summary>
  [DataContract(Name = "languages")]
  [JsonObject(MemberSerialization.OptOut)]
  public partial class Languages
  {
    /// <summary>
    /// Initializes a new instance of the <see cref="Languages" /> class.
    /// </summary>
    [JsonConstructorAttribute]
    public Languages() { }
    /// <summary>
    /// Initializes a new instance of the <see cref="Languages" /> class.
    /// </summary>
    /// <param name="plurals">plurals (required).</param>
    /// <param name="stopwords">stopwords (required).</param>
    /// <param name="compounds">compounds (required).</param>
    public Languages(DictionaryLanguage plurals, DictionaryLanguage stopwords, DictionaryLanguage compounds)
    {
      this.Plurals = plurals ?? throw new ArgumentNullException("plurals is a required property for Languages and cannot be null");
      this.Stopwords = stopwords ?? throw new ArgumentNullException("stopwords is a required property for Languages and cannot be null");
      this.Compounds = compounds ?? throw new ArgumentNullException("compounds is a required property for Languages and cannot be null");
    }

    /// <summary>
    /// Gets or Sets Plurals
    /// </summary>
    [DataMember(Name = "plurals", IsRequired = true, EmitDefaultValue = false)]
    public DictionaryLanguage Plurals { get; set; }

    /// <summary>
    /// Gets or Sets Stopwords
    /// </summary>
    [DataMember(Name = "stopwords", IsRequired = true, EmitDefaultValue = false)]
    public DictionaryLanguage Stopwords { get; set; }

    /// <summary>
    /// Gets or Sets Compounds
    /// </summary>
    [DataMember(Name = "compounds", IsRequired = true, EmitDefaultValue = false)]
    public DictionaryLanguage Compounds { get; set; }

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
      StringBuilder sb = new StringBuilder();
      sb.Append("class Languages {\n");
      sb.Append("  Plurals: ").Append(Plurals).Append("\n");
      sb.Append("  Stopwords: ").Append(Stopwords).Append("\n");
      sb.Append("  Compounds: ").Append(Compounds).Append("\n");
      sb.Append("}\n");
      return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
      return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
    }

  }

}
