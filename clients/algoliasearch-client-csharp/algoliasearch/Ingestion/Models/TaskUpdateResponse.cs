//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using Algolia.Search.Models;

namespace Algolia.Search.Models.Ingestion
{
  /// <summary>
  /// The response from the API after a task update.
  /// </summary>
  [DataContract(Name = "TaskUpdateResponse")]
  public partial class TaskUpdateResponse
  {
    /// <summary>
    /// Initializes a new instance of the <see cref="TaskUpdateResponse" /> class.
    /// </summary>
    [JsonConstructorAttribute]
    public TaskUpdateResponse() { }
    /// <summary>
    /// Initializes a new instance of the <see cref="TaskUpdateResponse" /> class.
    /// </summary>
    /// <param name="taskID">The task UUID. (required).</param>
    /// <param name="updatedAt">Date of last update (RFC3339 format). (required).</param>
    public TaskUpdateResponse(string taskID, string updatedAt)
    {
      this.TaskID = taskID ?? throw new ArgumentNullException("taskID is a required property for TaskUpdateResponse and cannot be null");
      this.UpdatedAt = updatedAt ?? throw new ArgumentNullException("updatedAt is a required property for TaskUpdateResponse and cannot be null");
    }

    /// <summary>
    /// The task UUID.
    /// </summary>
    /// <value>The task UUID.</value>
    [DataMember(Name = "taskID", IsRequired = true, EmitDefaultValue = true)]
    public string TaskID { get; set; }

    /// <summary>
    /// Date of last update (RFC3339 format).
    /// </summary>
    /// <value>Date of last update (RFC3339 format).</value>
    [DataMember(Name = "updatedAt", IsRequired = true, EmitDefaultValue = true)]
    public string UpdatedAt { get; set; }

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
      StringBuilder sb = new StringBuilder();
      sb.Append("class TaskUpdateResponse {\n");
      sb.Append("  TaskID: ").Append(TaskID).Append("\n");
      sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
      sb.Append("}\n");
      return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
      return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
    }

  }

}
