//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Algolia.Search.Ingestion.Client.FileParameter;
using OpenAPIDateConverter = Algolia.Search.Ingestion.Client.OpenAPIDateConverter;

namespace Algolia.Search.Ingestion.Models
{
  /// <summary>
  /// SourceUpdate
  /// </summary>
  [DataContract(Name = "SourceUpdate")]
  public partial class SourceUpdate : IEquatable<SourceUpdate>, IValidatableObject
  {
    /// <summary>
    /// Initializes a new instance of the <see cref="SourceUpdate" /> class.
    /// </summary>
    /// <param name="name">name.</param>
    /// <param name="input">input.</param>
    /// <param name="authenticationID">The authentication UUID..</param>
    public SourceUpdate(string name = default(string), SourceUpdateInput input = default(SourceUpdateInput), string authenticationID = default(string))
    {
      this.Name = name;
      this.Input = input;
      this.AuthenticationID = authenticationID;
    }

    /// <summary>
    /// Gets or Sets Name
    /// </summary>
    [DataMember(Name = "name", EmitDefaultValue = false)]
    public string Name { get; set; }

    /// <summary>
    /// Gets or Sets Input
    /// </summary>
    [DataMember(Name = "input", EmitDefaultValue = false)]
    public SourceUpdateInput Input { get; set; }

    /// <summary>
    /// The authentication UUID.
    /// </summary>
    /// <value>The authentication UUID.</value>
    [DataMember(Name = "authenticationID", EmitDefaultValue = false)]
    public string AuthenticationID { get; set; }

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
      StringBuilder sb = new StringBuilder();
      sb.Append("class SourceUpdate {\n");
      sb.Append("  Name: ").Append(Name).Append("\n");
      sb.Append("  Input: ").Append(Input).Append("\n");
      sb.Append("  AuthenticationID: ").Append(AuthenticationID).Append("\n");
      sb.Append("}\n");
      return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
      return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
    }

    /// <summary>
    /// Returns true if objects are equal
    /// </summary>
    /// <param name="input">Object to be compared</param>
    /// <returns>Boolean</returns>
    public override bool Equals(object input)
    {
      return this.Equals(input as SourceUpdate);
    }

    /// <summary>
    /// Returns true if SourceUpdate instances are equal
    /// </summary>
    /// <param name="input">Instance of SourceUpdate to be compared</param>
    /// <returns>Boolean</returns>
    public bool Equals(SourceUpdate input)
    {
      if (input == null)
      {
        return false;
      }
      return
          (
              this.Name == input.Name ||
              (this.Name != null &&
              this.Name.Equals(input.Name))
          ) &&
          (
              this.Input == input.Input ||
              (this.Input != null &&
              this.Input.Equals(input.Input))
          ) &&
          (
              this.AuthenticationID == input.AuthenticationID ||
              (this.AuthenticationID != null &&
              this.AuthenticationID.Equals(input.AuthenticationID))
          );
    }

    /// <summary>
    /// Gets the hash code
    /// </summary>
    /// <returns>Hash code</returns>
    public override int GetHashCode()
    {
      unchecked // Overflow is fine, just wrap
      {
        int hashCode = 41;
        if (this.Name != null)
        {
          hashCode = (hashCode * 59) + this.Name.GetHashCode();
        }
        if (this.Input != null)
        {
          hashCode = (hashCode * 59) + this.Input.GetHashCode();
        }
        if (this.AuthenticationID != null)
        {
          hashCode = (hashCode * 59) + this.AuthenticationID.GetHashCode();
        }
        return hashCode;
      }
    }

    /// <summary>
    /// To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
      yield break;
    }
  }

}
