//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using Algolia.Search.Models;
using Algolia.Search.Models.Common;
using Algolia.Search.Serializer;

namespace Algolia.Search.Models.Ingestion;

/// <summary>
/// The payload for a task creation.
/// </summary>
[DataContract(Name = "TaskCreate")]
[JsonObject(MemberSerialization.OptOut)]
public partial class TaskCreate
{

  /// <summary>
  /// Gets or Sets Action
  /// </summary>
  [DataMember(Name = "action")]
  public ActionType Action { get; set; }
  /// <summary>
  /// Initializes a new instance of the TaskCreate class.
  /// </summary>
  [JsonConstructor]
  public TaskCreate() { }
  /// <summary>
  /// Initializes a new instance of the TaskCreate class.
  /// </summary>
  /// <param name="sourceID">The source UUID. (required).</param>
  /// <param name="destinationID">The destination UUID. (required).</param>
  /// <param name="trigger">trigger (required).</param>
  /// <param name="action">action (required).</param>
  public TaskCreate(string sourceID, string destinationID, TaskCreateTrigger trigger, ActionType action)
  {
    SourceID = sourceID ?? throw new ArgumentNullException(nameof(sourceID));
    DestinationID = destinationID ?? throw new ArgumentNullException(nameof(destinationID));
    Trigger = trigger ?? throw new ArgumentNullException(nameof(trigger));
    Action = action;
  }

  /// <summary>
  /// The source UUID.
  /// </summary>
  /// <value>The source UUID.</value>
  [DataMember(Name = "sourceID")]
  public string SourceID { get; set; }

  /// <summary>
  /// The destination UUID.
  /// </summary>
  /// <value>The destination UUID.</value>
  [DataMember(Name = "destinationID")]
  public string DestinationID { get; set; }

  /// <summary>
  /// Gets or Sets Trigger
  /// </summary>
  [DataMember(Name = "trigger")]
  public TaskCreateTrigger Trigger { get; set; }

  /// <summary>
  /// Whether the task is enabled or not.
  /// </summary>
  /// <value>Whether the task is enabled or not.</value>
  [DataMember(Name = "enabled")]
  public bool? Enabled { get; set; }

  /// <summary>
  /// A percentage representing the accepted failure threshold to determine if a `run` succeeded or not.
  /// </summary>
  /// <value>A percentage representing the accepted failure threshold to determine if a `run` succeeded or not.</value>
  [DataMember(Name = "failureThreshold")]
  public int? FailureThreshold { get; set; }

  /// <summary>
  /// Gets or Sets Input
  /// </summary>
  [DataMember(Name = "input")]
  public TaskInput? Input { get; set; }

  /// <summary>
  /// Returns the string presentation of the object
  /// </summary>
  /// <returns>String presentation of the object</returns>
  public override string ToString()
  {
    StringBuilder sb = new StringBuilder();
    sb.Append("class TaskCreate {\n");
    sb.Append("  SourceID: ").Append(SourceID).Append("\n");
    sb.Append("  DestinationID: ").Append(DestinationID).Append("\n");
    sb.Append("  Trigger: ").Append(Trigger).Append("\n");
    sb.Append("  Action: ").Append(Action).Append("\n");
    sb.Append("  Enabled: ").Append(Enabled).Append("\n");
    sb.Append("  FailureThreshold: ").Append(FailureThreshold).Append("\n");
    sb.Append("  Input: ").Append(Input).Append("\n");
    sb.Append("}\n");
    return sb.ToString();
  }

  /// <summary>
  /// Returns the JSON string presentation of the object
  /// </summary>
  /// <returns>JSON string presentation of the object</returns>
  public virtual string ToJson()
  {
    return JsonConvert.SerializeObject(this, Formatting.Indented);
  }

}

