//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using Algolia.Search.Models;
using Algolia.Search.Models.Common;
using Algolia.Search.Serializer;

namespace Algolia.Search.Models.Ingestion;

/// <summary>
/// Run
/// </summary>
[DataContract(Name = "Run")]
[JsonObject(MemberSerialization.OptOut)]
public partial class Run
{

  /// <summary>
  /// Gets or Sets Status
  /// </summary>
  [DataMember(Name = "status", IsRequired = true, EmitDefaultValue = false)]
  public RunStatus Status { get; set; }

  /// <summary>
  /// Gets or Sets Outcome
  /// </summary>
  [DataMember(Name = "outcome", EmitDefaultValue = false)]
  public RunOutcome Outcome { get; set; }

  /// <summary>
  /// Gets or Sets ReasonCode
  /// </summary>
  [DataMember(Name = "reasonCode", EmitDefaultValue = false)]
  public RunReasonCode ReasonCode { get; set; }

  /// <summary>
  /// Gets or Sets Type
  /// </summary>
  [DataMember(Name = "type", IsRequired = true, EmitDefaultValue = false)]
  public RunType Type { get; set; }
  /// <summary>
  /// Initializes a new instance of the Run class.
  /// </summary>
  [JsonConstructor]
  public Run() { }
  /// <summary>
  /// Initializes a new instance of the Run class.
  /// </summary>
  /// <param name="runID">The run UUID. (required).</param>
  /// <param name="appID">appID (required).</param>
  /// <param name="taskID">The task UUID. (required).</param>
  /// <param name="status">status (required).</param>
  /// <param name="type">type (required).</param>
  /// <param name="createdAt">Date of creation (RFC3339 format). (required).</param>
  public Run(string runID, string appID, string taskID, RunStatus status, RunType type, string createdAt)
  {
    RunID = runID ?? throw new ArgumentNullException(nameof(runID));
    AppID = appID ?? throw new ArgumentNullException(nameof(appID));
    TaskID = taskID ?? throw new ArgumentNullException(nameof(taskID));
    Status = status;
    Type = type;
    CreatedAt = createdAt ?? throw new ArgumentNullException(nameof(createdAt));
  }

  /// <summary>
  /// The run UUID.
  /// </summary>
  /// <value>The run UUID.</value>
  [DataMember(Name = "runID", IsRequired = true, EmitDefaultValue = false)]
  public string RunID { get; set; }

  /// <summary>
  /// Gets or Sets AppID
  /// </summary>
  [DataMember(Name = "appID", IsRequired = true, EmitDefaultValue = false)]
  public string AppID { get; set; }

  /// <summary>
  /// The task UUID.
  /// </summary>
  /// <value>The task UUID.</value>
  [DataMember(Name = "taskID", IsRequired = true, EmitDefaultValue = false)]
  public string TaskID { get; set; }

  /// <summary>
  /// Gets or Sets Progress
  /// </summary>
  [DataMember(Name = "progress", EmitDefaultValue = false)]
  public RunProgress Progress { get; set; }

  /// <summary>
  /// A percentage representing the accepted failure threshold to determine if a `run` succeeded or not.
  /// </summary>
  /// <value>A percentage representing the accepted failure threshold to determine if a `run` succeeded or not.</value>
  [DataMember(Name = "failureThreshold", EmitDefaultValue = false)]
  public int? FailureThreshold { get; set; }

  /// <summary>
  /// Explains the result of outcome.
  /// </summary>
  /// <value>Explains the result of outcome.</value>
  [DataMember(Name = "reason", EmitDefaultValue = false)]
  public string Reason { get; set; }

  /// <summary>
  /// Date of creation (RFC3339 format).
  /// </summary>
  /// <value>Date of creation (RFC3339 format).</value>
  [DataMember(Name = "createdAt", IsRequired = true, EmitDefaultValue = false)]
  public string CreatedAt { get; set; }

  /// <summary>
  /// Date of start (RFC3339 format).
  /// </summary>
  /// <value>Date of start (RFC3339 format).</value>
  [DataMember(Name = "startedAt", EmitDefaultValue = false)]
  public string StartedAt { get; set; }

  /// <summary>
  /// Date of finish (RFC3339 format).
  /// </summary>
  /// <value>Date of finish (RFC3339 format).</value>
  [DataMember(Name = "finishedAt", EmitDefaultValue = false)]
  public string FinishedAt { get; set; }

  /// <summary>
  /// Returns the string presentation of the object
  /// </summary>
  /// <returns>String presentation of the object</returns>
  public override string ToString()
  {
    StringBuilder sb = new StringBuilder();
    sb.Append("class Run {\n");
    sb.Append("  RunID: ").Append(RunID).Append("\n");
    sb.Append("  AppID: ").Append(AppID).Append("\n");
    sb.Append("  TaskID: ").Append(TaskID).Append("\n");
    sb.Append("  Status: ").Append(Status).Append("\n");
    sb.Append("  Progress: ").Append(Progress).Append("\n");
    sb.Append("  Outcome: ").Append(Outcome).Append("\n");
    sb.Append("  FailureThreshold: ").Append(FailureThreshold).Append("\n");
    sb.Append("  Reason: ").Append(Reason).Append("\n");
    sb.Append("  ReasonCode: ").Append(ReasonCode).Append("\n");
    sb.Append("  Type: ").Append(Type).Append("\n");
    sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
    sb.Append("  StartedAt: ").Append(StartedAt).Append("\n");
    sb.Append("  FinishedAt: ").Append(FinishedAt).Append("\n");
    sb.Append("}\n");
    return sb.ToString();
  }

  /// <summary>
  /// Returns the JSON string presentation of the object
  /// </summary>
  /// <returns>JSON string presentation of the object</returns>
  public virtual string ToJson()
  {
    return JsonConvert.SerializeObject(this, Formatting.Indented);
  }

}

