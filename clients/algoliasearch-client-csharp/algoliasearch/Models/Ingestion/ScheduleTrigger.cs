//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using Algolia.Search.Models;
using Algolia.Search.Models.Common;
using Algolia.Search.Serializer;

namespace Algolia.Search.Models.Ingestion;

/// <summary>
/// The trigger information for a task of type 'schedule'.
/// </summary>
[DataContract(Name = "ScheduleTrigger")]
[JsonObject(MemberSerialization.OptOut)]
public partial class ScheduleTrigger
{

  /// <summary>
  /// Gets or Sets Type
  /// </summary>
  [DataMember(Name = "type", IsRequired = true, EmitDefaultValue = false)]
  public ScheduleTriggerType Type { get; set; }
  /// <summary>
  /// Initializes a new instance of the ScheduleTrigger class.
  /// </summary>
  [JsonConstructor]
  public ScheduleTrigger() { }
  /// <summary>
  /// Initializes a new instance of the ScheduleTrigger class.
  /// </summary>
  /// <param name="type">type (required).</param>
  /// <param name="cron">A cron expression that represent at which regularity the task should run. (required).</param>
  /// <param name="nextRun">The next scheduled run of the task (RFC3339 format). (required).</param>
  public ScheduleTrigger(ScheduleTriggerType type, string cron, string nextRun)
  {
    Type = type;
    Cron = cron ?? throw new ArgumentNullException(nameof(cron));
    NextRun = nextRun ?? throw new ArgumentNullException(nameof(nextRun));
  }

  /// <summary>
  /// A cron expression that represent at which regularity the task should run.
  /// </summary>
  /// <value>A cron expression that represent at which regularity the task should run.</value>
  [DataMember(Name = "cron", IsRequired = true, EmitDefaultValue = false)]
  public string Cron { get; set; }

  /// <summary>
  /// The last time the scheduled task ran (RFC3339 format).
  /// </summary>
  /// <value>The last time the scheduled task ran (RFC3339 format).</value>
  [DataMember(Name = "lastRun", EmitDefaultValue = false)]
  public string LastRun { get; set; }

  /// <summary>
  /// The next scheduled run of the task (RFC3339 format).
  /// </summary>
  /// <value>The next scheduled run of the task (RFC3339 format).</value>
  [DataMember(Name = "nextRun", IsRequired = true, EmitDefaultValue = false)]
  public string NextRun { get; set; }

  /// <summary>
  /// Returns the string presentation of the object
  /// </summary>
  /// <returns>String presentation of the object</returns>
  public override string ToString()
  {
    StringBuilder sb = new StringBuilder();
    sb.Append("class ScheduleTrigger {\n");
    sb.Append("  Type: ").Append(Type).Append("\n");
    sb.Append("  Cron: ").Append(Cron).Append("\n");
    sb.Append("  LastRun: ").Append(LastRun).Append("\n");
    sb.Append("  NextRun: ").Append(NextRun).Append("\n");
    sb.Append("}\n");
    return sb.ToString();
  }

  /// <summary>
  /// Returns the JSON string presentation of the object
  /// </summary>
  /// <returns>JSON string presentation of the object</returns>
  public virtual string ToJson()
  {
    return JsonConvert.SerializeObject(this, Formatting.Indented);
  }

}

