//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using Algolia.Search.Models;
using Algolia.Search.Models.Common;
using Algolia.Search.Serializer;

namespace Algolia.Search.Models.Ingestion;

/// <summary>
/// DestinationIndexName
/// </summary>
[DataContract(Name = "DestinationIndexName")]
[JsonObject(MemberSerialization.OptOut)]
public partial class DestinationIndexName
{

  /// <summary>
  /// Gets or Sets RecordType
  /// </summary>
  [DataMember(Name = "recordType")]
  public RecordType? RecordType { get; set; }
  /// <summary>
  /// Initializes a new instance of the DestinationIndexName class.
  /// </summary>
  [JsonConstructor]
  public DestinationIndexName() { }
  /// <summary>
  /// Initializes a new instance of the DestinationIndexName class.
  /// </summary>
  /// <param name="indexName">The index name to store data in. (required).</param>
  public DestinationIndexName(string indexName)
  {
    IndexName = indexName ?? throw new ArgumentNullException(nameof(indexName));
  }

  /// <summary>
  /// The index name to store data in.
  /// </summary>
  /// <value>The index name to store data in.</value>
  [DataMember(Name = "indexName")]
  public string IndexName { get; set; }

  /// <summary>
  /// Determines the attributes to exclude from an Algolia record. To remove nested element, you can separate the path to the element with dots (`.`):   - \"foo.bar\": will remove `bar` from `foo`. To remove elements from an array, you can use the following:   - \"foo.[0].bar\": will only remove `bar` from the first element of `foo`.   - \"foo.[*].bar\": will remove `bar` from every elements of `foo`. 
  /// </summary>
  /// <value>Determines the attributes to exclude from an Algolia record. To remove nested element, you can separate the path to the element with dots (`.`):   - \"foo.bar\": will remove `bar` from `foo`. To remove elements from an array, you can use the following:   - \"foo.[0].bar\": will only remove `bar` from the first element of `foo`.   - \"foo.[*].bar\": will remove `bar` from every elements of `foo`. </value>
  [DataMember(Name = "attributesToExclude")]
  public List<string> AttributesToExclude { get; set; }

  /// <summary>
  /// Returns the string presentation of the object
  /// </summary>
  /// <returns>String presentation of the object</returns>
  public override string ToString()
  {
    StringBuilder sb = new StringBuilder();
    sb.Append("class DestinationIndexName {\n");
    sb.Append("  IndexName: ").Append(IndexName).Append("\n");
    sb.Append("  RecordType: ").Append(RecordType).Append("\n");
    sb.Append("  AttributesToExclude: ").Append(AttributesToExclude).Append("\n");
    sb.Append("}\n");
    return sb.ToString();
  }

  /// <summary>
  /// Returns the JSON string presentation of the object
  /// </summary>
  /// <returns>JSON string presentation of the object</returns>
  public virtual string ToJson()
  {
    return JsonConvert.SerializeObject(this, Formatting.Indented);
  }

}

