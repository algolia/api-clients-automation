//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using Algolia.Search.Models;
using Algolia.Search.Models.Common;
using Algolia.Search.Serializer;

namespace Algolia.Search.Models.Recommend;

/// <summary>
/// BaseTrendingFacetsQuery
/// </summary>
[DataContract(Name = "baseTrendingFacetsQuery")]
[JsonObject(MemberSerialization.OptOut)]
public partial class BaseTrendingFacetsQuery
{

  /// <summary>
  /// Gets or Sets Model
  /// </summary>
  [DataMember(Name = "model")]
  public TrendingFacetsModel? Model { get; set; }
  /// <summary>
  /// Initializes a new instance of the BaseTrendingFacetsQuery class.
  /// </summary>
  [JsonConstructor]
  public BaseTrendingFacetsQuery() { }
  /// <summary>
  /// Initializes a new instance of the BaseTrendingFacetsQuery class.
  /// </summary>
  /// <param name="facetName">Facet name for trending models. (required).</param>
  public BaseTrendingFacetsQuery(string facetName)
  {
    FacetName = facetName ?? throw new ArgumentNullException(nameof(facetName));
  }

  /// <summary>
  /// Facet name for trending models.
  /// </summary>
  /// <value>Facet name for trending models.</value>
  [DataMember(Name = "facetName")]
  public string FacetName { get; set; }

  /// <summary>
  /// Returns the string presentation of the object
  /// </summary>
  /// <returns>String presentation of the object</returns>
  public override string ToString()
  {
    StringBuilder sb = new StringBuilder();
    sb.Append("class BaseTrendingFacetsQuery {\n");
    sb.Append("  FacetName: ").Append(FacetName).Append("\n");
    sb.Append("  Model: ").Append(Model).Append("\n");
    sb.Append("}\n");
    return sb.ToString();
  }

  /// <summary>
  /// Returns the JSON string presentation of the object
  /// </summary>
  /// <returns>JSON string presentation of the object</returns>
  public virtual string ToJson()
  {
    return JsonConvert.SerializeObject(this, Formatting.Indented);
  }

}

