//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using Algolia.Search.Models;
using Algolia.Search.Models.Common;
using Algolia.Search.Serializer;

namespace Algolia.Search.Models.Search;

/// <summary>
/// LogQuery
/// </summary>
[DataContract(Name = "logQuery")]
public partial class LogQuery
{
  /// <summary>
  /// Initializes a new instance of the LogQuery class.
  /// </summary>
  public LogQuery()
  {
  }

  /// <summary>
  /// Index targeted by the query.
  /// </summary>
  /// <value>Index targeted by the query.</value>
  [DataMember(Name = "index_name")]
  public string IndexName { get; set; }

  /// <summary>
  /// User identifier.
  /// </summary>
  /// <value>User identifier.</value>
  [DataMember(Name = "user_token")]
  public string UserToken { get; set; }

  /// <summary>
  /// Unique query identifier.
  /// </summary>
  /// <value>Unique query identifier.</value>
  [DataMember(Name = "query_id")]
  public string QueryId { get; set; }

  /// <summary>
  /// Returns the string presentation of the object
  /// </summary>
  /// <returns>String presentation of the object</returns>
  public override string ToString()
  {
    StringBuilder sb = new StringBuilder();
    sb.Append("class LogQuery {\n");
    sb.Append("  IndexName: ").Append(IndexName).Append("\n");
    sb.Append("  UserToken: ").Append(UserToken).Append("\n");
    sb.Append("  QueryId: ").Append(QueryId).Append("\n");
    sb.Append("}\n");
    return sb.ToString();
  }

  /// <summary>
  /// Returns the JSON string presentation of the object
  /// </summary>
  /// <returns>JSON string presentation of the object</returns>
  public virtual string ToJson()
  {
    return JsonConvert.SerializeObject(this, Formatting.Indented);
  }

}

