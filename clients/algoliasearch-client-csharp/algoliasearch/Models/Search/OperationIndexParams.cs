//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using Algolia.Search.Models;
using Algolia.Search.Models.Common;
using Algolia.Search.Serializer;

namespace Algolia.Search.Models.Search;

/// <summary>
/// OperationIndexParams
/// </summary>
[DataContract(Name = "operationIndexParams")]
public partial class OperationIndexParams
{

  /// <summary>
  /// Gets or Sets Operation
  /// </summary>
  [DataMember(Name = "operation")]
  public OperationType Operation { get; set; }
  /// <summary>
  /// Initializes a new instance of the OperationIndexParams class.
  /// </summary>
  [JsonConstructor]
  public OperationIndexParams() { }
  /// <summary>
  /// Initializes a new instance of the OperationIndexParams class.
  /// </summary>
  /// <param name="operation">operation (required).</param>
  /// <param name="destination">Algolia index name. (required).</param>
  public OperationIndexParams(OperationType operation, string destination)
  {
    Operation = operation;
    Destination = destination ?? throw new ArgumentNullException(nameof(destination));
  }

  /// <summary>
  /// Algolia index name.
  /// </summary>
  /// <value>Algolia index name.</value>
  [DataMember(Name = "destination")]
  public string Destination { get; set; }

  /// <summary>
  /// **This only applies to the _copy_ operation.**  If you omit `scope`, the copy command copies all records, settings, synonyms, and rules.  If you specify `scope`, only the specified scopes are copied.
  /// </summary>
  /// <value>**This only applies to the _copy_ operation.**  If you omit `scope`, the copy command copies all records, settings, synonyms, and rules.  If you specify `scope`, only the specified scopes are copied.</value>
  [DataMember(Name = "scope")]
  public List<ScopeType> Scope { get; set; }

  /// <summary>
  /// Returns the string presentation of the object
  /// </summary>
  /// <returns>String presentation of the object</returns>
  public override string ToString()
  {
    StringBuilder sb = new StringBuilder();
    sb.Append("class OperationIndexParams {\n");
    sb.Append("  Operation: ").Append(Operation).Append("\n");
    sb.Append("  Destination: ").Append(Destination).Append("\n");
    sb.Append("  Scope: ").Append(Scope).Append("\n");
    sb.Append("}\n");
    return sb.ToString();
  }

  /// <summary>
  /// Returns the JSON string presentation of the object
  /// </summary>
  /// <returns>JSON string presentation of the object</returns>
  public virtual string ToJson()
  {
    return JsonConvert.SerializeObject(this, Formatting.Indented);
  }

}

