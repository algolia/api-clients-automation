//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using Algolia.Search.Models;
using Algolia.Search.Models.Common;
using Algolia.Search.Serializer;

namespace Algolia.Search.Models.Search;

/// <summary>
/// Show highlighted section and words matched on a query.
/// </summary>
[DataContract(Name = "highlightResultOption")]
public partial class HighlightResultOption
{

  /// <summary>
  /// Gets or Sets MatchLevel
  /// </summary>
  [DataMember(Name = "matchLevel")]
  public MatchLevel MatchLevel { get; set; }
  /// <summary>
  /// Initializes a new instance of the HighlightResultOption class.
  /// </summary>
  [JsonConstructor]
  public HighlightResultOption() { }
  /// <summary>
  /// Initializes a new instance of the HighlightResultOption class.
  /// </summary>
  /// <param name="value">Markup text with &#x60;facetQuery&#x60; matches highlighted. (required).</param>
  /// <param name="matchLevel">matchLevel (required).</param>
  /// <param name="matchedWords">List of words from the query that matched the object. (required).</param>
  public HighlightResultOption(string value, MatchLevel matchLevel, List<string> matchedWords)
  {
    Value = value ?? throw new ArgumentNullException(nameof(value));
    MatchLevel = matchLevel;
    MatchedWords = matchedWords ?? throw new ArgumentNullException(nameof(matchedWords));
  }

  /// <summary>
  /// Markup text with `facetQuery` matches highlighted.
  /// </summary>
  /// <value>Markup text with `facetQuery` matches highlighted.</value>
  [DataMember(Name = "value")]
  public string Value { get; set; }

  /// <summary>
  /// List of words from the query that matched the object.
  /// </summary>
  /// <value>List of words from the query that matched the object.</value>
  [DataMember(Name = "matchedWords")]
  public List<string> MatchedWords { get; set; }

  /// <summary>
  /// Whether the entire attribute value is highlighted.
  /// </summary>
  /// <value>Whether the entire attribute value is highlighted.</value>
  [DataMember(Name = "fullyHighlighted")]
  public bool? FullyHighlighted { get; set; }

  /// <summary>
  /// Returns the string presentation of the object
  /// </summary>
  /// <returns>String presentation of the object</returns>
  public override string ToString()
  {
    StringBuilder sb = new StringBuilder();
    sb.Append("class HighlightResultOption {\n");
    sb.Append("  Value: ").Append(Value).Append("\n");
    sb.Append("  MatchLevel: ").Append(MatchLevel).Append("\n");
    sb.Append("  MatchedWords: ").Append(MatchedWords).Append("\n");
    sb.Append("  FullyHighlighted: ").Append(FullyHighlighted).Append("\n");
    sb.Append("}\n");
    return sb.ToString();
  }

  /// <summary>
  /// Returns the JSON string presentation of the object
  /// </summary>
  /// <returns>JSON string presentation of the object</returns>
  public virtual string ToJson()
  {
    return JsonConvert.SerializeObject(this, Formatting.Indented);
  }

}

