//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using Algolia.Search.Models;
using Algolia.Search.Models.Common;
using Algolia.Search.Serializer;

namespace Algolia.Search.Models.Search;

/// <summary>
/// BatchResponse
/// </summary>
[DataContract(Name = "batchResponse")]
public partial class BatchResponse
{
  /// <summary>
  /// Initializes a new instance of the BatchResponse class.
  /// </summary>
  [JsonConstructor]
  public BatchResponse() { }
  /// <summary>
  /// Initializes a new instance of the BatchResponse class.
  /// </summary>
  /// <param name="taskID">Unique identifier of a task. A successful API response means that a task was added to a queue. It might not run immediately. You can check the task&#39;s progress with the &#x60;task&#x60; operation and this &#x60;taskID&#x60;.  (required).</param>
  /// <param name="objectIDs">Unique object (record) identifiers. (required).</param>
  public BatchResponse(long taskID, List<string> objectIDs)
  {
    TaskID = taskID;
    ObjectIDs = objectIDs ?? throw new ArgumentNullException(nameof(objectIDs));
  }

  /// <summary>
  /// Unique identifier of a task. A successful API response means that a task was added to a queue. It might not run immediately. You can check the task's progress with the `task` operation and this `taskID`. 
  /// </summary>
  /// <value>Unique identifier of a task. A successful API response means that a task was added to a queue. It might not run immediately. You can check the task's progress with the `task` operation and this `taskID`. </value>
  [DataMember(Name = "taskID")]
  public long TaskID { get; set; }

  /// <summary>
  /// Unique object (record) identifiers.
  /// </summary>
  /// <value>Unique object (record) identifiers.</value>
  [DataMember(Name = "objectIDs")]
  public List<string> ObjectIDs { get; set; }

  /// <summary>
  /// Returns the string presentation of the object
  /// </summary>
  /// <returns>String presentation of the object</returns>
  public override string ToString()
  {
    StringBuilder sb = new StringBuilder();
    sb.Append("class BatchResponse {\n");
    sb.Append("  TaskID: ").Append(TaskID).Append("\n");
    sb.Append("  ObjectIDs: ").Append(ObjectIDs).Append("\n");
    sb.Append("}\n");
    return sb.ToString();
  }

  /// <summary>
  /// Returns the JSON string presentation of the object
  /// </summary>
  /// <returns>JSON string presentation of the object</returns>
  public virtual string ToJson()
  {
    return JsonConvert.SerializeObject(this, Formatting.Indented);
  }

}

