//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//
using System;
using System.Text;
using System.Linq;
using System.Text.Json.Serialization;
using System.Collections.Generic;
using Algolia.Search.Serializer;
using System.Text.Json;

namespace Algolia.Search.Models.Usage;

/// <summary>
/// ErrorItem
/// </summary>
public partial class ErrorItem
{
  /// <summary>
  /// Initializes a new instance of the ErrorItem class.
  /// </summary>
  [JsonConstructor]
  public ErrorItem() { }
  /// <summary>
  /// Initializes a new instance of the ErrorItem class.
  /// </summary>
  /// <param name="message">message (required).</param>
  public ErrorItem(string message)
  {
    Message = message ?? throw new ArgumentNullException(nameof(message));
  }

  /// <summary>
  /// Gets or Sets Code
  /// </summary>
  [JsonPropertyName("code")]
  public string Code { get; set; }

  /// <summary>
  /// Gets or Sets Message
  /// </summary>
  [JsonPropertyName("message")]
  public string Message { get; set; }

  /// <summary>
  /// Gets or Sets Line
  /// </summary>
  [JsonPropertyName("line")]
  public int? Line { get; set; }

  /// <summary>
  /// Gets or Sets Position
  /// </summary>
  [JsonPropertyName("position")]
  public int? Position { get; set; }

  /// <summary>
  /// Returns the string presentation of the object
  /// </summary>
  /// <returns>String presentation of the object</returns>
  public override string ToString()
  {
    StringBuilder sb = new StringBuilder();
    sb.Append("class ErrorItem {\n");
    sb.Append("  Code: ").Append(Code).Append("\n");
    sb.Append("  Message: ").Append(Message).Append("\n");
    sb.Append("  Line: ").Append(Line).Append("\n");
    sb.Append("  Position: ").Append(Position).Append("\n");
    sb.Append("}\n");
    return sb.ToString();
  }

  /// <summary>
  /// Returns the JSON string presentation of the object
  /// </summary>
  /// <returns>JSON string presentation of the object</returns>
  public virtual string ToJson()
  {
    return JsonSerializer.Serialize(this, JsonConfig.Options);
  }

  /// <summary>
  /// Returns true if objects are equal
  /// </summary>
  /// <param name="obj">Object to be compared</param>
  /// <returns>Boolean</returns>
  public override bool Equals(object obj)
  {
    if (obj is not ErrorItem input)
    {
      return false;
    }

    return
        (Code == input.Code || (Code != null && Code.Equals(input.Code))) &&
        (Message == input.Message || (Message != null && Message.Equals(input.Message))) &&
        (Line == input.Line || Line.Equals(input.Line)) &&
        (Position == input.Position || Position.Equals(input.Position));
  }

  /// <summary>
  /// Gets the hash code
  /// </summary>
  /// <returns>Hash code</returns>
  public override int GetHashCode()
  {
    unchecked // Overflow is fine, just wrap
    {
      int hashCode = 41;
      if (Code != null)
      {
        hashCode = (hashCode * 59) + Code.GetHashCode();
      }
      if (Message != null)
      {
        hashCode = (hashCode * 59) + Message.GetHashCode();
      }
      hashCode = (hashCode * 59) + Line.GetHashCode();
      hashCode = (hashCode * 59) + Position.GetHashCode();
      return hashCode;
    }
  }

}

