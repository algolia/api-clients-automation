//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using Algolia.Search.Models;
using Algolia.Search.Models.Common;
using Algolia.Search.Serializer;

namespace Algolia.Search.Models.Insights;

/// <summary>
/// The response of the Insights API.
/// </summary>
[DataContract(Name = "EventsResponse")]
[JsonObject(MemberSerialization.OptOut)]
public partial class EventsResponse
{
  /// <summary>
  /// Initializes a new instance of the EventsResponse class.
  /// </summary>
  public EventsResponse()
  {
  }

  /// <summary>
  /// Details about the response, such as error messages.
  /// </summary>
  /// <value>Details about the response, such as error messages.</value>
  [DataMember(Name = "message")]
  public string Message { get; set; }

  /// <summary>
  /// The HTTP status code of the response.
  /// </summary>
  /// <value>The HTTP status code of the response.</value>
  [DataMember(Name = "status")]
  public int? Status { get; set; }

  /// <summary>
  /// Returns the string presentation of the object
  /// </summary>
  /// <returns>String presentation of the object</returns>
  public override string ToString()
  {
    StringBuilder sb = new StringBuilder();
    sb.Append("class EventsResponse {\n");
    sb.Append("  Message: ").Append(Message).Append("\n");
    sb.Append("  Status: ").Append(Status).Append("\n");
    sb.Append("}\n");
    return sb.ToString();
  }

  /// <summary>
  /// Returns the JSON string presentation of the object
  /// </summary>
  /// <returns>JSON string presentation of the object</returns>
  public virtual string ToJson()
  {
    return JsonConvert.SerializeObject(this, Formatting.Indented);
  }

}

