/*
 * Search API
 *
 * Use the Search REST API  to manage your data (indices and records), implement search, and improve relevance (with Rules, synonyms, and language dictionaries).  Although Algolia provides a REST API, you should use the official open source API [clients, libraries, and tools](https://www.algolia.com/doc/guides/getting-started/how-algolia-works/in-depth/ecosystem/) instead. There's no [SLA](https://www.algolia.com/policies/sla/) if you use the REST API directly.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Algolia.search.Model;
using Algolia.search.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Algolia.search.Test.Model
{
  /// <summary>
  ///  Class for testing ApiKey
  /// </summary>
  /// <remarks>
  /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
  /// Please update the test case below to test the model.
  /// </remarks>
  public class ApiKeyTests : IDisposable
  {
    // TODO uncomment below to declare an instance variable for ApiKey
    //private ApiKey instance;

    public ApiKeyTests()
    {
      // TODO uncomment below to create an instance of ApiKey
      //instance = new ApiKey();
    }

    public void Dispose()
    {
      // Cleanup when everything is done.
    }

    /// <summary>
    /// Test an instance of ApiKey
    /// </summary>
    [Fact]
    public void ApiKeyInstanceTest()
    {
      // TODO uncomment below to test "IsType" ApiKey
      //Assert.IsType<ApiKey>(instance);
    }

    /// <summary>
    /// Test the property 'Acl'
    /// </summary>
    [Fact]
    public void AclTest()
    {
      // TODO unit test for the property 'Acl'
    }

    /// <summary>
    /// Test the property 'Description'
    /// </summary>
    [Fact]
    public void DescriptionTest()
    {
      // TODO unit test for the property 'Description'
    }

    /// <summary>
    /// Test the property 'Indexes'
    /// </summary>
    [Fact]
    public void IndexesTest()
    {
      // TODO unit test for the property 'Indexes'
    }

    /// <summary>
    /// Test the property 'MaxHitsPerQuery'
    /// </summary>
    [Fact]
    public void MaxHitsPerQueryTest()
    {
      // TODO unit test for the property 'MaxHitsPerQuery'
    }

    /// <summary>
    /// Test the property 'MaxQueriesPerIPPerHour'
    /// </summary>
    [Fact]
    public void MaxQueriesPerIPPerHourTest()
    {
      // TODO unit test for the property 'MaxQueriesPerIPPerHour'
    }

    /// <summary>
    /// Test the property 'QueryParameters'
    /// </summary>
    [Fact]
    public void QueryParametersTest()
    {
      // TODO unit test for the property 'QueryParameters'
    }

    /// <summary>
    /// Test the property 'Referers'
    /// </summary>
    [Fact]
    public void ReferersTest()
    {
      // TODO unit test for the property 'Referers'
    }

    /// <summary>
    /// Test the property 'Validity'
    /// </summary>
    [Fact]
    public void ValidityTest()
    {
      // TODO unit test for the property 'Validity'
    }
  }
}
