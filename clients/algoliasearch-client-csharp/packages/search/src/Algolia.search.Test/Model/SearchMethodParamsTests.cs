/*
 * Search API
 *
 * Use the Search REST API  to manage your data (indices and records), implement search, and improve relevance (with Rules, synonyms, and language dictionaries).  Although Algolia provides a REST API, you should use the official open source API [clients, libraries, and tools](https://www.algolia.com/doc/guides/getting-started/how-algolia-works/in-depth/ecosystem/) instead. There's no [SLA](https://www.algolia.com/policies/sla/) if you use the REST API directly.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Algolia.search.Model;
using Algolia.search.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Algolia.search.Test.Model
{
  /// <summary>
  ///  Class for testing SearchMethodParams
  /// </summary>
  /// <remarks>
  /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
  /// Please update the test case below to test the model.
  /// </remarks>
  public class SearchMethodParamsTests : IDisposable
  {
    // TODO uncomment below to declare an instance variable for SearchMethodParams
    //private SearchMethodParams instance;

    public SearchMethodParamsTests()
    {
      // TODO uncomment below to create an instance of SearchMethodParams
      //instance = new SearchMethodParams();
    }

    public void Dispose()
    {
      // Cleanup when everything is done.
    }

    /// <summary>
    /// Test an instance of SearchMethodParams
    /// </summary>
    [Fact]
    public void SearchMethodParamsInstanceTest()
    {
      // TODO uncomment below to test "IsType" SearchMethodParams
      //Assert.IsType<SearchMethodParams>(instance);
    }

    /// <summary>
    /// Test the property 'Requests'
    /// </summary>
    [Fact]
    public void RequestsTest()
    {
      // TODO unit test for the property 'Requests'
    }

    /// <summary>
    /// Test the property 'Strategy'
    /// </summary>
    [Fact]
    public void StrategyTest()
    {
      // TODO unit test for the property 'Strategy'
    }
  }
}
