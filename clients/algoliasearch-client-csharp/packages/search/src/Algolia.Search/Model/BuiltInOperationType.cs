/*
 * Search API
 *
 * Use the Search REST API  to manage your data (indices and records), implement search, and improve relevance (with Rules, synonyms, and language dictionaries).  Although Algolia provides a REST API, you should use the official open source API [clients, libraries, and tools](https://www.algolia.com/doc/guides/getting-started/how-algolia-works/in-depth/ecosystem/) instead. There's no [SLA](https://www.algolia.com/policies/sla/) if you use the REST API directly.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Algolia.Search.Client.FileParameter;
using OpenAPIDateConverter = Algolia.Search.Client.OpenAPIDateConverter;

namespace Algolia.Search.Model
{
  /// <summary>
  /// Operation to apply to the attribute.
  /// </summary>
  /// <value>Operation to apply to the attribute.</value>
  [JsonConverter(typeof(StringEnumConverter))]
  public enum BuiltInOperationType
  {
    /// <summary>
    /// Enum Increment for value: Increment
    /// </summary>
    [EnumMember(Value = "Increment")]
    Increment = 1,

    /// <summary>
    /// Enum Decrement for value: Decrement
    /// </summary>
    [EnumMember(Value = "Decrement")]
    Decrement = 2,

    /// <summary>
    /// Enum Add for value: Add
    /// </summary>
    [EnumMember(Value = "Add")]
    Add = 3,

    /// <summary>
    /// Enum Remove for value: Remove
    /// </summary>
    [EnumMember(Value = "Remove")]
    Remove = 4,

    /// <summary>
    /// Enum AddUnique for value: AddUnique
    /// </summary>
    [EnumMember(Value = "AddUnique")]
    AddUnique = 5,

    /// <summary>
    /// Enum IncrementFrom for value: IncrementFrom
    /// </summary>
    [EnumMember(Value = "IncrementFrom")]
    IncrementFrom = 6,

    /// <summary>
    /// Enum IncrementSet for value: IncrementSet
    /// </summary>
    [EnumMember(Value = "IncrementSet")]
    IncrementSet = 7
  }

}
