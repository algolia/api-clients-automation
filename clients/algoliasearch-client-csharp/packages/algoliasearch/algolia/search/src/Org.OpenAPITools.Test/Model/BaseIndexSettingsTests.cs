/*
 * Search API
 *
 * Use the Search REST API  to manage your data (indices and records), implement search, and improve relevance (with Rules, synonyms, and language dictionaries).  Although Algolia provides a REST API, you should use the official open source API [clients, libraries, and tools](https://www.algolia.com/doc/guides/getting-started/how-algolia-works/in-depth/ecosystem/) instead. There's no [SLA](https://www.algolia.com/policies/sla/) if you use the REST API directly.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing BaseIndexSettings
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class BaseIndexSettingsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for BaseIndexSettings
        //private BaseIndexSettings instance;

        public BaseIndexSettingsTests()
        {
            // TODO uncomment below to create an instance of BaseIndexSettings
            //instance = new BaseIndexSettings();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BaseIndexSettings
        /// </summary>
        [Fact]
        public void BaseIndexSettingsInstanceTest()
        {
            // TODO uncomment below to test "IsType" BaseIndexSettings
            //Assert.IsType<BaseIndexSettings>(instance);
        }

        /// <summary>
        /// Test the property 'Replicas'
        /// </summary>
        [Fact]
        public void ReplicasTest()
        {
            // TODO unit test for the property 'Replicas'
        }

        /// <summary>
        /// Test the property 'PaginationLimitedTo'
        /// </summary>
        [Fact]
        public void PaginationLimitedToTest()
        {
            // TODO unit test for the property 'PaginationLimitedTo'
        }

        /// <summary>
        /// Test the property 'UnretrievableAttributes'
        /// </summary>
        [Fact]
        public void UnretrievableAttributesTest()
        {
            // TODO unit test for the property 'UnretrievableAttributes'
        }

        /// <summary>
        /// Test the property 'DisableTypoToleranceOnWords'
        /// </summary>
        [Fact]
        public void DisableTypoToleranceOnWordsTest()
        {
            // TODO unit test for the property 'DisableTypoToleranceOnWords'
        }

        /// <summary>
        /// Test the property 'AttributesToTransliterate'
        /// </summary>
        [Fact]
        public void AttributesToTransliterateTest()
        {
            // TODO unit test for the property 'AttributesToTransliterate'
        }

        /// <summary>
        /// Test the property 'CamelCaseAttributes'
        /// </summary>
        [Fact]
        public void CamelCaseAttributesTest()
        {
            // TODO unit test for the property 'CamelCaseAttributes'
        }

        /// <summary>
        /// Test the property 'DecompoundedAttributes'
        /// </summary>
        [Fact]
        public void DecompoundedAttributesTest()
        {
            // TODO unit test for the property 'DecompoundedAttributes'
        }

        /// <summary>
        /// Test the property 'IndexLanguages'
        /// </summary>
        [Fact]
        public void IndexLanguagesTest()
        {
            // TODO unit test for the property 'IndexLanguages'
        }

        /// <summary>
        /// Test the property 'DisablePrefixOnAttributes'
        /// </summary>
        [Fact]
        public void DisablePrefixOnAttributesTest()
        {
            // TODO unit test for the property 'DisablePrefixOnAttributes'
        }

        /// <summary>
        /// Test the property 'AllowCompressionOfIntegerArray'
        /// </summary>
        [Fact]
        public void AllowCompressionOfIntegerArrayTest()
        {
            // TODO unit test for the property 'AllowCompressionOfIntegerArray'
        }

        /// <summary>
        /// Test the property 'NumericAttributesForFiltering'
        /// </summary>
        [Fact]
        public void NumericAttributesForFilteringTest()
        {
            // TODO unit test for the property 'NumericAttributesForFiltering'
        }

        /// <summary>
        /// Test the property 'SeparatorsToIndex'
        /// </summary>
        [Fact]
        public void SeparatorsToIndexTest()
        {
            // TODO unit test for the property 'SeparatorsToIndex'
        }

        /// <summary>
        /// Test the property 'SearchableAttributes'
        /// </summary>
        [Fact]
        public void SearchableAttributesTest()
        {
            // TODO unit test for the property 'SearchableAttributes'
        }

        /// <summary>
        /// Test the property 'UserData'
        /// </summary>
        [Fact]
        public void UserDataTest()
        {
            // TODO unit test for the property 'UserData'
        }

        /// <summary>
        /// Test the property 'CustomNormalization'
        /// </summary>
        [Fact]
        public void CustomNormalizationTest()
        {
            // TODO unit test for the property 'CustomNormalization'
        }

        /// <summary>
        /// Test the property 'AttributeForDistinct'
        /// </summary>
        [Fact]
        public void AttributeForDistinctTest()
        {
            // TODO unit test for the property 'AttributeForDistinct'
        }
    }
}
