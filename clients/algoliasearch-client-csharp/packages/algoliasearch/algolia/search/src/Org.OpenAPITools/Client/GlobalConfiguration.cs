/*
 * Search API
 *
 * Use the Search REST API  to manage your data (indices and records), implement search, and improve relevance (with Rules, synonyms, and language dictionaries).  Although Algolia provides a REST API, you should use the official open source API [clients, libraries, and tools](https://www.algolia.com/doc/guides/getting-started/how-algolia-works/in-depth/ecosystem/) instead. There's no [SLA](https://www.algolia.com/policies/sla/) if you use the REST API directly.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System.Collections.Generic;

namespace Org.OpenAPITools.Client
{
  /// <summary>
  /// <see cref="GlobalConfiguration"/> provides a compile-time extension point for globally configuring
  /// API Clients.
  /// </summary>
  /// <remarks>
  /// A customized implementation via partial class may reside in another file and may
  /// be excluded from automatic generation via a .openapi-generator-ignore file.
  /// </remarks>
  public partial class GlobalConfiguration : Configuration
  {
    #region Private Members

    private static readonly object GlobalConfigSync = new { };
    private static IReadableConfiguration _globalConfiguration;

    #endregion Private Members

    #region Constructors

    /// <inheritdoc />
    private GlobalConfiguration()
    {
    }

    /// <inheritdoc />
    public GlobalConfiguration(IDictionary<string, string> defaultHeader, IDictionary<string, string> apiKey, IDictionary<string, string> apiKeyPrefix, string basePath = "http://localhost:3000/api") : base(defaultHeader, apiKey, apiKeyPrefix, basePath)
    {
    }

    static GlobalConfiguration()
    {
      Instance = new GlobalConfiguration();
    }

    #endregion Constructors

    /// <summary>
    /// Gets or sets the default Configuration.
    /// </summary>
    /// <value>Configuration.</value>
    public static IReadableConfiguration Instance
    {
      get { return _globalConfiguration; }
      set
      {
        lock (GlobalConfigSync)
        {
          _globalConfiguration = value;
        }
      }
    }
  }
}
