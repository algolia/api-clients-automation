/*
 * Search API
 *
 * Use the Search REST API  to manage your data (indices and records), implement search, and improve relevance (with Rules, synonyms, and language dictionaries).  Although Algolia provides a REST API, you should use the official open source API [clients, libraries, and tools](https://www.algolia.com/doc/guides/getting-started/how-algolia-works/in-depth/ecosystem/) instead. There's no [SLA](https://www.algolia.com/policies/sla/) if you use the REST API directly.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.IO;
using System.Net;

namespace Org.OpenAPITools.Client
{
  /// <summary>
  /// A container for generalized request inputs. This type allows consumers to extend the request functionality
  /// by abstracting away from the default (built-in) request framework (e.g. RestSharp).
  /// </summary>
  public class RequestOptions
  {
    /// <summary>
    /// Parameters to be bound to path parts of the Request's URL
    /// </summary>
    public Dictionary<string, string> PathParameters { get; set; }

    /// <summary>
    /// Query parameters to be applied to the request.
    /// Keys may have 1 or more values associated.
    /// </summary>
    public Multimap<string, string> QueryParameters { get; set; }

    /// <summary>
    /// Header parameters to be applied to the request.
    /// Keys may have 1 or more values associated.
    /// </summary>
    public Multimap<string, string> HeaderParameters { get; set; }

    /// <summary>
    /// Form parameters to be sent along with the request.
    /// </summary>
    public Dictionary<string, string> FormParameters { get; set; }

    /// <summary>
    /// File parameters to be sent along with the request.
    /// </summary>
    public Multimap<string, FileParameter> FileParameters { get; set; }

    /// <summary>
    /// Cookies to be sent along with the request.
    /// </summary>
    public List<Cookie> Cookies { get; set; }

    /// <summary>
    /// Any data associated with a request body.
    /// </summary>
    public Object Data { get; set; }

    /// <summary>
    /// Constructs a new instance of <see cref="RequestOptions"/>
    /// </summary>
    public RequestOptions()
    {
      PathParameters = new Dictionary<string, string>();
      QueryParameters = new Multimap<string, string>();
      HeaderParameters = new Multimap<string, string>();
      FormParameters = new Dictionary<string, string>();
      FileParameters = new Multimap<string, FileParameter>();
      Cookies = new List<Cookie>();
    }
  }
}
