/*
Ingestion API

[Documentation](https://docs.google.com/document/d/13UnFi4Osfw4vOJr5iN4P4RJDZdslpFs4OgM4F1VBwQc/edit#heading=h.kp12qj1w1lig)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ingestion

import (
	"encoding/json"
)

// AuthenticationUpdate struct for AuthenticationUpdate
type AuthenticationUpdate struct {
	Type *AuthenticationType `json:"type,omitempty"`
	Name *string `json:"name,omitempty"`
	Platform *PlatformType `json:"platform,omitempty"`
	Input *AuthInput `json:"input,omitempty"`
}

// NewAuthenticationUpdate instantiates a new AuthenticationUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticationUpdate() *AuthenticationUpdate {
	this := AuthenticationUpdate{}
	return &this
}

// NewAuthenticationUpdateWithDefaults instantiates a new AuthenticationUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationUpdateWithDefaults() *AuthenticationUpdate {
	this := AuthenticationUpdate{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AuthenticationUpdate) GetType() AuthenticationType {
	if o == nil || o.Type == nil {
		var ret AuthenticationType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationUpdate) GetTypeOk() (*AuthenticationType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AuthenticationUpdate) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given AuthenticationType and assigns it to the Type field.
func (o *AuthenticationUpdate) SetType(v AuthenticationType) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AuthenticationUpdate) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationUpdate) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AuthenticationUpdate) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AuthenticationUpdate) SetName(v string) {
	o.Name = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *AuthenticationUpdate) GetPlatform() PlatformType {
	if o == nil || o.Platform == nil {
		var ret PlatformType
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationUpdate) GetPlatformOk() (*PlatformType, bool) {
	if o == nil || o.Platform == nil {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *AuthenticationUpdate) HasPlatform() bool {
	if o != nil && o.Platform != nil {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given PlatformType and assigns it to the Platform field.
func (o *AuthenticationUpdate) SetPlatform(v PlatformType) {
	o.Platform = &v
}

// GetInput returns the Input field value if set, zero value otherwise.
func (o *AuthenticationUpdate) GetInput() AuthInput {
	if o == nil || o.Input == nil {
		var ret AuthInput
		return ret
	}
	return *o.Input
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationUpdate) GetInputOk() (*AuthInput, bool) {
	if o == nil || o.Input == nil {
		return nil, false
	}
	return o.Input, true
}

// HasInput returns a boolean if a field has been set.
func (o *AuthenticationUpdate) HasInput() bool {
	if o != nil && o.Input != nil {
		return true
	}

	return false
}

// SetInput gets a reference to the given AuthInput and assigns it to the Input field.
func (o *AuthenticationUpdate) SetInput(v AuthInput) {
	o.Input = &v
}

func (o AuthenticationUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Platform != nil {
		toSerialize["platform"] = o.Platform
	}
	if o.Input != nil {
		toSerialize["input"] = o.Input
	}
	return json.Marshal(toSerialize)
}

type NullableAuthenticationUpdate struct {
	value *AuthenticationUpdate
	isSet bool
}

func (v NullableAuthenticationUpdate) Get() *AuthenticationUpdate {
	return v.value
}

func (v *NullableAuthenticationUpdate) Set(val *AuthenticationUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationUpdate(val *AuthenticationUpdate) *NullableAuthenticationUpdate {
	return &NullableAuthenticationUpdate{value: val, isSet: true}
}

func (v NullableAuthenticationUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


