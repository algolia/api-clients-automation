/*
Ingestion API

[Documentation](https://docs.google.com/document/d/13UnFi4Osfw4vOJr5iN4P4RJDZdslpFs4OgM4F1VBwQc/edit#heading=h.kp12qj1w1lig)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ingestion

import (
  "fmt"
	"net/http"
	"strings"
)

type Region string

const (
  US Region = "us"
)

// Configuration stores the configuration of the API client
type Configuration struct {
	Host             string            `json:"host,omitempty"`
	DefaultHeader    map[string]string `json:"defaultHeader,omitempty"`
	UserAgent        string            `json:"userAgent,omitempty"`
	Debug            bool              `json:"debug,omitempty"`
	HTTPClient       *http.Client
}

// NewConfiguration returns a new Configuration object
func NewConfiguration(region Region) *Configuration {
	cfg := &Configuration{
    Host: fmt.Sprintf("https://%s", strings.Replace("data.us.algolia.com", "{region}", string(region), -1)),
		DefaultHeader:    make(map[string]string),
		UserAgent:        "OpenAPI-Generator/4.0.0-alpha/go",
		Debug:            false,
	}
	return cfg
}

// AddDefaultHeader adds a new HTTP header to the default header in the request
func (c *Configuration) AddDefaultHeader(key string, value string) {
	c.DefaultHeader[key] = value
}
