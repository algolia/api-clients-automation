/*
Ingestion API

[Documentation](https://docs.google.com/document/d/13UnFi4Osfw4vOJr5iN4P4RJDZdslpFs4OgM4F1VBwQc/edit#heading=h.kp12qj1w1lig)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ingestion

import (
	"encoding/json"
)

// TaskCreate struct for TaskCreate
type TaskCreate struct {
	SourceID string `json:"sourceID"`
	DestinationID string `json:"destinationID"`
	Trigger Trigger `json:"trigger"`
	Action ActionType `json:"action"`
	Enabled *bool `json:"enabled,omitempty"`
}

// NewTaskCreate instantiates a new TaskCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskCreate(sourceID string, destinationID string, trigger Trigger, action ActionType) *TaskCreate {
	this := TaskCreate{}
	this.SourceID = sourceID
	this.DestinationID = destinationID
	this.Trigger = trigger
	this.Action = action
	return &this
}

// NewTaskCreateWithDefaults instantiates a new TaskCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskCreateWithDefaults() *TaskCreate {
	this := TaskCreate{}
	return &this
}

// GetSourceID returns the SourceID field value
func (o *TaskCreate) GetSourceID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceID
}

// GetSourceIDOk returns a tuple with the SourceID field value
// and a boolean to check if the value has been set.
func (o *TaskCreate) GetSourceIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceID, true
}

// SetSourceID sets field value
func (o *TaskCreate) SetSourceID(v string) {
	o.SourceID = v
}

// GetDestinationID returns the DestinationID field value
func (o *TaskCreate) GetDestinationID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationID
}

// GetDestinationIDOk returns a tuple with the DestinationID field value
// and a boolean to check if the value has been set.
func (o *TaskCreate) GetDestinationIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationID, true
}

// SetDestinationID sets field value
func (o *TaskCreate) SetDestinationID(v string) {
	o.DestinationID = v
}

// GetTrigger returns the Trigger field value
func (o *TaskCreate) GetTrigger() Trigger {
	if o == nil {
		var ret Trigger
		return ret
	}

	return o.Trigger
}

// GetTriggerOk returns a tuple with the Trigger field value
// and a boolean to check if the value has been set.
func (o *TaskCreate) GetTriggerOk() (*Trigger, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Trigger, true
}

// SetTrigger sets field value
func (o *TaskCreate) SetTrigger(v Trigger) {
	o.Trigger = v
}

// GetAction returns the Action field value
func (o *TaskCreate) GetAction() ActionType {
	if o == nil {
		var ret ActionType
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *TaskCreate) GetActionOk() (*ActionType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *TaskCreate) SetAction(v ActionType) {
	o.Action = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *TaskCreate) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskCreate) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *TaskCreate) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *TaskCreate) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o TaskCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["sourceID"] = o.SourceID
	}
	if true {
		toSerialize["destinationID"] = o.DestinationID
	}
	if true {
		toSerialize["trigger"] = o.Trigger
	}
	if true {
		toSerialize["action"] = o.Action
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableTaskCreate struct {
	value *TaskCreate
	isSet bool
}

func (v NullableTaskCreate) Get() *TaskCreate {
	return v.value
}

func (v *NullableTaskCreate) Set(val *TaskCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskCreate(val *TaskCreate) *NullableTaskCreate {
	return &NullableTaskCreate{value: val, isSet: true}
}

func (v NullableTaskCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


