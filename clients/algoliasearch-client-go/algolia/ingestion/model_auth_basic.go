/*
Ingestion API

[Documentation](https://docs.google.com/document/d/13UnFi4Osfw4vOJr5iN4P4RJDZdslpFs4OgM4F1VBwQc/edit#heading=h.kp12qj1w1lig)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ingestion

import (
	"encoding/json"
)

// AuthBasic struct for AuthBasic
type AuthBasic struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

// NewAuthBasic instantiates a new AuthBasic object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthBasic(username string, password string) *AuthBasic {
	this := AuthBasic{}
	this.Username = username
	this.Password = password
	return &this
}

// NewAuthBasicWithDefaults instantiates a new AuthBasic object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthBasicWithDefaults() *AuthBasic {
	this := AuthBasic{}
	return &this
}

// GetUsername returns the Username field value
func (o *AuthBasic) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *AuthBasic) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *AuthBasic) SetUsername(v string) {
	o.Username = v
}

// GetPassword returns the Password field value
func (o *AuthBasic) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *AuthBasic) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *AuthBasic) SetPassword(v string) {
	o.Password = v
}

func (o AuthBasic) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["username"] = o.Username
	}
	if true {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableAuthBasic struct {
	value *AuthBasic
	isSet bool
}

func (v NullableAuthBasic) Get() *AuthBasic {
	return v.value
}

func (v *NullableAuthBasic) Set(val *AuthBasic) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthBasic) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthBasic) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthBasic(val *AuthBasic) *NullableAuthBasic {
	return &NullableAuthBasic{value: val, isSet: true}
}

func (v NullableAuthBasic) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthBasic) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


