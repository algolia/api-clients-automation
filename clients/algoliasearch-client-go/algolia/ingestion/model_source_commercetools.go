/*
Ingestion API

[Documentation](https://docs.google.com/document/d/13UnFi4Osfw4vOJr5iN4P4RJDZdslpFs4OgM4F1VBwQc/edit#heading=h.kp12qj1w1lig)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ingestion

import (
	"encoding/json"
)

// SourceCommercetools struct for SourceCommercetools
type SourceCommercetools struct {
	Stores []string `json:"stores"`
	Url string `json:"url"`
	ProjectKey string `json:"projectKey"`
}

// NewSourceCommercetools instantiates a new SourceCommercetools object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourceCommercetools(stores []string, url string, projectKey string) *SourceCommercetools {
	this := SourceCommercetools{}
	this.Stores = stores
	this.Url = url
	this.ProjectKey = projectKey
	return &this
}

// NewSourceCommercetoolsWithDefaults instantiates a new SourceCommercetools object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceCommercetoolsWithDefaults() *SourceCommercetools {
	this := SourceCommercetools{}
	return &this
}

// GetStores returns the Stores field value
func (o *SourceCommercetools) GetStores() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Stores
}

// GetStoresOk returns a tuple with the Stores field value
// and a boolean to check if the value has been set.
func (o *SourceCommercetools) GetStoresOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Stores, true
}

// SetStores sets field value
func (o *SourceCommercetools) SetStores(v []string) {
	o.Stores = v
}

// GetUrl returns the Url field value
func (o *SourceCommercetools) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *SourceCommercetools) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *SourceCommercetools) SetUrl(v string) {
	o.Url = v
}

// GetProjectKey returns the ProjectKey field value
func (o *SourceCommercetools) GetProjectKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectKey
}

// GetProjectKeyOk returns a tuple with the ProjectKey field value
// and a boolean to check if the value has been set.
func (o *SourceCommercetools) GetProjectKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectKey, true
}

// SetProjectKey sets field value
func (o *SourceCommercetools) SetProjectKey(v string) {
	o.ProjectKey = v
}

func (o SourceCommercetools) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["stores"] = o.Stores
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["projectKey"] = o.ProjectKey
	}
	return json.Marshal(toSerialize)
}

type NullableSourceCommercetools struct {
	value *SourceCommercetools
	isSet bool
}

func (v NullableSourceCommercetools) Get() *SourceCommercetools {
	return v.value
}

func (v *NullableSourceCommercetools) Set(val *SourceCommercetools) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceCommercetools) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceCommercetools) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceCommercetools(val *SourceCommercetools) *NullableSourceCommercetools {
	return &NullableSourceCommercetools{value: val, isSet: true}
}

func (v NullableSourceCommercetools) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourceCommercetools) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


