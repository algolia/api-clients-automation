/*
Ingestion API

[Documentation](https://docs.google.com/document/d/13UnFi4Osfw4vOJr5iN4P4RJDZdslpFs4OgM4F1VBwQc/edit#heading=h.kp12qj1w1lig)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ingestion

import (
	"encoding/json"
)

// DestinationUpdateResponse struct for DestinationUpdateResponse
type DestinationUpdateResponse struct {
	DestinationID string `json:"destinationID"`
	Name string `json:"name"`
	UpdatedAt string `json:"updatedAt"`
}

// NewDestinationUpdateResponse instantiates a new DestinationUpdateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDestinationUpdateResponse(destinationID string, name string, updatedAt string) *DestinationUpdateResponse {
	this := DestinationUpdateResponse{}
	this.DestinationID = destinationID
	this.Name = name
	this.UpdatedAt = updatedAt
	return &this
}

// NewDestinationUpdateResponseWithDefaults instantiates a new DestinationUpdateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDestinationUpdateResponseWithDefaults() *DestinationUpdateResponse {
	this := DestinationUpdateResponse{}
	return &this
}

// GetDestinationID returns the DestinationID field value
func (o *DestinationUpdateResponse) GetDestinationID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationID
}

// GetDestinationIDOk returns a tuple with the DestinationID field value
// and a boolean to check if the value has been set.
func (o *DestinationUpdateResponse) GetDestinationIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationID, true
}

// SetDestinationID sets field value
func (o *DestinationUpdateResponse) SetDestinationID(v string) {
	o.DestinationID = v
}

// GetName returns the Name field value
func (o *DestinationUpdateResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DestinationUpdateResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DestinationUpdateResponse) SetName(v string) {
	o.Name = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *DestinationUpdateResponse) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *DestinationUpdateResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *DestinationUpdateResponse) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

func (o DestinationUpdateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["destinationID"] = o.DestinationID
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableDestinationUpdateResponse struct {
	value *DestinationUpdateResponse
	isSet bool
}

func (v NullableDestinationUpdateResponse) Get() *DestinationUpdateResponse {
	return v.value
}

func (v *NullableDestinationUpdateResponse) Set(val *DestinationUpdateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDestinationUpdateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDestinationUpdateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDestinationUpdateResponse(val *DestinationUpdateResponse) *NullableDestinationUpdateResponse {
	return &NullableDestinationUpdateResponse{value: val, isSet: true}
}

func (v NullableDestinationUpdateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDestinationUpdateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


