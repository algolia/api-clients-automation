// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
// ignore_for_file: unused_element
import 'package:algolia_client_search/src/model/user_hit.dart';

import 'package:json_annotation/json_annotation.dart';

part 'search_user_ids_response.g.dart';

@JsonSerializable()
final class SearchUserIdsResponse {
  /// Returns a new [SearchUserIdsResponse] instance.
  const SearchUserIdsResponse({
    required this.hits,
    required this.nbHits,
    required this.page,
    required this.hitsPerPage,
    required this.updatedAt,
  });

  /// User objects that match the query.
  @JsonKey(name: r'hits')
  final List<UserHit> hits;

  /// Number of results (hits).
  @JsonKey(name: r'nbHits')
  final int nbHits;

  /// Page of search results to retrieve.
  // minimum: 0
  @JsonKey(name: r'page')
  final int page;

  /// Maximum number of hits per page.  Algolia uses `page` and `hitsPerPage` to control how search results are displayed ([paginated](https://www.algolia.com/doc/guides/building-search-ui/ui-and-ux-patterns/pagination/js/)).  - `hitsPerPage`: sets the number of search results (_hits_) displayed per page. - `page`: specifies the page number of the search results you want to retrieve. Page numbering starts at 0, so the first page is `page=0`, the second is `page=1`, and so on.  For example, to display 10 results per page starting from the third page, set `hitsPerPage` to 10 and `page` to 2.
  // minimum: 1
  // maximum: 1000
  @JsonKey(name: r'hitsPerPage')
  final int hitsPerPage;

  /// Date and time when the object was updated, in RFC 3339 format.
  @JsonKey(name: r'updatedAt')
  final String updatedAt;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is SearchUserIdsResponse &&
          other.hits == hits &&
          other.nbHits == nbHits &&
          other.page == page &&
          other.hitsPerPage == hitsPerPage &&
          other.updatedAt == updatedAt;

  @override
  int get hashCode =>
      hits.hashCode +
      nbHits.hashCode +
      page.hashCode +
      hitsPerPage.hashCode +
      updatedAt.hashCode;

  factory SearchUserIdsResponse.fromJson(Map<String, dynamic> json) =>
      _$SearchUserIdsResponseFromJson(json);

  Map<String, dynamic> toJson() => _$SearchUserIdsResponseToJson(this);

  @override
  String toString() {
    return toJson().toString();
  }
}
