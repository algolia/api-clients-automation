// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
// ignore_for_file: unused_element
import 'package:json_annotation/json_annotation.dart';

/// Strategy for removing words from the query when it doesn't return any results. This helps to avoid returning empty search results.  <dl> <dt><code>none</code></dt> <dd>No words are removed when a query doesn't return results.</dd> <dt><code>lastWords</code></dt> <dd>Treat the last (then second to last, then third to last) word as optional, until there are results or at most 5 words have been removed.</dd> <dt><code>firstWords</code></dt> <dd>Treat the first (then second, then third) word as optional, until there are results or at most 5 words have been removed.</dd> <dt><code>allOptional</code></dt> <dd>Treat all words as optional.</dd> </dl>  For more information, see [Remove words to improve results](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/empty-or-insufficient-results/in-depth/why-use-remove-words-if-no-results/).
@JsonEnum(valueField: 'raw')
enum RemoveWordsIfNoResults {
  none(r'none'),
  lastWords(r'lastWords'),
  firstWords(r'firstWords'),
  allOptional(r'allOptional');

  const RemoveWordsIfNoResults(this.raw);
  final dynamic raw;

  dynamic toJson() => raw;

  static RemoveWordsIfNoResults fromJson(dynamic json) {
    for (final value in values) {
      if (value.raw == json) return value;
    }
    throw ArgumentError.value(json, "raw", "No enum value with that value");
  }

  @override
  String toString() => raw.toString();
}
