// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
// ignore_for_file: unused_element
import 'package:algolia_client_abtesting_v3/src/model/metric_result.dart';
import 'package:algolia_client_abtesting_v3/src/model/variant_metadata.dart';

import 'package:json_annotation/json_annotation.dart';

part 'variant.g.dart';

@JsonSerializable()
final class Variant {
  /// Returns a new [Variant] instance.
  const Variant({
    required this.description,
    this.estimatedSampleSize,
    required this.index,
    required this.trafficPercentage,
    required this.metrics,
    this.metadata,
    this.customSearchParameters,
  });

  /// Description for this variant.
  @JsonKey(name: r'description')
  final String description;

  /// Estimated number of searches required to achieve the desired statistical significance.  The A/B test configuration must include a `minimumDetectableEffect` setting for this number to be included in the response.
  @JsonKey(name: r'estimatedSampleSize')
  final int? estimatedSampleSize;

  /// Index name of the A/B test variant (case-sensitive).
  @JsonKey(name: r'index')
  final String index;

  /// Percentage of search requests each variant receives.
  // minimum: 1
  // maximum: 99
  @JsonKey(name: r'trafficPercentage')
  final int trafficPercentage;

  /// All ABTest metrics that were defined during test creation.
  @JsonKey(name: r'metrics')
  final List<MetricResult> metrics;

  @JsonKey(name: r'metadata')
  final VariantMetadata? metadata;

  /// Search parameters applied to this variant when the same index is used for multiple variants. Only present if custom search parameters were provided during test creation.
  @JsonKey(name: r'customSearchParameters')
  final Object? customSearchParameters;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Variant &&
          other.description == description &&
          other.estimatedSampleSize == estimatedSampleSize &&
          other.index == index &&
          other.trafficPercentage == trafficPercentage &&
          other.metrics == metrics &&
          other.metadata == metadata &&
          other.customSearchParameters == customSearchParameters;

  @override
  int get hashCode =>
      description.hashCode +
      estimatedSampleSize.hashCode +
      index.hashCode +
      trafficPercentage.hashCode +
      metrics.hashCode +
      metadata.hashCode +
      customSearchParameters.hashCode;

  factory Variant.fromJson(Map<String, dynamic> json) =>
      _$VariantFromJson(json);

  Map<String, dynamic> toJson() => _$VariantToJson(this);

  @override
  String toString() {
    return toJson().toString();
  }
}
