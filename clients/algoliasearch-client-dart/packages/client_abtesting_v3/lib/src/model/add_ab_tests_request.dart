// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
// ignore_for_file: unused_element
import 'package:algolia_client_abtesting_v3/src/model/ab_test_configuration.dart';
import 'package:algolia_client_abtesting_v3/src/model/create_metric.dart';

import 'package:json_annotation/json_annotation.dart';

part 'add_ab_tests_request.g.dart';

@JsonSerializable()
final class AddABTestsRequest {
  /// Returns a new [AddABTestsRequest] instance.
  const AddABTestsRequest({
    required this.name,
    required this.variants,
    required this.metrics,
    this.configuration,
    required this.endAt,
  });

  /// A/B test name.
  @JsonKey(name: r'name')
  final String name;

  /// A/B test variants.
  /// One of types:
  /// - [AbTestsVariantSearchParams]
  /// - [AbTestsVariant]
  @JsonKey(name: r'variants')
  final Iterable<dynamic> variants;

  /// A/B test metrics involved in the test. Only these metrics will be considered when calculating results.
  @JsonKey(name: r'metrics')
  final List<CreateMetric> metrics;

  @JsonKey(name: r'configuration')
  final ABTestConfiguration? configuration;

  /// End date and time of the A/B test, in RFC 3339 format.
  @JsonKey(name: r'endAt')
  final String endAt;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is AddABTestsRequest &&
          other.name == name &&
          other.variants == variants &&
          other.metrics == metrics &&
          other.configuration == configuration &&
          other.endAt == endAt;

  @override
  int get hashCode =>
      name.hashCode +
      variants.hashCode +
      metrics.hashCode +
      configuration.hashCode +
      endAt.hashCode;

  factory AddABTestsRequest.fromJson(Map<String, dynamic> json) =>
      _$AddABTestsRequestFromJson(json);

  Map<String, dynamic> toJson() => _$AddABTestsRequestToJson(this);

  @override
  String toString() {
    return toJson().toString();
  }
}
