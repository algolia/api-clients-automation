// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
// ignore_for_file: unused_element
import 'package:algolia_client_abtesting_v3/src/model/status.dart';
import 'package:algolia_client_abtesting_v3/src/model/ab_test_configuration.dart';
import 'package:algolia_client_abtesting_v3/src/model/variant.dart';

import 'package:json_annotation/json_annotation.dart';

part 'ab_test.g.dart';

@JsonSerializable()
final class ABTest {
  /// Returns a new [ABTest] instance.
  const ABTest({
    required this.abTestID,
    required this.updatedAt,
    required this.createdAt,
    required this.endAt,
    this.stoppedAt,
    required this.name,
    required this.status,
    required this.variants,
    this.configuration,
    this.migratedAbTestID,
  });

  /// Unique A/B test identifier.
  @JsonKey(name: r'abTestID')
  final int abTestID;

  /// Date and time when the A/B test was last updated, in RFC 3339 format.
  @JsonKey(name: r'updatedAt')
  final String updatedAt;

  /// Date and time when the A/B test was created, in RFC 3339 format.
  @JsonKey(name: r'createdAt')
  final String createdAt;

  /// End date and time of the A/B test, in RFC 3339 format.
  @JsonKey(name: r'endAt')
  final String endAt;

  /// Date and time when the A/B test was stopped, in RFC 3339 format.
  @JsonKey(name: r'stoppedAt')
  final String? stoppedAt;

  /// A/B test name.
  @JsonKey(name: r'name')
  final String name;

  @JsonKey(name: r'status')
  final Status status;

  /// A/B test variants.  The first variant is your _control_ index, typically your production index. All of the additional variants are indexes with changed settings that you want to test against the control.
  @JsonKey(name: r'variants')
  final List<Variant> variants;

  @JsonKey(name: r'configuration')
  final ABTestConfiguration? configuration;

  /// Unique migrated A/B test identifier.
  @JsonKey(name: r'migratedAbTestID')
  final int? migratedAbTestID;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ABTest &&
          other.abTestID == abTestID &&
          other.updatedAt == updatedAt &&
          other.createdAt == createdAt &&
          other.endAt == endAt &&
          other.stoppedAt == stoppedAt &&
          other.name == name &&
          other.status == status &&
          other.variants == variants &&
          other.configuration == configuration &&
          other.migratedAbTestID == migratedAbTestID;

  @override
  int get hashCode =>
      abTestID.hashCode +
      updatedAt.hashCode +
      createdAt.hashCode +
      endAt.hashCode +
      (stoppedAt == null ? 0 : stoppedAt.hashCode) +
      name.hashCode +
      status.hashCode +
      variants.hashCode +
      configuration.hashCode +
      migratedAbTestID.hashCode;

  factory ABTest.fromJson(Map<String, dynamic> json) => _$ABTestFromJson(json);

  Map<String, dynamic> toJson() => _$ABTestToJson(this);

  @override
  String toString() {
    return toJson().toString();
  }
}
