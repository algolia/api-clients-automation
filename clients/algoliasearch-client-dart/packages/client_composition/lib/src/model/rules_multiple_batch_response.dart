// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
// ignore_for_file: unused_element

import 'package:json_annotation/json_annotation.dart';

part 'rules_multiple_batch_response.g.dart';

@JsonSerializable()
final class RulesMultipleBatchResponse {
  /// Returns a new [RulesMultipleBatchResponse] instance.
  const RulesMultipleBatchResponse({
    required this.taskID,
  });

  /// Unique identifier of a task.  A successful API response means that a task was added to a queue. It might not run immediately. You can check the task's progress with the [`task` operation](https://www.algolia.com/doc/rest-api/search/get-task) and this task ID.
  @JsonKey(name: r'taskID')
  final int taskID;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is RulesMultipleBatchResponse && other.taskID == taskID;

  @override
  int get hashCode => taskID.hashCode;

  factory RulesMultipleBatchResponse.fromJson(Map<String, dynamic> json) =>
      _$RulesMultipleBatchResponseFromJson(json);

  Map<String, dynamic> toJson() => _$RulesMultipleBatchResponseToJson(this);

  @override
  String toString() {
    return toJson().toString();
  }
}
