// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
// ignore_for_file: unused_element
import 'package:algolia_client_composition/src/model/results_injected_item_applied_rules_info_response.dart';

import 'package:collection/collection.dart';
import 'package:json_annotation/json_annotation.dart';

part 'results_injected_item_info_response.g.dart';

@JsonSerializable(createFieldMap: true)
final class ResultsInjectedItemInfoResponse
    extends DelegatingMap<String, dynamic> {
  /// Returns a new [ResultsInjectedItemInfoResponse] instance.
  const ResultsInjectedItemInfoResponse({
    required this.key,
    this.appliedRules,
    Map<String, dynamic> additionalProperties = const {},
  }) : super(additionalProperties);

  @JsonKey(name: r'key')
  final String key;

  @JsonKey(name: r'appliedRules')
  final List<ResultsInjectedItemAppliedRulesInfoResponse>? appliedRules;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ResultsInjectedItemInfoResponse &&
          other.key == key &&
          other.appliedRules == appliedRules &&
          const MapEquality<String, dynamic>().equals(this, this);

  @override
  int get hashCode =>
      key.hashCode +
      appliedRules.hashCode +
      const MapEquality<String, dynamic>().hash(this);

  factory ResultsInjectedItemInfoResponse.fromJson(Map<String, dynamic> json) {
    final instance = _$ResultsInjectedItemInfoResponseFromJson(json);
    final additionalProperties = Map<String, dynamic>.from(json)
      ..removeWhere((key, value) =>
          _$ResultsInjectedItemInfoResponseFieldMap.containsKey(key));
    return ResultsInjectedItemInfoResponse(
      key: instance.key,
      appliedRules: instance.appliedRules,
      additionalProperties: additionalProperties,
    );
  }

  Map<String, dynamic> toJson() =>
      _$ResultsInjectedItemInfoResponseToJson(this)..addAll(this);

  @override
  String toString() {
    return toJson().toString();
  }
}
