// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
// ignore_for_file: unused_element
import 'package:algolia_client_composition/src/model/params.dart';

import 'package:json_annotation/json_annotation.dart';

part 'search_for_facet_values_params.g.dart';

@JsonSerializable()
final class SearchForFacetValuesParams {
  /// Returns a new [SearchForFacetValuesParams] instance.
  const SearchForFacetValuesParams({
    this.query,
    this.maxFacetHits,
    this.searchQuery,
  });

  /// Search query.
  @JsonKey(name: r'query')
  final String? query;

  /// Maximum number of facet values to return when [searching for facet values](https://www.algolia.com/doc/guides/managing-results/refine-results/faceting/#search-for-facet-values).
  // maximum: 100
  @JsonKey(name: r'maxFacetHits')
  final int? maxFacetHits;

  @JsonKey(name: r'searchQuery')
  final Params? searchQuery;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is SearchForFacetValuesParams &&
          other.query == query &&
          other.maxFacetHits == maxFacetHits &&
          other.searchQuery == searchQuery;

  @override
  int get hashCode =>
      query.hashCode + maxFacetHits.hashCode + searchQuery.hashCode;

  factory SearchForFacetValuesParams.fromJson(Map<String, dynamic> json) =>
      _$SearchForFacetValuesParamsFromJson(json);

  Map<String, dynamic> toJson() => _$SearchForFacetValuesParamsToJson(this);

  @override
  String toString() {
    return toJson().toString();
  }
}
