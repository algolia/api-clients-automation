// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
// ignore_for_file: unused_element
import 'package:algolia_client_insights/src/model/conversion_event.dart';
import 'package:algolia_client_insights/src/model/add_to_cart_event.dart';
import 'package:algolia_client_insights/src/model/object_data.dart';

import 'package:json_annotation/json_annotation.dart';

part 'added_to_cart_object_ids.g.dart';

@JsonSerializable()
final class AddedToCartObjectIDs {
  /// Returns a new [AddedToCartObjectIDs] instance.
  const AddedToCartObjectIDs({
    required this.eventName,
    required this.eventType,
    required this.eventSubtype,
    required this.index,
    required this.objectIDs,
    required this.userToken,
    this.authenticatedUserToken,
    this.currency,
    this.objectData,
    this.timestamp,
    this.value,
  });

  /// The name of the event, up to 64 ASCII characters.  Consider naming events consistentlyâ€”for example, by adopting Segment's [object-action](https://segment.com/academy/collecting-data/naming-conventions-for-clean-data/#the-object-action-framework) framework.
  @JsonKey(name: r'eventName')
  final String eventName;

  @JsonKey(name: r'eventType')
  final ConversionEvent eventType;

  @JsonKey(name: r'eventSubtype')
  final AddToCartEvent eventSubtype;

  /// The name of an Algolia index.
  @JsonKey(name: r'index')
  final String index;

  /// The object IDs of the records that are part of the event.
  @JsonKey(name: r'objectIDs')
  final List<String> objectIDs;

  /// An anonymous or pseudonymous user identifier.  > **Note**: Never include personally identifiable information in user tokens.
  @JsonKey(name: r'userToken')
  final String userToken;

  /// An identifier for authenticated users.  > **Note**: Never include personally identifiable information in user tokens.
  @JsonKey(name: r'authenticatedUserToken')
  final String? authenticatedUserToken;

  /// Three-letter [currency code](https://www.iso.org/iso-4217-currency-codes.html).
  @JsonKey(name: r'currency')
  final String? currency;

  /// Extra information about the records involved in a purchase or add-to-cart event.  If specified, it must have the same length as `objectIDs`.
  @JsonKey(name: r'objectData')
  final List<ObjectData>? objectData;

  /// The timestamp of the event in milliseconds in [Unix epoch time](https://wikipedia.org/wiki/Unix_time). By default, the Insights API uses the time it receives an event as its timestamp.
  @JsonKey(name: r'timestamp')
  final int? timestamp;

  /// One of types:
  /// - [double]
  /// - [String]
  @JsonKey(name: r'value')
  final dynamic value;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is AddedToCartObjectIDs &&
          other.eventName == eventName &&
          other.eventType == eventType &&
          other.eventSubtype == eventSubtype &&
          other.index == index &&
          other.objectIDs == objectIDs &&
          other.userToken == userToken &&
          other.authenticatedUserToken == authenticatedUserToken &&
          other.currency == currency &&
          other.objectData == objectData &&
          other.timestamp == timestamp &&
          other.value == value;

  @override
  int get hashCode =>
      eventName.hashCode +
      eventType.hashCode +
      eventSubtype.hashCode +
      index.hashCode +
      objectIDs.hashCode +
      userToken.hashCode +
      authenticatedUserToken.hashCode +
      currency.hashCode +
      objectData.hashCode +
      timestamp.hashCode +
      value.hashCode;

  factory AddedToCartObjectIDs.fromJson(Map<String, dynamic> json) =>
      _$AddedToCartObjectIDsFromJson(json);

  Map<String, dynamic> toJson() => _$AddedToCartObjectIDsToJson(this);

  @override
  String toString() {
    return toJson().toString();
  }
}
