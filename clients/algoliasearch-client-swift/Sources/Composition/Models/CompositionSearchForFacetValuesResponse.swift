// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(Core)
    import Core
#endif

public struct CompositionSearchForFacetValuesResponse: Codable, JSONEncodable {
    /// Search for facet values results.
    public var results: [SearchForFacetValuesResults]?

    public init(results: [SearchForFacetValuesResults]? = nil) {
        self.results = results
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case results
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(self.results, forKey: .results)
    }
}

extension CompositionSearchForFacetValuesResponse: Equatable {
    public static func ==(
        lhs: CompositionSearchForFacetValuesResponse,
        rhs: CompositionSearchForFacetValuesResponse
    ) -> Bool {
        lhs.results == rhs.results
    }
}

extension CompositionSearchForFacetValuesResponse: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.results?.hashValue)
    }
}
