// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(Core)
    import Core
#endif

public struct Composition: Codable, JSONEncodable {
    /// Composition unique identifier.
    public var objectID: String
    /// Composition name.
    public var name: String
    /// Composition description.
    public var description: String?
    public var behavior: CompositionBehavior

    public init(objectID: String, name: String, description: String? = nil, behavior: CompositionBehavior) {
        self.objectID = objectID
        self.name = name
        self.description = description
        self.behavior = behavior
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case objectID
        case name
        case description
        case behavior
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.objectID, forKey: .objectID)
        try container.encode(self.name, forKey: .name)
        try container.encodeIfPresent(self.description, forKey: .description)
        try container.encode(self.behavior, forKey: .behavior)
    }
}

extension Composition: Equatable {
    public static func ==(lhs: Composition, rhs: Composition) -> Bool {
        lhs.objectID == rhs.objectID &&
            lhs.name == rhs.name &&
            lhs.description == rhs.description &&
            lhs.behavior == rhs.behavior
    }
}

extension Composition: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.objectID.hashValue)
        hasher.combine(self.name.hashValue)
        hasher.combine(self.description?.hashValue)
        hasher.combine(self.behavior.hashValue)
    }
}
