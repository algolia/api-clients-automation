// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(Core)
    import Core
#endif

public struct Injection: Codable, JSONEncodable {
    public var main: CompositionMain
    /// list of injected items of the current Composition.
    public var injectedItems: [InjectedItem]?

    public init(main: CompositionMain, injectedItems: [InjectedItem]? = nil) {
        self.main = main
        self.injectedItems = injectedItems
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case main
        case injectedItems
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.main, forKey: .main)
        try container.encodeIfPresent(self.injectedItems, forKey: .injectedItems)
    }
}

extension Injection: Equatable {
    public static func ==(lhs: Injection, rhs: Injection) -> Bool {
        lhs.main == rhs.main &&
            lhs.injectedItems == rhs.injectedItems
    }
}

extension Injection: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.main.hashValue)
        hasher.combine(self.injectedItems?.hashValue)
    }
}
