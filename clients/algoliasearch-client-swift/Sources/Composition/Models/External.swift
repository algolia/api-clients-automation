// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(Core)
    import Core
#endif

public struct External: Codable, JSONEncodable {
    /// Composition Index name.
    public var index: String
    public var params: BaseInjectionQueryParameters?
    public var ordering: ExternalOrdering?

    public init(index: String, params: BaseInjectionQueryParameters? = nil, ordering: ExternalOrdering? = nil) {
        self.index = index
        self.params = params
        self.ordering = ordering
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case index
        case params
        case ordering
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.index, forKey: .index)
        try container.encodeIfPresent(self.params, forKey: .params)
        try container.encodeIfPresent(self.ordering, forKey: .ordering)
    }
}

extension External: Equatable {
    public static func ==(lhs: External, rhs: External) -> Bool {
        lhs.index == rhs.index &&
            lhs.params == rhs.params &&
            lhs.ordering == rhs.ordering
    }
}

extension External: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.index.hashValue)
        hasher.combine(self.params?.hashValue)
        hasher.combine(self.ordering?.hashValue)
    }
}
