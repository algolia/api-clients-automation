// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(Core)
    import Core
#endif

public struct ListCompositionsResponse: Codable, JSONEncodable {
    /// All compositions in your Algolia application.
    public var items: [Composition]
    /// Number of pages.
    public var nbPages: Int
    /// Current page.
    public var page: Int
    /// Number of items per page.
    public var hitsPerPage: Int
    /// Number of items.
    public var nbHits: Int

    public init(items: [Composition], nbPages: Int, page: Int, hitsPerPage: Int, nbHits: Int) {
        self.items = items
        self.nbPages = nbPages
        self.page = page
        self.hitsPerPage = hitsPerPage
        self.nbHits = nbHits
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case items
        case nbPages
        case page
        case hitsPerPage
        case nbHits
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.items, forKey: .items)
        try container.encode(self.nbPages, forKey: .nbPages)
        try container.encode(self.page, forKey: .page)
        try container.encode(self.hitsPerPage, forKey: .hitsPerPage)
        try container.encode(self.nbHits, forKey: .nbHits)
    }
}

extension ListCompositionsResponse: Equatable {
    public static func ==(lhs: ListCompositionsResponse, rhs: ListCompositionsResponse) -> Bool {
        lhs.items == rhs.items &&
            lhs.nbPages == rhs.nbPages &&
            lhs.page == rhs.page &&
            lhs.hitsPerPage == rhs.hitsPerPage &&
            lhs.nbHits == rhs.nbHits
    }
}

extension ListCompositionsResponse: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.items.hashValue)
        hasher.combine(self.nbPages.hashValue)
        hasher.combine(self.page.hashValue)
        hasher.combine(self.hitsPerPage.hashValue)
        hasher.combine(self.nbHits.hashValue)
    }
}
