// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(Core)
    import Core
#endif

public struct ExternalInjection: Codable, JSONEncodable {
    /// An objectID injected into an external source.
    public var objectID: String
    /// User-defined key-values that will be added to the injected item in the response. This is identical to Hits
    /// metadata defined in Composition or Composition Rule, with the benefit of being set at runtime.
    public var metadata: [String: AnyCodable]?

    public init(objectID: String, metadata: [String: AnyCodable]? = nil) {
        self.objectID = objectID
        self.metadata = metadata
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case objectID
        case metadata
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.objectID, forKey: .objectID)
        try container.encodeIfPresent(self.metadata, forKey: .metadata)
    }
}

extension ExternalInjection: Equatable {
    public static func ==(lhs: ExternalInjection, rhs: ExternalInjection) -> Bool {
        lhs.objectID == rhs.objectID &&
            lhs.metadata == rhs.metadata
    }
}

extension ExternalInjection: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.objectID.hashValue)
        hasher.combine(self.metadata?.hashValue)
    }
}
