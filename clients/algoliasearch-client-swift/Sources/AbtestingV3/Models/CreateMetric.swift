// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(Core)
    import Core
#endif

/// Defines a metric to be retrieved during an A/B test.
public struct CreateMetric: Codable, JSONEncodable {
    /// Name of the metric.
    public var name: String
    /// Dimension of the metric, for example, in case of a revenue metric it could be USD, EUR...
    public var dimension: String?

    public init(name: String, dimension: String? = nil) {
        self.name = name
        self.dimension = dimension
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case dimension
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.name, forKey: .name)
        try container.encodeIfPresent(self.dimension, forKey: .dimension)
    }
}

extension CreateMetric: Equatable {
    public static func ==(lhs: CreateMetric, rhs: CreateMetric) -> Bool {
        lhs.name == rhs.name &&
            lhs.dimension == rhs.dimension
    }
}

extension CreateMetric: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.name.hashValue)
        hasher.combine(self.dimension?.hashValue)
    }
}
