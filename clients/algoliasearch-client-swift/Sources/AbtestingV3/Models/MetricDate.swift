// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(Core)
    import Core
#endif

public struct MetricDate: Codable, JSONEncodable {
    /// Date where the metric was updated, in RFC 3339 format.
    public var date: String?
    /// All ABTest metrics that were defined during test creation.
    public var metrics: [MetricResult]?

    public init(date: String? = nil, metrics: [MetricResult]? = nil) {
        self.date = date
        self.metrics = metrics
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case date
        case metrics
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(self.date, forKey: .date)
        try container.encodeIfPresent(self.metrics, forKey: .metrics)
    }
}

extension MetricDate: Equatable {
    public static func ==(lhs: MetricDate, rhs: MetricDate) -> Bool {
        lhs.date == rhs.date &&
            lhs.metrics == rhs.metrics
    }
}

extension MetricDate: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.date?.hashValue)
        hasher.combine(self.metrics?.hashValue)
    }
}
