// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(Core)
    import Core
#endif

public struct Timeseries: Codable, JSONEncodable {
    /// Unique A/B test identifier.
    public var abTestID: Int
    /// A/B test timeseries variants.  The first variant is your _control_ index, typically your production index. All
    /// of the additional variants are indexes with changed settings that you want to test against the control.
    public var variants: [TimeseriesVariant]

    public init(abTestID: Int, variants: [TimeseriesVariant]) {
        self.abTestID = abTestID
        self.variants = variants
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case abTestID
        case variants
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.abTestID, forKey: .abTestID)
        try container.encode(self.variants, forKey: .variants)
    }
}

extension Timeseries: Equatable {
    public static func ==(lhs: Timeseries, rhs: Timeseries) -> Bool {
        lhs.abTestID == rhs.abTestID &&
            lhs.variants == rhs.variants
    }
}

extension Timeseries: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.abTestID.hashValue)
        hasher.combine(self.variants.hashValue)
    }
}
