// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(Core)
    import Core
#endif

public struct AbtestingListABTestsResponse: Codable, JSONEncodable {
    /// The list of A/B tests, null if no A/B tests are configured for this application.
    public var abtests: [AbtestingABTest]?
    /// Number of A/B tests.
    public var count: Int
    /// Number of retrievable A/B tests.
    public var total: Int

    public init(abtests: [AbtestingABTest]?, count: Int, total: Int) {
        self.abtests = abtests
        self.count = count
        self.total = total
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case abtests
        case count
        case total
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.abtests, forKey: .abtests)
        try container.encode(self.count, forKey: .count)
        try container.encode(self.total, forKey: .total)
    }
}

extension AbtestingListABTestsResponse: Equatable {
    public static func ==(lhs: AbtestingListABTestsResponse, rhs: AbtestingListABTestsResponse) -> Bool {
        lhs.abtests == rhs.abtests &&
            lhs.count == rhs.count &&
            lhs.total == rhs.total
    }
}

extension AbtestingListABTestsResponse: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.abtests.hashValue)
        hasher.combine(self.count.hashValue)
        hasher.combine(self.total.hashValue)
    }
}
