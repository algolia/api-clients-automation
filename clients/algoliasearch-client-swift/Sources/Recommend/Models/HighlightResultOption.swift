// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Core
import Foundation

#if canImport(AnyCodable)
  import AnyCodable
#endif

/// Show highlighted section and words matched on a query.
@objcMembers public class HighlightResultOption: NSObject, Codable, JSONEncodable {

  /** Markup text with `facetQuery` matches highlighted. */
  public var value: String
  public var matchLevel: MatchLevel
  /** List of words from the query that matched the object. */
  public var matchedWords: [String]
  /** Whether the entire attribute value is highlighted. */
  public var fullyHighlighted: Bool?
  public var fullyHighlightedNum: NSNumber? {
    return fullyHighlighted as NSNumber?
  }

  public init(
    value: String, matchLevel: MatchLevel, matchedWords: [String], fullyHighlighted: Bool? = nil
  ) {
    self.value = value
    self.matchLevel = matchLevel
    self.matchedWords = matchedWords
    self.fullyHighlighted = fullyHighlighted
  }

  public enum CodingKeys: String, CodingKey, CaseIterable {
    case value
    case matchLevel
    case matchedWords
    case fullyHighlighted
  }

  // Encodable protocol methods

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    try container.encode(value, forKey: .value)
    try container.encode(matchLevel, forKey: .matchLevel)
    try container.encode(matchedWords, forKey: .matchedWords)
    try container.encodeIfPresent(fullyHighlighted, forKey: .fullyHighlighted)
  }
}
