// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

#if canImport(AnyCodable)
    import AnyCodable
#endif
import Core
import Foundation

/// Automatic facet Filter.
public struct AutomaticFacetFilter: Codable, JSONEncodable, Hashable {
    /// Attribute to filter on. This must match a facet placeholder in the Rule's pattern.
    public var facet: String
    /// Score for the filter. Typically used for optional or disjunctive filters.
    public var score: Int?
    /// Whether the filter is disjunctive (true) or conjunctive (false).
    public var disjunctive: Bool?

    public init(facet: String, score: Int? = nil, disjunctive: Bool? = nil) {
        self.facet = facet
        self.score = score
        self.disjunctive = disjunctive
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case facet
        case score
        case disjunctive
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.facet, forKey: .facet)
        try container.encodeIfPresent(self.score, forKey: .score)
        try container.encodeIfPresent(self.disjunctive, forKey: .disjunctive)
    }
}
