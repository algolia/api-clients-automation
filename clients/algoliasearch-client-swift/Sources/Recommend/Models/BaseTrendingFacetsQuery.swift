// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(Core)
    import Core
#endif

public struct BaseTrendingFacetsQuery: Codable, JSONEncodable {
    /// Facet name for trending models.
    public var facetName: String
    public var model: TrendingFacetsModel?

    public init(facetName: String, model: TrendingFacetsModel? = nil) {
        self.facetName = facetName
        self.model = model
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case facetName
        case model
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.facetName, forKey: .facetName)
        try container.encodeIfPresent(self.model, forKey: .model)
    }
}

extension BaseTrendingFacetsQuery: Equatable {
    public static func ==(lhs: BaseTrendingFacetsQuery, rhs: BaseTrendingFacetsQuery) -> Bool {
        lhs.facetName == rhs.facetName &&
            lhs.model == rhs.model
    }
}

extension BaseTrendingFacetsQuery: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.facetName.hashValue)
        hasher.combine(self.model?.hashValue)
    }
}
