// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Core
import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

// MARK: - Params

/// Additional search parameters.
public struct Params: Codable, JSONEncodable, Hashable {
    // MARK: Lifecycle

    public init(
        query: ConsequenceQuery? = nil,
        automaticFacetFilters: AutomaticFacetFilters? = nil,
        automaticOptionalFacetFilters: AutomaticFacetFilters? = nil,
        renderingContent: RenderingContent? = nil
    ) {
        self.query = query
        self.automaticFacetFilters = automaticFacetFilters
        self.automaticOptionalFacetFilters = automaticOptionalFacetFilters
        self.renderingContent = renderingContent
    }

    // MARK: Public

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case query
        case automaticFacetFilters
        case automaticOptionalFacetFilters
        case renderingContent
    }

    public var query: ConsequenceQuery?
    public var automaticFacetFilters: AutomaticFacetFilters?
    public var automaticOptionalFacetFilters: AutomaticFacetFilters?
    public var renderingContent: RenderingContent?

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(self.query, forKey: .query)
        try container.encodeIfPresent(self.automaticFacetFilters, forKey: .automaticFacetFilters)
        try container.encodeIfPresent(self.automaticOptionalFacetFilters, forKey: .automaticOptionalFacetFilters)
        try container.encodeIfPresent(self.renderingContent, forKey: .renderingContent)
    }
}
