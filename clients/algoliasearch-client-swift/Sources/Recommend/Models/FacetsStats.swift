// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Core
import Foundation

#if canImport(AnyCodable)
  import AnyCodable
#endif

@objcMembers public class FacetsStats: NSObject, Codable, JSONEncodable {

  /** Minimum value in the results. */
  public var min: Double?
  public var minNum: NSNumber? {
    return min as NSNumber?
  }
  /** Maximum value in the results. */
  public var max: Double?
  public var maxNum: NSNumber? {
    return max as NSNumber?
  }
  /** Average facet value in the results. */
  public var avg: Double?
  public var avgNum: NSNumber? {
    return avg as NSNumber?
  }
  /** Sum of all values in the results. */
  public var sum: Double?
  public var sumNum: NSNumber? {
    return sum as NSNumber?
  }

  public init(min: Double? = nil, max: Double? = nil, avg: Double? = nil, sum: Double? = nil) {
    self.min = min
    self.max = max
    self.avg = avg
    self.sum = sum
  }

  public enum CodingKeys: String, CodingKey, CaseIterable {
    case min
    case max
    case avg
    case sum
  }

  // Encodable protocol methods

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    try container.encodeIfPresent(min, forKey: .min)
    try container.encodeIfPresent(max, forKey: .max)
    try container.encodeIfPresent(avg, forKey: .avg)
    try container.encodeIfPresent(sum, forKey: .sum)
  }
}
