// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Core
import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

// MARK: - LogQuery

public struct LogQuery: Codable, JSONEncodable, Hashable {
    // MARK: Lifecycle

    public init(indexName: String? = nil, userToken: String? = nil, queryId: String? = nil) {
        self.indexName = indexName
        self.userToken = userToken
        self.queryId = queryId
    }

    // MARK: Public

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case indexName = "index_name"
        case userToken = "user_token"
        case queryId = "query_id"
    }

    /// Index targeted by the query.
    public var indexName: String?
    /// User identifier.
    public var userToken: String?
    /// Unique query identifier.
    public var queryId: String?

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(self.indexName, forKey: .indexName)
        try container.encodeIfPresent(self.userToken, forKey: .userToken)
        try container.encodeIfPresent(self.queryId, forKey: .queryId)
    }
}
