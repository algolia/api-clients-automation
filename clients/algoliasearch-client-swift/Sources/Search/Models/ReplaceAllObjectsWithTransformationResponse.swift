// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(Core)
    import Core
#endif

public struct ReplaceAllObjectsWithTransformationResponse: Codable, JSONEncodable {
    public var copyOperationResponse: UpdatedAtResponse
    /// The response of the `push` request(s).
    public var watchResponses: [SearchWatchResponse]
    public var moveOperationResponse: UpdatedAtResponse

    public init(
        copyOperationResponse: UpdatedAtResponse,
        watchResponses: [SearchWatchResponse],
        moveOperationResponse: UpdatedAtResponse
    ) {
        self.copyOperationResponse = copyOperationResponse
        self.watchResponses = watchResponses
        self.moveOperationResponse = moveOperationResponse
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case copyOperationResponse
        case watchResponses
        case moveOperationResponse
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.copyOperationResponse, forKey: .copyOperationResponse)
        try container.encode(self.watchResponses, forKey: .watchResponses)
        try container.encode(self.moveOperationResponse, forKey: .moveOperationResponse)
    }
}

extension ReplaceAllObjectsWithTransformationResponse: Equatable {
    public static func ==(
        lhs: ReplaceAllObjectsWithTransformationResponse,
        rhs: ReplaceAllObjectsWithTransformationResponse
    ) -> Bool {
        lhs.copyOperationResponse == rhs.copyOperationResponse &&
            lhs.watchResponses == rhs.watchResponses &&
            lhs.moveOperationResponse == rhs.moveOperationResponse
    }
}

extension ReplaceAllObjectsWithTransformationResponse: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.copyOperationResponse.hashValue)
        hasher.combine(self.watchResponses.hashValue)
        hasher.combine(self.moveOperationResponse.hashValue)
    }
}
