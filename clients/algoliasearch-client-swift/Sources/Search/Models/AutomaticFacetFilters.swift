// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import AnyCodable
import Core
import Foundation

/// Filter to be applied to the search.  You can use this to respond to search queries that match a facet value. For
/// example, if users search for \&quot;comedy\&quot;, which matches a facet value of the \&quot;genre\&quot; facet, you
/// can filter the results to show the top-ranked comedy movies.
public enum AutomaticFacetFilters: Codable, JSONEncodable, AbstractEncodable, Hashable {
    case arrayOfAutomaticFacetFilter([AutomaticFacetFilter])
    case arrayOfString([String])

    public func encode(to encoder: Encoder) throws {
        var container = encoder.singleValueContainer()
        switch self {
        case let .arrayOfAutomaticFacetFilter(value):
            try container.encode(value)
        case let .arrayOfString(value):
            try container.encode(value)
        }
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        if let value = try? container.decode([AutomaticFacetFilter].self) {
            self = .arrayOfAutomaticFacetFilter(value)
        } else if let value = try? container.decode([String].self) {
            self = .arrayOfString(value)
        } else {
            throw DecodingError.typeMismatch(
                Self.Type.self,
                .init(
                    codingPath: decoder.codingPath,
                    debugDescription: "Unable to decode instance of AutomaticFacetFilters"
                )
            )
        }
    }

    public func GetActualInstance() -> Encodable {
        switch self {
        case let .arrayOfAutomaticFacetFilter(value):
            value as [AutomaticFacetFilter]
        case let .arrayOfString(value):
            value as [String]
        }
    }
}
