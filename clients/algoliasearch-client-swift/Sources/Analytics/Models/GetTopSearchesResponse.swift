// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import AnyCodable
import Core
import Foundation

public enum GetTopSearchesResponse: Codable, JSONEncodable, AbstractEncodable, Hashable {
    case topSearchesResponse(TopSearchesResponse)
    case topSearchesResponseWithAnalytics(TopSearchesResponseWithAnalytics)

    public func encode(to encoder: Encoder) throws {
        var container = encoder.singleValueContainer()
        switch self {
        case let .topSearchesResponse(value):
            try container.encode(value)
        case let .topSearchesResponseWithAnalytics(value):
            try container.encode(value)
        }
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        if let value = try? container.decode(TopSearchesResponse.self) {
            self = .topSearchesResponse(value)
        } else if let value = try? container.decode(TopSearchesResponseWithAnalytics.self) {
            self = .topSearchesResponseWithAnalytics(value)
        } else {
            throw DecodingError.typeMismatch(
                Self.Type.self,
                .init(
                    codingPath: decoder.codingPath,
                    debugDescription: "Unable to decode instance of GetTopSearchesResponse"
                )
            )
        }
    }

    public func GetActualInstance() -> Encodable {
        switch self {
        case let .topSearchesResponse(value):
            value as TopSearchesResponse
        case let .topSearchesResponseWithAnalytics(value):
            value as TopSearchesResponseWithAnalytics
        }
    }
}
