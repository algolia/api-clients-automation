// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

#if canImport(AnyCodable)
    import AnyCodable
#endif
import Core
import Foundation

public struct TopHitWithAnalytics: Codable, JSONEncodable, Hashable {
    static let clickThroughRateRule = NumericRule<Double>(
        minimum: 0,
        exclusiveMinimum: false,
        maximum: 1,
        exclusiveMaximum: false,
        multipleOf: nil
    )
    /// Hit.
    public var hit: String
    /// Number of occurrences.
    public var count: Int
    /// [Click-through rate
    /// (CTR)](https://www.algolia.com/doc/guides/search-analytics/concepts/metrics/#click-through-rate).
    public var clickThroughRate: Double
    /// [Conversion rate (CR)](https://www.algolia.com/doc/guides/search-analytics/concepts/metrics/#conversion-rate).
    public var conversionRate: Double
    /// Number of tracked searches. This is the number of search requests where the `clickAnalytics` parameter is
    /// `true`.
    public var trackedSearchCount: Int?
    /// Number of click events.
    public var clickCount: Int
    /// Number of converted clicks.
    public var conversionCount: Int

    public init(
        hit: String,
        count: Int,
        clickThroughRate: Double,
        conversionRate: Double,
        trackedSearchCount: Int?,
        clickCount: Int,
        conversionCount: Int
    ) {
        self.hit = hit
        self.count = count
        self.clickThroughRate = clickThroughRate
        self.conversionRate = conversionRate
        self.trackedSearchCount = trackedSearchCount
        self.clickCount = clickCount
        self.conversionCount = conversionCount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case hit
        case count
        case clickThroughRate
        case conversionRate
        case trackedSearchCount
        case clickCount
        case conversionCount
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.hit, forKey: .hit)
        try container.encode(self.count, forKey: .count)
        try container.encode(self.clickThroughRate, forKey: .clickThroughRate)
        try container.encode(self.conversionRate, forKey: .conversionRate)
        try container.encode(self.trackedSearchCount, forKey: .trackedSearchCount)
        try container.encode(self.clickCount, forKey: .clickCount)
        try container.encode(self.conversionCount, forKey: .conversionCount)
    }
}
