// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(Core)
    import Core
#endif

public struct EmailNotifications: Codable, JSONEncodable {
    /// Whether to send email notifications, note that this doesn't prevent the task from being blocked.
    public var enabled: Bool?

    public init(enabled: Bool? = nil) {
        self.enabled = enabled
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case enabled
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(self.enabled, forKey: .enabled)
    }
}

extension EmailNotifications: Equatable {
    public static func ==(lhs: EmailNotifications, rhs: EmailNotifications) -> Bool {
        lhs.enabled == rhs.enabled
    }
}

extension EmailNotifications: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.enabled?.hashValue)
    }
}
