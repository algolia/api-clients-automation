// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Core
import Foundation

#if canImport(AnyCodable)
  import AnyCodable
#endif

/// The payload for a task update.
@objcMembers public class TaskUpdate: NSObject, Codable, JSONEncodable {

  static let failureThresholdRule = NumericRule<Int>(
    minimum: 0, exclusiveMinimum: false, maximum: 100, exclusiveMaximum: false, multipleOf: nil)
  /** The destination UUID. */
  public var destinationID: String?
  public var trigger: TriggerUpdateInput?
  public var input: TaskInput?
  /** Whether the task is enabled or not. */
  public var enabled: Bool?
  public var enabledNum: NSNumber? {
    return enabled as NSNumber?
  }
  /** A percentage representing the accepted failure threshold to determine if a `run` succeeded or not. */
  public var failureThreshold: Int?
  public var failureThresholdNum: NSNumber? {
    return failureThreshold as NSNumber?
  }

  public init(
    destinationID: String? = nil, trigger: TriggerUpdateInput? = nil, input: TaskInput? = nil,
    enabled: Bool? = nil, failureThreshold: Int? = nil
  ) {
    self.destinationID = destinationID
    self.trigger = trigger
    self.input = input
    self.enabled = enabled
    self.failureThreshold = failureThreshold
  }

  public enum CodingKeys: String, CodingKey, CaseIterable {
    case destinationID
    case trigger
    case input
    case enabled
    case failureThreshold
  }

  // Encodable protocol methods

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    try container.encodeIfPresent(destinationID, forKey: .destinationID)
    try container.encodeIfPresent(trigger, forKey: .trigger)
    try container.encodeIfPresent(input, forKey: .input)
    try container.encodeIfPresent(enabled, forKey: .enabled)
    try container.encodeIfPresent(failureThreshold, forKey: .failureThreshold)
  }
}
