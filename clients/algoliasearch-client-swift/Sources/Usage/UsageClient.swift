// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(Core)
    import Core
#endif

open class UsageClient {
    private var configuration: UsageClientConfiguration
    private var transporter: Transporter

    var appID: String {
        self.configuration.appID
    }

    public init(configuration: UsageClientConfiguration, transporter: Transporter) {
        self.configuration = configuration
        self.transporter = transporter
    }

    public convenience init(configuration: UsageClientConfiguration) {
        self.init(configuration: configuration, transporter: Transporter(configuration: configuration))
    }

    public convenience init(appID: String, apiKey: String) throws {
        try self.init(configuration: UsageClientConfiguration(appID: appID, apiKey: apiKey))
    }

    /// - parameter path: (path) Path of the endpoint, anything after \&quot;/1\&quot; must be specified.
    /// - parameter parameters: (query) Query parameters to apply to the current query. (optional)
    /// - returns: AnyCodable
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open func customDelete(
        path: String,
        parameters: [String: AnyCodable]? = nil,
        requestOptions: RequestOptions? = nil
    ) async throws -> AnyCodable {
        let response: Response<AnyCodable> = try await customDeleteWithHTTPInfo(
            path: path,
            parameters: parameters,
            requestOptions: requestOptions
        )

        guard let body = response.body else {
            throw AlgoliaError.missingData
        }

        return body
    }

    // This method allow you to send requests to the Algolia REST API.
    //
    //
    // - parameter path: (path) Path of the endpoint, anything after \&quot;/1\&quot; must be specified.
    //
    // - parameter parameters: (query) Query parameters to apply to the current query. (optional)
    // - returns: RequestBuilder<AnyCodable>

    open func customDeleteWithHTTPInfo(
        path: String,
        parameters: [String: AnyCodable]? = nil,
        requestOptions userRequestOptions: RequestOptions? = nil
    ) async throws -> Response<AnyCodable> {
        guard !path.isEmpty else {
            throw AlgoliaError.invalidArgument("path", "customDelete")
        }

        var resourcePath = "/{path}"
        let pathPreEscape = "\(APIHelper.mapValueToPathItem(path))"
        resourcePath = resourcePath.replacingOccurrences(
            of: "{path}",
            with: pathPreEscape,
            options: .literal,
            range: nil
        )
        let body: AnyCodable? = nil
        let queryParameters: [String: AnyCodable]? = parameters

        let nillableHeaders: [String: Any?]? = nil

        let headers = APIHelper.rejectNilHeaders(nillableHeaders)

        return try await self.transporter.send(
            method: "DELETE",
            path: resourcePath,
            data: body,
            requestOptions: RequestOptions(headers: headers, queryParameters: queryParameters) + userRequestOptions
        )
    }

    /// - parameter path: (path) Path of the endpoint, anything after \&quot;/1\&quot; must be specified.
    /// - parameter parameters: (query) Query parameters to apply to the current query. (optional)
    /// - returns: AnyCodable
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open func customGet(
        path: String,
        parameters: [String: AnyCodable]? = nil,
        requestOptions: RequestOptions? = nil
    ) async throws -> AnyCodable {
        let response: Response<AnyCodable> = try await customGetWithHTTPInfo(
            path: path,
            parameters: parameters,
            requestOptions: requestOptions
        )

        guard let body = response.body else {
            throw AlgoliaError.missingData
        }

        return body
    }

    // This method allow you to send requests to the Algolia REST API.
    //
    //
    // - parameter path: (path) Path of the endpoint, anything after \&quot;/1\&quot; must be specified.
    //
    // - parameter parameters: (query) Query parameters to apply to the current query. (optional)
    // - returns: RequestBuilder<AnyCodable>

    open func customGetWithHTTPInfo(
        path: String,
        parameters: [String: AnyCodable]? = nil,
        requestOptions userRequestOptions: RequestOptions? = nil
    ) async throws -> Response<AnyCodable> {
        guard !path.isEmpty else {
            throw AlgoliaError.invalidArgument("path", "customGet")
        }

        var resourcePath = "/{path}"
        let pathPreEscape = "\(APIHelper.mapValueToPathItem(path))"
        resourcePath = resourcePath.replacingOccurrences(
            of: "{path}",
            with: pathPreEscape,
            options: .literal,
            range: nil
        )
        let body: AnyCodable? = nil
        let queryParameters: [String: AnyCodable]? = parameters

        let nillableHeaders: [String: Any?]? = nil

        let headers = APIHelper.rejectNilHeaders(nillableHeaders)

        return try await self.transporter.send(
            method: "GET",
            path: resourcePath,
            data: body,
            requestOptions: RequestOptions(headers: headers, queryParameters: queryParameters) + userRequestOptions
        )
    }

    /// - parameter path: (path) Path of the endpoint, anything after \&quot;/1\&quot; must be specified.
    /// - parameter parameters: (query) Query parameters to apply to the current query. (optional)
    /// - parameter body: (body) Parameters to send with the custom request. (optional)
    /// - returns: AnyCodable
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open func customPost(
        path: String,
        parameters: [String: AnyCodable]? = nil,
        body: Codable? = nil,
        requestOptions: RequestOptions? = nil
    ) async throws -> AnyCodable {
        let response: Response<AnyCodable> = try await customPostWithHTTPInfo(
            path: path,
            parameters: parameters,
            body: body,
            requestOptions: requestOptions
        )

        guard let body = response.body else {
            throw AlgoliaError.missingData
        }

        return body
    }

    // This method allow you to send requests to the Algolia REST API.
    //
    //
    // - parameter path: (path) Path of the endpoint, anything after \&quot;/1\&quot; must be specified.
    //
    // - parameter parameters: (query) Query parameters to apply to the current query. (optional)
    //
    // - parameter body: (body) Parameters to send with the custom request. (optional)
    // - returns: RequestBuilder<AnyCodable>

    open func customPostWithHTTPInfo(
        path: String,
        parameters: [String: AnyCodable]? = nil,
        body: Codable? = nil,
        requestOptions userRequestOptions: RequestOptions? = nil
    ) async throws -> Response<AnyCodable> {
        guard !path.isEmpty else {
            throw AlgoliaError.invalidArgument("path", "customPost")
        }

        var resourcePath = "/{path}"
        let pathPreEscape = "\(APIHelper.mapValueToPathItem(path))"
        resourcePath = resourcePath.replacingOccurrences(
            of: "{path}",
            with: pathPreEscape,
            options: .literal,
            range: nil
        )
        let body = body
        let queryParameters: [String: AnyCodable]? = parameters

        let nillableHeaders: [String: Any?]? = nil

        let headers = APIHelper.rejectNilHeaders(nillableHeaders)

        return try await self.transporter.send(
            method: "POST",
            path: resourcePath,
            data: body ?? AnyCodable(),
            requestOptions: RequestOptions(headers: headers, queryParameters: queryParameters) + userRequestOptions
        )
    }

    /// - parameter path: (path) Path of the endpoint, anything after \&quot;/1\&quot; must be specified.
    /// - parameter parameters: (query) Query parameters to apply to the current query. (optional)
    /// - parameter body: (body) Parameters to send with the custom request. (optional)
    /// - returns: AnyCodable
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open func customPut(
        path: String,
        parameters: [String: AnyCodable]? = nil,
        body: Codable? = nil,
        requestOptions: RequestOptions? = nil
    ) async throws -> AnyCodable {
        let response: Response<AnyCodable> = try await customPutWithHTTPInfo(
            path: path,
            parameters: parameters,
            body: body,
            requestOptions: requestOptions
        )

        guard let body = response.body else {
            throw AlgoliaError.missingData
        }

        return body
    }

    // This method allow you to send requests to the Algolia REST API.
    //
    //
    // - parameter path: (path) Path of the endpoint, anything after \&quot;/1\&quot; must be specified.
    //
    // - parameter parameters: (query) Query parameters to apply to the current query. (optional)
    //
    // - parameter body: (body) Parameters to send with the custom request. (optional)
    // - returns: RequestBuilder<AnyCodable>

    open func customPutWithHTTPInfo(
        path: String,
        parameters: [String: AnyCodable]? = nil,
        body: Codable? = nil,
        requestOptions userRequestOptions: RequestOptions? = nil
    ) async throws -> Response<AnyCodable> {
        guard !path.isEmpty else {
            throw AlgoliaError.invalidArgument("path", "customPut")
        }

        var resourcePath = "/{path}"
        let pathPreEscape = "\(APIHelper.mapValueToPathItem(path))"
        resourcePath = resourcePath.replacingOccurrences(
            of: "{path}",
            with: pathPreEscape,
            options: .literal,
            range: nil
        )
        let body = body
        let queryParameters: [String: AnyCodable]? = parameters

        let nillableHeaders: [String: Any?]? = nil

        let headers = APIHelper.rejectNilHeaders(nillableHeaders)

        return try await self.transporter.send(
            method: "PUT",
            path: resourcePath,
            data: body ?? AnyCodable(),
            requestOptions: RequestOptions(headers: headers, queryParameters: queryParameters) + userRequestOptions
        )
    }

    /// - parameter statistic: (path) Usage statistics to retrieve.  Use &#x60;*&#x60; to retrieve all usage metrics,
    /// otherwise add one or more of the following metrics, separated by a comma.  **Search operations**  -
    /// &#x60;search_operations&#x60;. All search operations. - &#x60;total_search_operations&#x60;: Sum of all search
    /// operations. - &#x60;total_search_requests&#x60;: Sum of all [search requests](https://support.algolia.com/hc/en-us/articles/4406981829777-How-does-Algolia-count-records-and-operations-).
    ///   The number of billed search requests is equal to this value minus
    /// &#x60;querysuggestions_total_search_requests&#x60;. - &#x60;queries_operations&#x60;. Number of [single index
    /// search](/specs/search#tag/Search/operation/searchSingleIndex) operations. -
    /// &#x60;multi_queries_operations&#x60;.
    /// Number of [multi-index search](/specs/search#tag/Search/operation/search) operations.  **ACL operations**  -
    /// &#x60;acl_operations&#x60;. All ACL operations. - &#x60;total_acl_operations&#x60;. Sum of all ACL operations. -
    /// &#x60;get_api_keys_operations&#x60;. Number of [list API keys](/specs/search#tag/Api-Keys/operation/listApiKeys)
    /// operations. - &#x60;get_api_key_operations&#x60;. Number of [get API key
    /// permission](/specs/search#tag/Api-Keys/operation/getApiKey) operations. - &#x60;add_api_key_operations&#x60;.
    /// Number of [create API key](/specs/search#tag/Api-Keys/operation/addApiKey) operations. -
    /// &#x60;update_api_key_operations&#x60;. Number of [update API
    /// key](/specs/search#tag/Api-Keys/operation/updateApiKey) operations. - &#x60;delete_api_key_operations&#x60;.
    /// Number of [delete API key](/specs/search#tag/Api-Keys/operation/deleteApiKey) operations. -
    /// &#x60;list_api_key_operations&#x60;. Number of list index API keys operations.  **Indexing operations**  -
    /// &#x60;indexing_operations&#x60;. All indexing operations. - &#x60;total_indexing_operations&#x60;. Sum of all
    /// indexing operations. - &#x60;browse_operations&#x60;. Number of [browse
    /// index](/specs/search#tag/Search/operation/browse) operations. - &#x60;clear_index_operations&#x60;. Number of
    /// [clear records](/specs/search#tag/Records/operation/clearObjects) operations. -
    /// &#x60;copy_move_operations&#x60;.
    /// Number of [copy or move index](/specs/search#tag/Indices/operation/operationIndex) operations. -
    /// &#x60;delete_index_operations&#x60;. Number of [delete index](/specs/search#tag/Indices/operation/deleteIndex)
    /// operations. - &#x60;get_log_operations&#x60;. Number of [get logs](/specs/search#tag/Advanced/operation/getLogs)
    /// operations. - &#x60;get_settings_operations&#x60;. Number of [get
    /// settings](/specs/search#operation/getIndexUsage)
    /// operations. - &#x60;set_settings_operations&#x60;. Number of [set
    /// settings](/specs/search#tag/Indices/operation/setSettings) operations. - &#x60;list_indices_operations&#x60;.
    /// Number of [list indices](/specs/search#tag/Indices/operation/listIndices) operations. -
    /// &#x60;wait_task_operations&#x60;. Number of [wait](/specs/search#tag/Indices/operation/getTask) operations.
    /// **Record operations**  - &#x60;record_operations&#x60;. All record operations. -
    /// &#x60;total_records_operations&#x60;. Sum of all record operations. - &#x60;add_record_operations&#x60;. Number
    /// of
    /// [add or replace record](/specs/search#tag/Records/operation/saveObject) operations. -
    /// &#x60;batch_operations&#x60;. Number of [batch indexing](/specs/search#tag/Records/operation/multipleBatch)
    /// operations. - &#x60;delete_by_query_operations&#x60;. Number of [delete by
    /// query](/specs/search#tag/Records/operation/deleteBy) operations. - &#x60;delete_record_operations&#x60;. Number
    /// of
    /// [delete record](/specs/search#tag/Records/operation/deleteObject) operations. -
    /// &#x60;get_record_operations&#x60;.
    /// Number of [get record](/specs/search#tag/Records/operation/getObject) operations. -
    /// &#x60;partial_update_record_operations&#x60;. Number of [partially update
    /// records](/specs/search#tag/Records/operation/partialUpdateObject) operations. -
    /// &#x60;update_record_operations&#x60;. Number of [add or replace record by
    /// objectID](/specs/search#tag/Records/operation/addOrUpdateObject) operations.  **Synonym operations**  -
    /// &#x60;synonym_operations&#x60;. All synonym operations. - &#x60;total_synonym_operations&#x60;. Sum of all
    /// synonym
    /// operations. - &#x60;batch_synonym_operations&#x60;. Number of [save all
    /// synonyms](/specs/search#tag/Synonyms/operation/saveSynonyms) operations. - &#x60;clear_synonym_operations&#x60;.
    /// Number of [clear synonyms](/specs/search#tag/Synonyms/operation/clearSynonyms) operations. -
    /// &#x60;delete_synonym_operations&#x60;. Number of [delete
    /// synonym](/specs/search#tag/Synonyms/operation/deleteSynonym) operations. - &#x60;get_synonym_operations&#x60;.
    /// Number of [get synonym](/specs/search#tag/Synonyms/operation/getSynonym) operations. -
    /// &#x60;query_synonym_operations&#x60;. Number of [search
    /// synonyms](/specs/search#tag/Synonyms/operation/searchSynonyms) operations. -
    /// &#x60;update_synonym_operations&#x60;. Number of [save a
    /// synonym](/specs/search#tag/Synonyms/operation/saveSynonym) operations.  **Rule operations**  -
    /// &#x60;rule_operations&#x60;. All rule operations. - &#x60;total_rules_operations&#x60;. Sum of all rule
    /// operations. - &#x60;batch_rules_operations&#x60;. Number of [batch
    /// rules](/specs/search#tag/Rules/operation/saveRules) operations. - &#x60;clear_rules_operations&#x60;. Number of
    /// [delete rule](/specs/search#tag/Rules/operation/deleteRule) operations. - &#x60;delete_rules_operations&#x60;.
    /// Number of [clear rules](/specs/search#tag/Rules/operation/clearRules) operations. -
    /// &#x60;get_rules_operations&#x60;. Number of [get rule](/specs/search#tag/Rules/operation/getRule) operations. -
    /// &#x60;save_rules_operations&#x60;. Number of [save rule](/specs/search#operation/getIndexUsage) operations. -
    /// &#x60;search_rules_operations&#x60;. Number of [search rules](/specs/search#tag/Rules/operation/searchRules)
    /// operations.  **Total operations**  - &#x60;total_recommend_requests&#x60;. Number of [Recommend
    /// requests](https://www.algolia.com/doc/guides/algolia-ai/recommend/) - &#x60;total_write_operations&#x60;. Number
    /// of Write operations - &#x60;total_read_operations&#x60;. Number of read operations -
    /// &#x60;total_operations&#x60;.
    /// Sum of all operations  **Total Query Suggestions operations**  Query Suggestions operations are a subset of
    /// &#x60;total_search_operations&#x60;.  - &#x60;querysuggestions_total_search_operations&#x60;. Number of Query
    /// Suggestions search operations. - &#x60;querysuggestions_total_search_requests&#x60;. Number of Query Suggestions
    /// [search requests](https://support.algolia.com/hc/en-us/articles/4406981829777-How-does-Algolia-count-records-and-operations-).
    /// - &#x60;querysuggestions_total_acl_operations&#x60;. Sum of all Query Suggestions [ACL
    /// operations](#acl-operations). - &#x60;querysuggestions_total_indexing_operations&#x60;. Number of Query
    /// Suggestions [indexing operations](#indexing-operations). -
    /// &#x60;querysuggestions_total_records_operations&#x60;.
    /// Number of Query Suggestions [record operations](#record-operations). -
    /// &#x60;querysuggestions_total_synonym_operations&#x60;. Number of Query Suggestions [synonym
    /// operations](#synonym-operations). - &#x60;querysuggestions_total_rules_operations&#x60;. Number of Query
    /// Suggestions [Rule operations](#rule-operations). - &#x60;querysuggestions_total_write_operations&#x60;. Number
    /// of
    /// Query Suggestions Write operations. - &#x60;querysuggestions_total_read_operations&#x60;. Number of Query
    /// Suggestions Read operations. - &#x60;querysuggestions_total_operations&#x60;. Sum of all Query Suggestions
    /// operations.  **Processing time**  - &#x60;avg_processing_time&#x60;. Average processing time (in milliseconds).
    /// -
    /// &#x60;90p_processing_time&#x60;. 90th percentile of processing time (in milliseconds). -
    /// &#x60;99p_processing_time&#x60;. 99th percentile of processing time (in milliseconds). -
    /// &#x60;queries_above_last_ms_processing_time&#x60;. Number of queries that take one or more seconds to process.
    /// **Indices**  - &#x60;records&#x60;. Number of records. - &#x60;data_size&#x60;. The size of the records (in
    /// bytes). - &#x60;file_size&#x60;. The size of the records _and_ index metadata (in bytes).  **Maximum queries per
    /// second**  - &#x60;max_qps&#x60;. [Maximum queries per
    /// second](https://support.algolia.com/hc/en-us/articles/4406975224721) per server. - &#x60;region_max_qps&#x60;.
    /// Maximum queries per second per region. - &#x60;total_max_qps&#x60;. Maximum queries per second across all
    /// servers.
    /// **Used search capacity**  The following capacities are reported in percent:  - &#x60;used_search_capacity&#x60;.
    /// Maximum search capacity used per server. - &#x60;avg_used_search_capacity&#x60;. Average search capacity used
    /// per
    /// server. - &#x60;region_used_search_capacity&#x60;. Maximum search capacity used per region. -
    /// &#x60;region_avg_used_search_capacity&#x60;. Average search capacity used per region. -
    /// &#x60;total_used_search_capacity&#x60;. Maximum search capacity used for all servers. -
    /// &#x60;total_avg_used_search_capacity&#x60;. Average used search capacity for all servers.  **Degraded queries**
    /// Check the impact of [degraded queries](https://support.algolia.com/hc/en-us/articles/4406981934481).  -
    /// &#x60;degraded_queries_ssd_used_queries_impacted&#x60;. Percentage of degraded queries due to the Algolia search
    /// engine having to read from the server&#39;s SSD. - &#x60;degraded_queries_ssd_used_seconds_impacted&#x60;.
    /// Percentage of seconds affected by &#x60;ssd_used&#x60; degraded queries. -
    /// &#x60;degraded_queries_max_capacity_queries_impacted&#x60;. Percentage of degraded queries due to all search
    /// threads being used. - &#x60;degraded_queries_max_capacity_seconds_impacted&#x60;. Percentage of seconds affected
    /// by &#x60;max_capacity&#x60; degraded queries.
    /// - parameter indexName: (path) Name of the index on which to perform the operation.
    /// - parameter startDate: (query) Start date of the period to analyze, in &#x60;YYYY-MM-DD&#x60; format.
    /// - parameter endDate: (query) End date of the period to analyze, in &#x60;YYYY-MM-DD&#x60; format.
    /// - parameter granularity: (query) Granularity of the aggregated metrics.  - &#x60;hourly&#x60;: the maximum time
    /// range for hourly metrics is 7 days. - &#x60;daily&#x60;: the maximum time range for daily metrics is 365 days.
    /// (optional)
    /// - returns: GetUsage200Response
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open func getIndexUsage(
        statistic: Statistic,
        indexName: String,
        startDate: String,
        endDate: String,
        granularity: Granularity? = nil,
        requestOptions: RequestOptions? = nil
    ) async throws -> GetUsage200Response {
        let response: Response<GetUsage200Response> = try await getIndexUsageWithHTTPInfo(
            statistic: statistic,
            indexName: indexName,
            startDate: startDate,
            endDate: endDate,
            granularity: granularity,
            requestOptions: requestOptions
        )

        guard let body = response.body else {
            throw AlgoliaError.missingData
        }

        return body
    }

    // Retrieves the selected usage statistics for one index.
    //
    //
    // - parameter statistic: (path) Usage statistics to retrieve.  Use &#x60;*&#x60; to retrieve all usage metrics,
    // otherwise add one or more of the following metrics, separated by a comma.  **Search operations**  -
    // &#x60;search_operations&#x60;. All search operations. - &#x60;total_search_operations&#x60;: Sum of all search
    // operations. - &#x60;total_search_requests&#x60;: Sum of all [search requests](https://support.algolia.com/hc/en-us/articles/4406981829777-How-does-Algolia-count-records-and-operations-).
    //   The number of billed search requests is equal to this value minus
    // &#x60;querysuggestions_total_search_requests&#x60;. - &#x60;queries_operations&#x60;. Number of [single index
    // search](/specs/search#tag/Search/operation/searchSingleIndex) operations. - &#x60;multi_queries_operations&#x60;.
    // Number of [multi-index search](/specs/search#tag/Search/operation/search) operations.  **ACL operations**  -
    // &#x60;acl_operations&#x60;. All ACL operations. - &#x60;total_acl_operations&#x60;. Sum of all ACL operations. -
    // &#x60;get_api_keys_operations&#x60;. Number of [list API keys](/specs/search#tag/Api-Keys/operation/listApiKeys)
    // operations. - &#x60;get_api_key_operations&#x60;. Number of [get API key
    // permission](/specs/search#tag/Api-Keys/operation/getApiKey) operations. - &#x60;add_api_key_operations&#x60;.
    // Number of [create API key](/specs/search#tag/Api-Keys/operation/addApiKey) operations. -
    // &#x60;update_api_key_operations&#x60;. Number of [update API
    // key](/specs/search#tag/Api-Keys/operation/updateApiKey) operations. - &#x60;delete_api_key_operations&#x60;.
    // Number of [delete API key](/specs/search#tag/Api-Keys/operation/deleteApiKey) operations. -
    // &#x60;list_api_key_operations&#x60;. Number of list index API keys operations.  **Indexing operations**  -
    // &#x60;indexing_operations&#x60;. All indexing operations. - &#x60;total_indexing_operations&#x60;. Sum of all
    // indexing operations. - &#x60;browse_operations&#x60;. Number of [browse
    // index](/specs/search#tag/Search/operation/browse) operations. - &#x60;clear_index_operations&#x60;. Number of
    // [clear records](/specs/search#tag/Records/operation/clearObjects) operations. - &#x60;copy_move_operations&#x60;.
    // Number of [copy or move index](/specs/search#tag/Indices/operation/operationIndex) operations. -
    // &#x60;delete_index_operations&#x60;. Number of [delete index](/specs/search#tag/Indices/operation/deleteIndex)
    // operations. - &#x60;get_log_operations&#x60;. Number of [get logs](/specs/search#tag/Advanced/operation/getLogs)
    // operations. - &#x60;get_settings_operations&#x60;. Number of [get
    // settings](/specs/search#operation/getIndexUsage)
    // operations. - &#x60;set_settings_operations&#x60;. Number of [set
    // settings](/specs/search#tag/Indices/operation/setSettings) operations. - &#x60;list_indices_operations&#x60;.
    // Number of [list indices](/specs/search#tag/Indices/operation/listIndices) operations. -
    // &#x60;wait_task_operations&#x60;. Number of [wait](/specs/search#tag/Indices/operation/getTask) operations.
    // **Record operations**  - &#x60;record_operations&#x60;. All record operations. -
    // &#x60;total_records_operations&#x60;. Sum of all record operations. - &#x60;add_record_operations&#x60;. Number
    // of
    // [add or replace record](/specs/search#tag/Records/operation/saveObject) operations. -
    // &#x60;batch_operations&#x60;. Number of [batch indexing](/specs/search#tag/Records/operation/multipleBatch)
    // operations. - &#x60;delete_by_query_operations&#x60;. Number of [delete by
    // query](/specs/search#tag/Records/operation/deleteBy) operations. - &#x60;delete_record_operations&#x60;. Number
    // of
    // [delete record](/specs/search#tag/Records/operation/deleteObject) operations. -
    // &#x60;get_record_operations&#x60;.
    // Number of [get record](/specs/search#tag/Records/operation/getObject) operations. -
    // &#x60;partial_update_record_operations&#x60;. Number of [partially update
    // records](/specs/search#tag/Records/operation/partialUpdateObject) operations. -
    // &#x60;update_record_operations&#x60;. Number of [add or replace record by
    // objectID](/specs/search#tag/Records/operation/addOrUpdateObject) operations.  **Synonym operations**  -
    // &#x60;synonym_operations&#x60;. All synonym operations. - &#x60;total_synonym_operations&#x60;. Sum of all
    // synonym
    // operations. - &#x60;batch_synonym_operations&#x60;. Number of [save all
    // synonyms](/specs/search#tag/Synonyms/operation/saveSynonyms) operations. - &#x60;clear_synonym_operations&#x60;.
    // Number of [clear synonyms](/specs/search#tag/Synonyms/operation/clearSynonyms) operations. -
    // &#x60;delete_synonym_operations&#x60;. Number of [delete
    // synonym](/specs/search#tag/Synonyms/operation/deleteSynonym) operations. - &#x60;get_synonym_operations&#x60;.
    // Number of [get synonym](/specs/search#tag/Synonyms/operation/getSynonym) operations. -
    // &#x60;query_synonym_operations&#x60;. Number of [search
    // synonyms](/specs/search#tag/Synonyms/operation/searchSynonyms) operations. -
    // &#x60;update_synonym_operations&#x60;. Number of [save a
    // synonym](/specs/search#tag/Synonyms/operation/saveSynonym) operations.  **Rule operations**  -
    // &#x60;rule_operations&#x60;. All rule operations. - &#x60;total_rules_operations&#x60;. Sum of all rule
    // operations. - &#x60;batch_rules_operations&#x60;. Number of [batch
    // rules](/specs/search#tag/Rules/operation/saveRules) operations. - &#x60;clear_rules_operations&#x60;. Number of
    // [delete rule](/specs/search#tag/Rules/operation/deleteRule) operations. - &#x60;delete_rules_operations&#x60;.
    // Number of [clear rules](/specs/search#tag/Rules/operation/clearRules) operations. -
    // &#x60;get_rules_operations&#x60;. Number of [get rule](/specs/search#tag/Rules/operation/getRule) operations. -
    // &#x60;save_rules_operations&#x60;. Number of [save rule](/specs/search#operation/getIndexUsage) operations. -
    // &#x60;search_rules_operations&#x60;. Number of [search rules](/specs/search#tag/Rules/operation/searchRules)
    // operations.  **Total operations**  - &#x60;total_recommend_requests&#x60;. Number of [Recommend
    // requests](https://www.algolia.com/doc/guides/algolia-ai/recommend/) - &#x60;total_write_operations&#x60;. Number
    // of Write operations - &#x60;total_read_operations&#x60;. Number of read operations -
    // &#x60;total_operations&#x60;.
    // Sum of all operations  **Total Query Suggestions operations**  Query Suggestions operations are a subset of
    // &#x60;total_search_operations&#x60;.  - &#x60;querysuggestions_total_search_operations&#x60;. Number of Query
    // Suggestions search operations. - &#x60;querysuggestions_total_search_requests&#x60;. Number of Query Suggestions
    // [search requests](https://support.algolia.com/hc/en-us/articles/4406981829777-How-does-Algolia-count-records-and-operations-).
    // - &#x60;querysuggestions_total_acl_operations&#x60;. Sum of all Query Suggestions [ACL
    // operations](#acl-operations). - &#x60;querysuggestions_total_indexing_operations&#x60;. Number of Query
    // Suggestions [indexing operations](#indexing-operations). - &#x60;querysuggestions_total_records_operations&#x60;.
    // Number of Query Suggestions [record operations](#record-operations). -
    // &#x60;querysuggestions_total_synonym_operations&#x60;. Number of Query Suggestions [synonym
    // operations](#synonym-operations). - &#x60;querysuggestions_total_rules_operations&#x60;. Number of Query
    // Suggestions [Rule operations](#rule-operations). - &#x60;querysuggestions_total_write_operations&#x60;. Number of
    // Query Suggestions Write operations. - &#x60;querysuggestions_total_read_operations&#x60;. Number of Query
    // Suggestions Read operations. - &#x60;querysuggestions_total_operations&#x60;. Sum of all Query Suggestions
    // operations.  **Processing time**  - &#x60;avg_processing_time&#x60;. Average processing time (in milliseconds). -
    // &#x60;90p_processing_time&#x60;. 90th percentile of processing time (in milliseconds). -
    // &#x60;99p_processing_time&#x60;. 99th percentile of processing time (in milliseconds). -
    // &#x60;queries_above_last_ms_processing_time&#x60;. Number of queries that take one or more seconds to process.
    // **Indices**  - &#x60;records&#x60;. Number of records. - &#x60;data_size&#x60;. The size of the records (in
    // bytes). - &#x60;file_size&#x60;. The size of the records _and_ index metadata (in bytes).  **Maximum queries per
    // second**  - &#x60;max_qps&#x60;. [Maximum queries per
    // second](https://support.algolia.com/hc/en-us/articles/4406975224721) per server. - &#x60;region_max_qps&#x60;.
    // Maximum queries per second per region. - &#x60;total_max_qps&#x60;. Maximum queries per second across all
    // servers.
    // **Used search capacity**  The following capacities are reported in percent:  - &#x60;used_search_capacity&#x60;.
    // Maximum search capacity used per server. - &#x60;avg_used_search_capacity&#x60;. Average search capacity used per
    // server. - &#x60;region_used_search_capacity&#x60;. Maximum search capacity used per region. -
    // &#x60;region_avg_used_search_capacity&#x60;. Average search capacity used per region. -
    // &#x60;total_used_search_capacity&#x60;. Maximum search capacity used for all servers. -
    // &#x60;total_avg_used_search_capacity&#x60;. Average used search capacity for all servers.  **Degraded queries**
    // Check the impact of [degraded queries](https://support.algolia.com/hc/en-us/articles/4406981934481).  -
    // &#x60;degraded_queries_ssd_used_queries_impacted&#x60;. Percentage of degraded queries due to the Algolia search
    // engine having to read from the server&#39;s SSD. - &#x60;degraded_queries_ssd_used_seconds_impacted&#x60;.
    // Percentage of seconds affected by &#x60;ssd_used&#x60; degraded queries. -
    // &#x60;degraded_queries_max_capacity_queries_impacted&#x60;. Percentage of degraded queries due to all search
    // threads being used. - &#x60;degraded_queries_max_capacity_seconds_impacted&#x60;. Percentage of seconds affected
    // by &#x60;max_capacity&#x60; degraded queries.
    //
    // - parameter indexName: (path) Name of the index on which to perform the operation.
    //
    // - parameter startDate: (query) Start date of the period to analyze, in &#x60;YYYY-MM-DD&#x60; format.
    //
    // - parameter endDate: (query) End date of the period to analyze, in &#x60;YYYY-MM-DD&#x60; format.
    //
    // - parameter granularity: (query) Granularity of the aggregated metrics.  - &#x60;hourly&#x60;: the maximum time
    // range for hourly metrics is 7 days. - &#x60;daily&#x60;: the maximum time range for daily metrics is 365 days.
    // (optional)
    // - returns: RequestBuilder<GetUsage200Response>

    open func getIndexUsageWithHTTPInfo(
        statistic: Statistic,
        indexName: String,
        startDate: String,
        endDate: String,
        granularity: Granularity? = nil,
        requestOptions userRequestOptions: RequestOptions? = nil
    ) async throws -> Response<GetUsage200Response> {
        guard !indexName.isEmpty else {
            throw AlgoliaError.invalidArgument("indexName", "getIndexUsage")
        }

        guard !startDate.isEmpty else {
            throw AlgoliaError.invalidArgument("startDate", "getIndexUsage")
        }

        guard !endDate.isEmpty else {
            throw AlgoliaError.invalidArgument("endDate", "getIndexUsage")
        }

        var resourcePath = "/1/usage/{statistic}/{indexName}"
        let statisticPreEscape = "\(APIHelper.mapValueToPathItem(statistic))"
        let statisticPostEscape = statisticPreEscape
            .addingPercentEncoding(withAllowedCharacters: .urlPathAlgoliaAllowed) ?? ""
        resourcePath = resourcePath.replacingOccurrences(
            of: "{statistic}",
            with: statisticPostEscape,
            options: .literal,
            range: nil
        )
        let indexNamePreEscape = "\(APIHelper.mapValueToPathItem(indexName))"
        let indexNamePostEscape = indexNamePreEscape
            .addingPercentEncoding(withAllowedCharacters: .urlPathAlgoliaAllowed) ?? ""
        resourcePath = resourcePath.replacingOccurrences(
            of: "{indexName}",
            with: indexNamePostEscape,
            options: .literal,
            range: nil
        )
        let body: AnyCodable? = nil
        let queryParameters: [String: Any?] = [
            "startDate": startDate.encodeToJSON(),
            "endDate": endDate.encodeToJSON(),
            "granularity": granularity?.encodeToJSON(),
        ]

        let nillableHeaders: [String: Any?]? = nil

        let headers = APIHelper.rejectNilHeaders(nillableHeaders)

        return try await self.transporter.send(
            method: "GET",
            path: resourcePath,
            data: body,
            requestOptions: RequestOptions(headers: headers, queryParameters: queryParameters) + userRequestOptions
        )
    }

    /// - parameter statistic: (path) Usage statistics to retrieve.  Use &#x60;*&#x60; to retrieve all usage metrics,
    /// otherwise add one or more of the following metrics, separated by a comma.  **Search operations**  -
    /// &#x60;search_operations&#x60;. All search operations. - &#x60;total_search_operations&#x60;: Sum of all search
    /// operations. - &#x60;total_search_requests&#x60;: Sum of all [search requests](https://support.algolia.com/hc/en-us/articles/4406981829777-How-does-Algolia-count-records-and-operations-).
    ///   The number of billed search requests is equal to this value minus
    /// &#x60;querysuggestions_total_search_requests&#x60;. - &#x60;queries_operations&#x60;. Number of [single index
    /// search](/specs/search#tag/Search/operation/searchSingleIndex) operations. -
    /// &#x60;multi_queries_operations&#x60;.
    /// Number of [multi-index search](/specs/search#tag/Search/operation/search) operations.  **ACL operations**  -
    /// &#x60;acl_operations&#x60;. All ACL operations. - &#x60;total_acl_operations&#x60;. Sum of all ACL operations. -
    /// &#x60;get_api_keys_operations&#x60;. Number of [list API keys](/specs/search#tag/Api-Keys/operation/listApiKeys)
    /// operations. - &#x60;get_api_key_operations&#x60;. Number of [get API key
    /// permission](/specs/search#tag/Api-Keys/operation/getApiKey) operations. - &#x60;add_api_key_operations&#x60;.
    /// Number of [create API key](/specs/search#tag/Api-Keys/operation/addApiKey) operations. -
    /// &#x60;update_api_key_operations&#x60;. Number of [update API
    /// key](/specs/search#tag/Api-Keys/operation/updateApiKey) operations. - &#x60;delete_api_key_operations&#x60;.
    /// Number of [delete API key](/specs/search#tag/Api-Keys/operation/deleteApiKey) operations. -
    /// &#x60;list_api_key_operations&#x60;. Number of list index API keys operations.  **Indexing operations**  -
    /// &#x60;indexing_operations&#x60;. All indexing operations. - &#x60;total_indexing_operations&#x60;. Sum of all
    /// indexing operations. - &#x60;browse_operations&#x60;. Number of [browse
    /// index](/specs/search#tag/Search/operation/browse) operations. - &#x60;clear_index_operations&#x60;. Number of
    /// [clear records](/specs/search#tag/Records/operation/clearObjects) operations. -
    /// &#x60;copy_move_operations&#x60;.
    /// Number of [copy or move index](/specs/search#tag/Indices/operation/operationIndex) operations. -
    /// &#x60;delete_index_operations&#x60;. Number of [delete index](/specs/search#tag/Indices/operation/deleteIndex)
    /// operations. - &#x60;get_log_operations&#x60;. Number of [get logs](/specs/search#tag/Advanced/operation/getLogs)
    /// operations. - &#x60;get_settings_operations&#x60;. Number of [get
    /// settings](/specs/search#operation/getIndexUsage)
    /// operations. - &#x60;set_settings_operations&#x60;. Number of [set
    /// settings](/specs/search#tag/Indices/operation/setSettings) operations. - &#x60;list_indices_operations&#x60;.
    /// Number of [list indices](/specs/search#tag/Indices/operation/listIndices) operations. -
    /// &#x60;wait_task_operations&#x60;. Number of [wait](/specs/search#tag/Indices/operation/getTask) operations.
    /// **Record operations**  - &#x60;record_operations&#x60;. All record operations. -
    /// &#x60;total_records_operations&#x60;. Sum of all record operations. - &#x60;add_record_operations&#x60;. Number
    /// of
    /// [add or replace record](/specs/search#tag/Records/operation/saveObject) operations. -
    /// &#x60;batch_operations&#x60;. Number of [batch indexing](/specs/search#tag/Records/operation/multipleBatch)
    /// operations. - &#x60;delete_by_query_operations&#x60;. Number of [delete by
    /// query](/specs/search#tag/Records/operation/deleteBy) operations. - &#x60;delete_record_operations&#x60;. Number
    /// of
    /// [delete record](/specs/search#tag/Records/operation/deleteObject) operations. -
    /// &#x60;get_record_operations&#x60;.
    /// Number of [get record](/specs/search#tag/Records/operation/getObject) operations. -
    /// &#x60;partial_update_record_operations&#x60;. Number of [partially update
    /// records](/specs/search#tag/Records/operation/partialUpdateObject) operations. -
    /// &#x60;update_record_operations&#x60;. Number of [add or replace record by
    /// objectID](/specs/search#tag/Records/operation/addOrUpdateObject) operations.  **Synonym operations**  -
    /// &#x60;synonym_operations&#x60;. All synonym operations. - &#x60;total_synonym_operations&#x60;. Sum of all
    /// synonym
    /// operations. - &#x60;batch_synonym_operations&#x60;. Number of [save all
    /// synonyms](/specs/search#tag/Synonyms/operation/saveSynonyms) operations. - &#x60;clear_synonym_operations&#x60;.
    /// Number of [clear synonyms](/specs/search#tag/Synonyms/operation/clearSynonyms) operations. -
    /// &#x60;delete_synonym_operations&#x60;. Number of [delete
    /// synonym](/specs/search#tag/Synonyms/operation/deleteSynonym) operations. - &#x60;get_synonym_operations&#x60;.
    /// Number of [get synonym](/specs/search#tag/Synonyms/operation/getSynonym) operations. -
    /// &#x60;query_synonym_operations&#x60;. Number of [search
    /// synonyms](/specs/search#tag/Synonyms/operation/searchSynonyms) operations. -
    /// &#x60;update_synonym_operations&#x60;. Number of [save a
    /// synonym](/specs/search#tag/Synonyms/operation/saveSynonym) operations.  **Rule operations**  -
    /// &#x60;rule_operations&#x60;. All rule operations. - &#x60;total_rules_operations&#x60;. Sum of all rule
    /// operations. - &#x60;batch_rules_operations&#x60;. Number of [batch
    /// rules](/specs/search#tag/Rules/operation/saveRules) operations. - &#x60;clear_rules_operations&#x60;. Number of
    /// [delete rule](/specs/search#tag/Rules/operation/deleteRule) operations. - &#x60;delete_rules_operations&#x60;.
    /// Number of [clear rules](/specs/search#tag/Rules/operation/clearRules) operations. -
    /// &#x60;get_rules_operations&#x60;. Number of [get rule](/specs/search#tag/Rules/operation/getRule) operations. -
    /// &#x60;save_rules_operations&#x60;. Number of [save rule](/specs/search#operation/getIndexUsage) operations. -
    /// &#x60;search_rules_operations&#x60;. Number of [search rules](/specs/search#tag/Rules/operation/searchRules)
    /// operations.  **Total operations**  - &#x60;total_recommend_requests&#x60;. Number of [Recommend
    /// requests](https://www.algolia.com/doc/guides/algolia-ai/recommend/) - &#x60;total_write_operations&#x60;. Number
    /// of Write operations - &#x60;total_read_operations&#x60;. Number of read operations -
    /// &#x60;total_operations&#x60;.
    /// Sum of all operations  **Total Query Suggestions operations**  Query Suggestions operations are a subset of
    /// &#x60;total_search_operations&#x60;.  - &#x60;querysuggestions_total_search_operations&#x60;. Number of Query
    /// Suggestions search operations. - &#x60;querysuggestions_total_search_requests&#x60;. Number of Query Suggestions
    /// [search requests](https://support.algolia.com/hc/en-us/articles/4406981829777-How-does-Algolia-count-records-and-operations-).
    /// - &#x60;querysuggestions_total_acl_operations&#x60;. Sum of all Query Suggestions [ACL
    /// operations](#acl-operations). - &#x60;querysuggestions_total_indexing_operations&#x60;. Number of Query
    /// Suggestions [indexing operations](#indexing-operations). -
    /// &#x60;querysuggestions_total_records_operations&#x60;.
    /// Number of Query Suggestions [record operations](#record-operations). -
    /// &#x60;querysuggestions_total_synonym_operations&#x60;. Number of Query Suggestions [synonym
    /// operations](#synonym-operations). - &#x60;querysuggestions_total_rules_operations&#x60;. Number of Query
    /// Suggestions [Rule operations](#rule-operations). - &#x60;querysuggestions_total_write_operations&#x60;. Number
    /// of
    /// Query Suggestions Write operations. - &#x60;querysuggestions_total_read_operations&#x60;. Number of Query
    /// Suggestions Read operations. - &#x60;querysuggestions_total_operations&#x60;. Sum of all Query Suggestions
    /// operations.  **Processing time**  - &#x60;avg_processing_time&#x60;. Average processing time (in milliseconds).
    /// -
    /// &#x60;90p_processing_time&#x60;. 90th percentile of processing time (in milliseconds). -
    /// &#x60;99p_processing_time&#x60;. 99th percentile of processing time (in milliseconds). -
    /// &#x60;queries_above_last_ms_processing_time&#x60;. Number of queries that take one or more seconds to process.
    /// **Indices**  - &#x60;records&#x60;. Number of records. - &#x60;data_size&#x60;. The size of the records (in
    /// bytes). - &#x60;file_size&#x60;. The size of the records _and_ index metadata (in bytes).  **Maximum queries per
    /// second**  - &#x60;max_qps&#x60;. [Maximum queries per
    /// second](https://support.algolia.com/hc/en-us/articles/4406975224721) per server. - &#x60;region_max_qps&#x60;.
    /// Maximum queries per second per region. - &#x60;total_max_qps&#x60;. Maximum queries per second across all
    /// servers.
    /// **Used search capacity**  The following capacities are reported in percent:  - &#x60;used_search_capacity&#x60;.
    /// Maximum search capacity used per server. - &#x60;avg_used_search_capacity&#x60;. Average search capacity used
    /// per
    /// server. - &#x60;region_used_search_capacity&#x60;. Maximum search capacity used per region. -
    /// &#x60;region_avg_used_search_capacity&#x60;. Average search capacity used per region. -
    /// &#x60;total_used_search_capacity&#x60;. Maximum search capacity used for all servers. -
    /// &#x60;total_avg_used_search_capacity&#x60;. Average used search capacity for all servers.  **Degraded queries**
    /// Check the impact of [degraded queries](https://support.algolia.com/hc/en-us/articles/4406981934481).  -
    /// &#x60;degraded_queries_ssd_used_queries_impacted&#x60;. Percentage of degraded queries due to the Algolia search
    /// engine having to read from the server&#39;s SSD. - &#x60;degraded_queries_ssd_used_seconds_impacted&#x60;.
    /// Percentage of seconds affected by &#x60;ssd_used&#x60; degraded queries. -
    /// &#x60;degraded_queries_max_capacity_queries_impacted&#x60;. Percentage of degraded queries due to all search
    /// threads being used. - &#x60;degraded_queries_max_capacity_seconds_impacted&#x60;. Percentage of seconds affected
    /// by &#x60;max_capacity&#x60; degraded queries.
    /// - parameter startDate: (query) Start date of the period to analyze, in &#x60;YYYY-MM-DD&#x60; format.
    /// - parameter endDate: (query) End date of the period to analyze, in &#x60;YYYY-MM-DD&#x60; format.
    /// - parameter granularity: (query) Granularity of the aggregated metrics.  - &#x60;hourly&#x60;: the maximum time
    /// range for hourly metrics is 7 days. - &#x60;daily&#x60;: the maximum time range for daily metrics is 365 days.
    /// (optional)
    /// - returns: GetUsage200Response
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open func getUsage(
        statistic: Statistic,
        startDate: String,
        endDate: String,
        granularity: Granularity? = nil,
        requestOptions: RequestOptions? = nil
    ) async throws -> GetUsage200Response {
        let response: Response<GetUsage200Response> = try await getUsageWithHTTPInfo(
            statistic: statistic,
            startDate: startDate,
            endDate: endDate,
            granularity: granularity,
            requestOptions: requestOptions
        )

        guard let body = response.body else {
            throw AlgoliaError.missingData
        }

        return body
    }

    // Retrieves usage statistics evaluated over a specified period.
    //
    //
    // - parameter statistic: (path) Usage statistics to retrieve.  Use &#x60;*&#x60; to retrieve all usage metrics,
    // otherwise add one or more of the following metrics, separated by a comma.  **Search operations**  -
    // &#x60;search_operations&#x60;. All search operations. - &#x60;total_search_operations&#x60;: Sum of all search
    // operations. - &#x60;total_search_requests&#x60;: Sum of all [search requests](https://support.algolia.com/hc/en-us/articles/4406981829777-How-does-Algolia-count-records-and-operations-).
    //   The number of billed search requests is equal to this value minus
    // &#x60;querysuggestions_total_search_requests&#x60;. - &#x60;queries_operations&#x60;. Number of [single index
    // search](/specs/search#tag/Search/operation/searchSingleIndex) operations. - &#x60;multi_queries_operations&#x60;.
    // Number of [multi-index search](/specs/search#tag/Search/operation/search) operations.  **ACL operations**  -
    // &#x60;acl_operations&#x60;. All ACL operations. - &#x60;total_acl_operations&#x60;. Sum of all ACL operations. -
    // &#x60;get_api_keys_operations&#x60;. Number of [list API keys](/specs/search#tag/Api-Keys/operation/listApiKeys)
    // operations. - &#x60;get_api_key_operations&#x60;. Number of [get API key
    // permission](/specs/search#tag/Api-Keys/operation/getApiKey) operations. - &#x60;add_api_key_operations&#x60;.
    // Number of [create API key](/specs/search#tag/Api-Keys/operation/addApiKey) operations. -
    // &#x60;update_api_key_operations&#x60;. Number of [update API
    // key](/specs/search#tag/Api-Keys/operation/updateApiKey) operations. - &#x60;delete_api_key_operations&#x60;.
    // Number of [delete API key](/specs/search#tag/Api-Keys/operation/deleteApiKey) operations. -
    // &#x60;list_api_key_operations&#x60;. Number of list index API keys operations.  **Indexing operations**  -
    // &#x60;indexing_operations&#x60;. All indexing operations. - &#x60;total_indexing_operations&#x60;. Sum of all
    // indexing operations. - &#x60;browse_operations&#x60;. Number of [browse
    // index](/specs/search#tag/Search/operation/browse) operations. - &#x60;clear_index_operations&#x60;. Number of
    // [clear records](/specs/search#tag/Records/operation/clearObjects) operations. - &#x60;copy_move_operations&#x60;.
    // Number of [copy or move index](/specs/search#tag/Indices/operation/operationIndex) operations. -
    // &#x60;delete_index_operations&#x60;. Number of [delete index](/specs/search#tag/Indices/operation/deleteIndex)
    // operations. - &#x60;get_log_operations&#x60;. Number of [get logs](/specs/search#tag/Advanced/operation/getLogs)
    // operations. - &#x60;get_settings_operations&#x60;. Number of [get
    // settings](/specs/search#operation/getIndexUsage)
    // operations. - &#x60;set_settings_operations&#x60;. Number of [set
    // settings](/specs/search#tag/Indices/operation/setSettings) operations. - &#x60;list_indices_operations&#x60;.
    // Number of [list indices](/specs/search#tag/Indices/operation/listIndices) operations. -
    // &#x60;wait_task_operations&#x60;. Number of [wait](/specs/search#tag/Indices/operation/getTask) operations.
    // **Record operations**  - &#x60;record_operations&#x60;. All record operations. -
    // &#x60;total_records_operations&#x60;. Sum of all record operations. - &#x60;add_record_operations&#x60;. Number
    // of
    // [add or replace record](/specs/search#tag/Records/operation/saveObject) operations. -
    // &#x60;batch_operations&#x60;. Number of [batch indexing](/specs/search#tag/Records/operation/multipleBatch)
    // operations. - &#x60;delete_by_query_operations&#x60;. Number of [delete by
    // query](/specs/search#tag/Records/operation/deleteBy) operations. - &#x60;delete_record_operations&#x60;. Number
    // of
    // [delete record](/specs/search#tag/Records/operation/deleteObject) operations. -
    // &#x60;get_record_operations&#x60;.
    // Number of [get record](/specs/search#tag/Records/operation/getObject) operations. -
    // &#x60;partial_update_record_operations&#x60;. Number of [partially update
    // records](/specs/search#tag/Records/operation/partialUpdateObject) operations. -
    // &#x60;update_record_operations&#x60;. Number of [add or replace record by
    // objectID](/specs/search#tag/Records/operation/addOrUpdateObject) operations.  **Synonym operations**  -
    // &#x60;synonym_operations&#x60;. All synonym operations. - &#x60;total_synonym_operations&#x60;. Sum of all
    // synonym
    // operations. - &#x60;batch_synonym_operations&#x60;. Number of [save all
    // synonyms](/specs/search#tag/Synonyms/operation/saveSynonyms) operations. - &#x60;clear_synonym_operations&#x60;.
    // Number of [clear synonyms](/specs/search#tag/Synonyms/operation/clearSynonyms) operations. -
    // &#x60;delete_synonym_operations&#x60;. Number of [delete
    // synonym](/specs/search#tag/Synonyms/operation/deleteSynonym) operations. - &#x60;get_synonym_operations&#x60;.
    // Number of [get synonym](/specs/search#tag/Synonyms/operation/getSynonym) operations. -
    // &#x60;query_synonym_operations&#x60;. Number of [search
    // synonyms](/specs/search#tag/Synonyms/operation/searchSynonyms) operations. -
    // &#x60;update_synonym_operations&#x60;. Number of [save a
    // synonym](/specs/search#tag/Synonyms/operation/saveSynonym) operations.  **Rule operations**  -
    // &#x60;rule_operations&#x60;. All rule operations. - &#x60;total_rules_operations&#x60;. Sum of all rule
    // operations. - &#x60;batch_rules_operations&#x60;. Number of [batch
    // rules](/specs/search#tag/Rules/operation/saveRules) operations. - &#x60;clear_rules_operations&#x60;. Number of
    // [delete rule](/specs/search#tag/Rules/operation/deleteRule) operations. - &#x60;delete_rules_operations&#x60;.
    // Number of [clear rules](/specs/search#tag/Rules/operation/clearRules) operations. -
    // &#x60;get_rules_operations&#x60;. Number of [get rule](/specs/search#tag/Rules/operation/getRule) operations. -
    // &#x60;save_rules_operations&#x60;. Number of [save rule](/specs/search#operation/getIndexUsage) operations. -
    // &#x60;search_rules_operations&#x60;. Number of [search rules](/specs/search#tag/Rules/operation/searchRules)
    // operations.  **Total operations**  - &#x60;total_recommend_requests&#x60;. Number of [Recommend
    // requests](https://www.algolia.com/doc/guides/algolia-ai/recommend/) - &#x60;total_write_operations&#x60;. Number
    // of Write operations - &#x60;total_read_operations&#x60;. Number of read operations -
    // &#x60;total_operations&#x60;.
    // Sum of all operations  **Total Query Suggestions operations**  Query Suggestions operations are a subset of
    // &#x60;total_search_operations&#x60;.  - &#x60;querysuggestions_total_search_operations&#x60;. Number of Query
    // Suggestions search operations. - &#x60;querysuggestions_total_search_requests&#x60;. Number of Query Suggestions
    // [search requests](https://support.algolia.com/hc/en-us/articles/4406981829777-How-does-Algolia-count-records-and-operations-).
    // - &#x60;querysuggestions_total_acl_operations&#x60;. Sum of all Query Suggestions [ACL
    // operations](#acl-operations). - &#x60;querysuggestions_total_indexing_operations&#x60;. Number of Query
    // Suggestions [indexing operations](#indexing-operations). - &#x60;querysuggestions_total_records_operations&#x60;.
    // Number of Query Suggestions [record operations](#record-operations). -
    // &#x60;querysuggestions_total_synonym_operations&#x60;. Number of Query Suggestions [synonym
    // operations](#synonym-operations). - &#x60;querysuggestions_total_rules_operations&#x60;. Number of Query
    // Suggestions [Rule operations](#rule-operations). - &#x60;querysuggestions_total_write_operations&#x60;. Number of
    // Query Suggestions Write operations. - &#x60;querysuggestions_total_read_operations&#x60;. Number of Query
    // Suggestions Read operations. - &#x60;querysuggestions_total_operations&#x60;. Sum of all Query Suggestions
    // operations.  **Processing time**  - &#x60;avg_processing_time&#x60;. Average processing time (in milliseconds). -
    // &#x60;90p_processing_time&#x60;. 90th percentile of processing time (in milliseconds). -
    // &#x60;99p_processing_time&#x60;. 99th percentile of processing time (in milliseconds). -
    // &#x60;queries_above_last_ms_processing_time&#x60;. Number of queries that take one or more seconds to process.
    // **Indices**  - &#x60;records&#x60;. Number of records. - &#x60;data_size&#x60;. The size of the records (in
    // bytes). - &#x60;file_size&#x60;. The size of the records _and_ index metadata (in bytes).  **Maximum queries per
    // second**  - &#x60;max_qps&#x60;. [Maximum queries per
    // second](https://support.algolia.com/hc/en-us/articles/4406975224721) per server. - &#x60;region_max_qps&#x60;.
    // Maximum queries per second per region. - &#x60;total_max_qps&#x60;. Maximum queries per second across all
    // servers.
    // **Used search capacity**  The following capacities are reported in percent:  - &#x60;used_search_capacity&#x60;.
    // Maximum search capacity used per server. - &#x60;avg_used_search_capacity&#x60;. Average search capacity used per
    // server. - &#x60;region_used_search_capacity&#x60;. Maximum search capacity used per region. -
    // &#x60;region_avg_used_search_capacity&#x60;. Average search capacity used per region. -
    // &#x60;total_used_search_capacity&#x60;. Maximum search capacity used for all servers. -
    // &#x60;total_avg_used_search_capacity&#x60;. Average used search capacity for all servers.  **Degraded queries**
    // Check the impact of [degraded queries](https://support.algolia.com/hc/en-us/articles/4406981934481).  -
    // &#x60;degraded_queries_ssd_used_queries_impacted&#x60;. Percentage of degraded queries due to the Algolia search
    // engine having to read from the server&#39;s SSD. - &#x60;degraded_queries_ssd_used_seconds_impacted&#x60;.
    // Percentage of seconds affected by &#x60;ssd_used&#x60; degraded queries. -
    // &#x60;degraded_queries_max_capacity_queries_impacted&#x60;. Percentage of degraded queries due to all search
    // threads being used. - &#x60;degraded_queries_max_capacity_seconds_impacted&#x60;. Percentage of seconds affected
    // by &#x60;max_capacity&#x60; degraded queries.
    //
    // - parameter startDate: (query) Start date of the period to analyze, in &#x60;YYYY-MM-DD&#x60; format.
    //
    // - parameter endDate: (query) End date of the period to analyze, in &#x60;YYYY-MM-DD&#x60; format.
    //
    // - parameter granularity: (query) Granularity of the aggregated metrics.  - &#x60;hourly&#x60;: the maximum time
    // range for hourly metrics is 7 days. - &#x60;daily&#x60;: the maximum time range for daily metrics is 365 days.
    // (optional)
    // - returns: RequestBuilder<GetUsage200Response>

    open func getUsageWithHTTPInfo(
        statistic: Statistic,
        startDate: String,
        endDate: String,
        granularity: Granularity? = nil,
        requestOptions userRequestOptions: RequestOptions? = nil
    ) async throws -> Response<GetUsage200Response> {
        guard !startDate.isEmpty else {
            throw AlgoliaError.invalidArgument("startDate", "getUsage")
        }

        guard !endDate.isEmpty else {
            throw AlgoliaError.invalidArgument("endDate", "getUsage")
        }

        var resourcePath = "/1/usage/{statistic}"
        let statisticPreEscape = "\(APIHelper.mapValueToPathItem(statistic))"
        let statisticPostEscape = statisticPreEscape
            .addingPercentEncoding(withAllowedCharacters: .urlPathAlgoliaAllowed) ?? ""
        resourcePath = resourcePath.replacingOccurrences(
            of: "{statistic}",
            with: statisticPostEscape,
            options: .literal,
            range: nil
        )
        let body: AnyCodable? = nil
        let queryParameters: [String: Any?] = [
            "startDate": startDate.encodeToJSON(),
            "endDate": endDate.encodeToJSON(),
            "granularity": granularity?.encodeToJSON(),
        ]

        let nillableHeaders: [String: Any?]? = nil

        let headers = APIHelper.rejectNilHeaders(nillableHeaders)

        return try await self.transporter.send(
            method: "GET",
            path: resourcePath,
            data: body,
            requestOptions: RequestOptions(headers: headers, queryParameters: queryParameters) + userRequestOptions
        )
    }
}
