// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on
// https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import Foundation
#if canImport(Core)
    import Core
#endif

public struct GetUsage400ResponseError: Codable, JSONEncodable {
    public var code: String?
    public var message: String?
    public var errors: [GetUsage400ResponseErrorErrorsInner]?

    public init(code: String? = nil, message: String? = nil, errors: [GetUsage400ResponseErrorErrorsInner]? = nil) {
        self.code = code
        self.message = message
        self.errors = errors
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case code
        case message
        case errors
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(self.code, forKey: .code)
        try container.encodeIfPresent(self.message, forKey: .message)
        try container.encodeIfPresent(self.errors, forKey: .errors)
    }
}

extension GetUsage400ResponseError: Equatable {
    public static func ==(lhs: GetUsage400ResponseError, rhs: GetUsage400ResponseError) -> Bool {
        lhs.code == rhs.code &&
            lhs.message == rhs.message &&
            lhs.errors == rhs.errors
    }
}

extension GetUsage400ResponseError: Hashable {
    public func hash(into hasher: inout Hasher) {
        hasher.combine(self.code?.hashValue)
        hasher.combine(self.message?.hashValue)
        hasher.combine(self.errors?.hashValue)
    }
}
