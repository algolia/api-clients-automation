/** Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT. */
package com.algolia.client.model.recommend

import com.algolia.client.exception.AlgoliaClientException
import com.algolia.client.extensions.internal.*
import kotlinx.serialization.*
import kotlinx.serialization.builtins.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*
import kotlinx.serialization.json.*
import kotlin.jvm.JvmInline

/**
 * Removes stop (common) words from the query before executing it. `removeStopWords` is used in conjunction with the `queryLanguages` setting. _list_: language ISO codes for which stop words should be enabled. This list will override any values that you may have set in `queryLanguages`. _true_: enables the stop words feature, ensuring that stop words are removed from consideration in a search. The languages supported here are either [every language](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/handling-natural-languages-nlp/in-depth/supported-languages/) (this is the default) or those set by `queryLanguages`. _false_: turns off the stop words feature, allowing stop words to be taken into account in a search.
 *
 * Implementations:
 * - [Boolean] - *[RemoveStopWords.of]*
 * - [List<String>] - *[RemoveStopWords.of]*
 */
@Serializable(RemoveStopWordsSerializer::class)
public sealed interface RemoveStopWords {
  @Serializable
  @JvmInline
  public value class ListOfStringValue(public val value: List<String>) : RemoveStopWords

  @Serializable
  @JvmInline
  public value class BooleanValue(public val value: Boolean) : RemoveStopWords

  public companion object {

    public fun of(value: List<String>): RemoveStopWords {
      return ListOfStringValue(value)
    }
    public fun of(value: Boolean): RemoveStopWords {
      return BooleanValue(value)
    }
  }
}

internal class RemoveStopWordsSerializer : JsonContentPolymorphicSerializer<RemoveStopWords>(RemoveStopWords::class) {
  override fun selectDeserializer(element: JsonElement): DeserializationStrategy<RemoveStopWords> {
    return when {
      element.isJsonArrayOfPrimitives -> RemoveStopWords.ListOfStringValue.serializer()
      element.isBoolean -> RemoveStopWords.BooleanValue.serializer()
      else -> throw AlgoliaClientException("Failed to deserialize json element: $element")
    }
  }
}
