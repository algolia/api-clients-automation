/** Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT. */
package com.algolia.client.model.search

import com.algolia.client.exception.AlgoliaClientException
import com.algolia.client.extensions.internal.*
import kotlinx.serialization.*
import kotlinx.serialization.builtins.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*
import kotlinx.serialization.json.*
import kotlin.jvm.JvmInline

/**
 * When providing a string, it replaces the entire query string. When providing an object, it describes incremental edits to be made to the query string (but you can't do both).
 *
 * Implementations:
 * - [ConsequenceQueryObject]
 * - [String] - *[ConsequenceQuery.of]*
 */
@Serializable(ConsequenceQuerySerializer::class)
public sealed interface ConsequenceQuery {
  @Serializable
  @JvmInline
  public value class StringValue(public val value: String) : ConsequenceQuery

  public companion object {

    public fun of(value: String): ConsequenceQuery {
      return StringValue(value)
    }
  }
}

internal class ConsequenceQuerySerializer : JsonContentPolymorphicSerializer<ConsequenceQuery>(ConsequenceQuery::class) {
  override fun selectDeserializer(element: JsonElement): DeserializationStrategy<ConsequenceQuery> {
    return when {
      element is JsonObject -> ConsequenceQueryObject.serializer()
      element.isString -> ConsequenceQuery.StringValue.serializer()
      else -> throw AlgoliaClientException("Failed to deserialize json element: $element")
    }
  }
}
