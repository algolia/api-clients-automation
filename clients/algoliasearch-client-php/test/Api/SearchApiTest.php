<?php
/**
 * SearchApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  Algolia\AlgoliaSearch
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Search API
 *
 * API powering the Search feature of Algolia.
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.3.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Algolia\AlgoliaSearch\Test\Api;

use \Algolia\AlgoliaSearch\Configuration;
use \Algolia\AlgoliaSearch\ApiException;
use \Algolia\AlgoliaSearch\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * SearchApiTest Class Doc Comment
 *
 * @category Class
 * @package  Algolia\AlgoliaSearch
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class SearchApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addApiKey
     *
     * Create a new API key..
     *
     */
    public function testAddApiKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addOrUpdateObject
     *
     * Add or replace an object with a given object ID..
     *
     */
    public function testAddOrUpdateObject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for appendSource
     *
     * .
     *
     */
    public function testAppendSource()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for assignUserId
     *
     * Assign or Move userID.
     *
     */
    public function testAssignUserId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for batch
     *
     * .
     *
     */
    public function testBatch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for batchAssignUserIds
     *
     * Batch assign userIDs.
     *
     */
    public function testBatchAssignUserIds()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for batchDictionaryEntries
     *
     * Send a batch of dictionary entries..
     *
     */
    public function testBatchDictionaryEntries()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for batchRules
     *
     * Batch Rules..
     *
     */
    public function testBatchRules()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for browse
     *
     * Retrieve all index content..
     *
     */
    public function testBrowse()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for clearAllSynonyms
     *
     * Clear all synonyms..
     *
     */
    public function testClearAllSynonyms()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for clearObjects
     *
     * clear all objects from an index..
     *
     */
    public function testClearObjects()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for clearRules
     *
     * Clear Rules..
     *
     */
    public function testClearRules()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteApiKey
     *
     * Delete an API key..
     *
     */
    public function testDeleteApiKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteBy
     *
     * Delete all records matching the query..
     *
     */
    public function testDeleteBy()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteIndex
     *
     * Delete index..
     *
     */
    public function testDeleteIndex()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteObject
     *
     * Delete object..
     *
     */
    public function testDeleteObject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteRule
     *
     * Delete a rule..
     *
     */
    public function testDeleteRule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteSource
     *
     * .
     *
     */
    public function testDeleteSource()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteSynonym
     *
     * Delete synonym..
     *
     */
    public function testDeleteSynonym()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getApiKey
     *
     * Get an API key..
     *
     */
    public function testGetApiKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDictionaryLanguages
     *
     * List dictionaries supported per language..
     *
     */
    public function testGetDictionaryLanguages()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDictionarySettings
     *
     * Retrieve dictionaries settings. The API stores languages whose standard entries are disabled. Fetch settings does not return false values..
     *
     */
    public function testGetDictionarySettings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getLogs
     *
     * .
     *
     */
    public function testGetLogs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getObject
     *
     * Retrieve one object from the index..
     *
     */
    public function testGetObject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getObjects
     *
     * Retrieve one or more objects..
     *
     */
    public function testGetObjects()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getRule
     *
     * Get a rule..
     *
     */
    public function testGetRule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSettings
     *
     * .
     *
     */
    public function testGetSettings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSources
     *
     * .
     *
     */
    public function testGetSources()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSynonym
     *
     * Get synonym..
     *
     */
    public function testGetSynonym()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTask
     *
     * .
     *
     */
    public function testGetTask()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTopUserIds
     *
     * Get top userID.
     *
     */
    public function testGetTopUserIds()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getUserId
     *
     * Get userID.
     *
     */
    public function testGetUserId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for hasPendingMappings
     *
     * Has pending mappings.
     *
     */
    public function testHasPendingMappings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listApiKeys
     *
     * Get the full list of API Keys..
     *
     */
    public function testListApiKeys()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listClusters
     *
     * List clusters.
     *
     */
    public function testListClusters()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listIndices
     *
     * List existing indexes..
     *
     */
    public function testListIndices()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listUserIds
     *
     * List userIDs.
     *
     */
    public function testListUserIds()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for multipleBatch
     *
     * .
     *
     */
    public function testMultipleBatch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for multipleQueries
     *
     * .
     *
     */
    public function testMultipleQueries()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationIndex
     *
     * Copy/move index..
     *
     */
    public function testOperationIndex()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for partialUpdateObject
     *
     * Partially update an object..
     *
     */
    public function testPartialUpdateObject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeUserId
     *
     * Remove userID.
     *
     */
    public function testRemoveUserId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for replaceSources
     *
     * .
     *
     */
    public function testReplaceSources()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restoreApiKey
     *
     * Restore an API key..
     *
     */
    public function testRestoreApiKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for saveObject
     *
     * .
     *
     */
    public function testSaveObject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for saveRule
     *
     * Save/Update a rule..
     *
     */
    public function testSaveRule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for saveSynonym
     *
     * Save synonym..
     *
     */
    public function testSaveSynonym()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for saveSynonyms
     *
     * Save a batch of synonyms..
     *
     */
    public function testSaveSynonyms()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for search
     *
     * .
     *
     */
    public function testSearch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for searchDictionaryEntries
     *
     * Search the dictionary entries..
     *
     */
    public function testSearchDictionaryEntries()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for searchForFacetValues
     *
     * Search for values of a given facet.
     *
     */
    public function testSearchForFacetValues()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for searchRules
     *
     * Search for rules..
     *
     */
    public function testSearchRules()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for searchSynonyms
     *
     * Get all synonyms that match a query..
     *
     */
    public function testSearchSynonyms()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for searchUserIds
     *
     * Search userID.
     *
     */
    public function testSearchUserIds()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setDictionarySettings
     *
     * Set dictionary settings..
     *
     */
    public function testSetDictionarySettings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setSettings
     *
     * .
     *
     */
    public function testSetSettings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateApiKey
     *
     * Update an API key..
     *
     */
    public function testUpdateApiKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
