/** A/B Testing API API powering the A/B Testing feature of Algolia.
  *
  * The version of the OpenAPI document: 1.0.0
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package algoliasearch.abtesting

/** Variant
  *
  * @param addToCartCount
  *   Number of add-to-cart events for this variant.
  * @param addToCartRate
  *   Variant's [add-to-cart
  *   rate](https://www.algolia.com/doc/guides/search-analytics/concepts/metrics/#add-to-cart-rate).
  * @param averageClickPosition
  *   Variant's [average click
  *   position](https://www.algolia.com/doc/guides/search-analytics/concepts/metrics/#click-position).
  * @param clickCount
  *   Number of click events for this variant.
  * @param clickThroughRate
  *   Variant's [click-through
  *   rate](https://www.algolia.com/doc/guides/search-analytics/concepts/metrics/#click-through-rate).
  * @param conversionCount
  *   Number of click events for this variant.
  * @param conversionRate
  *   Variant's [conversion
  *   rate](https://www.algolia.com/doc/guides/search-analytics/concepts/metrics/#conversion-rate).
  * @param currencies
  *   A/B test currencies.
  * @param description
  *   A/B test description.
  * @param estimatedSampleSize
  *   The estimated number of searches that will need to be run to achieve the desired confidence level and statistical
  *   power. A `minimumDetectableEffect` must be set in the `configuration` object for this to be used.
  * @param index
  *   A/B test index.
  * @param noResultCount
  *   Number of [searches without
  *   results](https://www.algolia.com/doc/guides/search-analytics/concepts/metrics/#searches-without-results) for that
  *   variant.
  * @param purchaseCount
  *   Number of purchase events for this variant.
  * @param purchaseRate
  *   Variant's [purchase rate](https://www.algolia.com/doc/guides/search-analytics/concepts/metrics/#purchase-rate).
  * @param searchCount
  *   Number of searches carried out during the A/B test.
  * @param trackedSearchCount
  *   Number of tracked searches. This is the number of search requests where the `clickAnalytics` parameter is `true`.
  * @param trafficPercentage
  *   A/B test traffic percentage.
  * @param userCount
  *   Number of users during the A/B test.
  * @param trackedUserCount
  *   Number of users that performed a tracked search during the A/B test.
  */
case class Variant(
    addToCartCount: Int,
    addToCartRate: Double,
    averageClickPosition: Int,
    clickCount: Int,
    clickThroughRate: Double,
    conversionCount: Int,
    conversionRate: Double,
    currencies: Option[Map[String, CurrenciesValue]] = scala.None,
    description: String,
    estimatedSampleSize: Option[Int] = scala.None,
    filterEffects: Option[FilterEffects] = scala.None,
    index: String,
    noResultCount: Int,
    purchaseCount: Int,
    purchaseRate: Double,
    searchCount: Int,
    trackedSearchCount: Int,
    trafficPercentage: Int,
    userCount: Int,
    trackedUserCount: Int
)
