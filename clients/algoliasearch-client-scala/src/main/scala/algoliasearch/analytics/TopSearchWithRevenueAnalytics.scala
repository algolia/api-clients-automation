/** Analytics API The Analytics API gives you access to metrics related to your Algolia search experience. ## Base URLs
  * The base URLs for requests to the Analytics API are: - `https://analytics.us.algolia.com` (alias:
  * `https://analytics.algolia.com`) - `https://analytics.de.algolia.com` Use the URL that matches your [analytics
  * region](https://dashboard.algolia.com/account/infrastructure/analytics). **All requests must use HTTPS.** ##
  * Availability and authentication Access to the Analytics API is available as part of the [Premium or Elevate
  * plans](https://www.algolia.com/pricing). To authenticate your API requests, add these headers: -
  * `x-algolia-application-id`. Your Algolia application ID. - `x-algolia-api-key`. An API key with the necessary
  * permissions to make the request. The required access control list (ACL) to make a request is listed in each
  * endpoint's reference. You can find your application ID and API key in the [Algolia
  * dashboard](https://dashboard.algolia.com/account). ## Rate limits You can make up to **100 requests per minute per
  * app** to the Analytics API. The response includes headers with information about the limits. ## Parameters Query
  * parameters must be [URL-encoded](https://developer.mozilla.org/en-US/docs/Glossary/Percent-encoding). Non-ASCII
  * characters must be UTF-8 encoded. Plus characters (`+`) are interpreted as spaces. ## Response status and errors The
  * Analytics API returns JSON responses. Since JSON doesn't guarantee any specific ordering, don't rely on the order of
  * attributes in the API response. Successful responses return a `2xx` status. Client errors return a `4xx` status.
  * Server errors are indicated by a `5xx` status. Error responses have a `message` property with more information. ##
  * Version The current version of the Analytics API is version 2, as indicated by the `/2/` in each endpoint's URL.
  *
  * The version of the OpenAPI document: 2.0.0
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package algoliasearch.analytics

/** TopSearchWithRevenueAnalytics
  *
  * @param search
  *   Search query.
  * @param count
  *   Number of searches.
  * @param clickThroughRate
  *   Click-through rate, calculated as number of tracked searches with at least one click event divided by the number
  *   of tracked searches. If null, Algolia didn't receive any search requests with `clickAnalytics` set to true.
  * @param averageClickPosition
  *   Average position of a clicked search result in the list of search results. If null, Algolia didn't receive any
  *   search requests with `clickAnalytics` set to true.
  * @param clickPositions
  *   List of positions in the search results and clicks associated with this search.
  * @param conversionRate
  *   Conversion rate, calculated as number of tracked searches with at least one conversion event divided by the number
  *   of tracked searches. If null, Algolia didn't receive any search requests with `clickAnalytics` set to true.
  * @param trackedSearchCount
  *   Number of tracked searches. Tracked searches are search requests where the `clickAnalytics` parameter is true.
  * @param clickCount
  *   Number of clicks associated with this search.
  * @param conversionCount
  *   Number of conversions from this search.
  * @param nbHits
  *   Number of results (hits).
  * @param currencies
  *   Revenue associated with this search, broken-down by currencies.
  * @param addToCartRate
  *   Add-to-cart rate, calculated as number of tracked searches with at least one add-to-cart event divided by the
  *   number of tracked searches. If null, Algolia didn't receive any search requests with `clickAnalytics` set to true.
  * @param addToCartCount
  *   Number of add-to-cart events from this search.
  * @param purchaseRate
  *   Purchase rate, calculated as number of tracked searches with at least one purchase event divided by the number of
  *   tracked searches. If null, Algolia didn't receive any search requests with `clickAnalytics` set to true.
  * @param purchaseCount
  *   Number of purchase events from this search.
  */
case class TopSearchWithRevenueAnalytics(
    search: String,
    count: Int,
    clickThroughRate: Option[Double] = scala.None,
    averageClickPosition: Option[Double] = scala.None,
    clickPositions: Seq[ClickPositionsInner],
    conversionRate: Option[Double] = scala.None,
    trackedSearchCount: Int,
    clickCount: Int,
    conversionCount: Int,
    nbHits: Int,
    currencies: Map[String, CurrenciesValue],
    addToCartRate: Option[Double] = scala.None,
    addToCartCount: Int,
    purchaseRate: Option[Double] = scala.None,
    purchaseCount: Int
)
