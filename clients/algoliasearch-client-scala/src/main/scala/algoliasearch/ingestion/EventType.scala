/** Ingestion API API powering the Data Ingestion connectors of Algolia.
  *
  * The version of the OpenAPI document: 1.0
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package algoliasearch.ingestion

import org.json4s._

sealed trait EventType

/** EventType enumeration
  */
object EventType {
  case object Fetch extends EventType {
    override def toString = "fetch"
  }
  case object Record extends EventType {
    override def toString = "record"
  }
  case object Log extends EventType {
    override def toString = "log"
  }
  case object Transform extends EventType {
    override def toString = "transform"
  }
  val values: Seq[EventType] = Seq(Fetch, Record, Log, Transform)

  def withName(name: String): EventType = EventType.values
    .find(_.toString == name)
    .getOrElse(throw new MappingException(s"Unknown EventType value: $name"))
}

class EventTypeSerializer
    extends CustomSerializer[EventType](_ =>
      (
        {
          case JString(value) => EventType.withName(value)
          case JNull          => null
        },
        { case value: EventType =>
          JString(value.toString)
        }
      )
    )
