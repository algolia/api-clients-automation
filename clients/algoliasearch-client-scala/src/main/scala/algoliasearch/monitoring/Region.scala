/** Algolia Monitoring API The Monitoring API lets you check the status and performance of your Algolia infrastructure.
  * > **Note**: The Monitoring API is available on [Premium plans](https://www.algolia.com/pricing/) and plans including
  * the Enterprise add-on.
  *
  * The version of the OpenAPI document: 1.0.0
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package algoliasearch.monitoring

import org.json4s._

sealed trait Region

/** The region where the cluster is located.
  */
object Region {
  case object Au extends Region {
    override def toString = "au"
  }
  case object Br extends Region {
    override def toString = "br"
  }
  case object Ca extends Region {
    override def toString = "ca"
  }
  case object De extends Region {
    override def toString = "de"
  }
  case object Eu extends Region {
    override def toString = "eu"
  }
  case object Hk extends Region {
    override def toString = "hk"
  }
  case object In extends Region {
    override def toString = "in"
  }
  case object Jp extends Region {
    override def toString = "jp"
  }
  case object Sg extends Region {
    override def toString = "sg"
  }
  case object Uae extends Region {
    override def toString = "uae"
  }
  case object Uk extends Region {
    override def toString = "uk"
  }
  case object Usc extends Region {
    override def toString = "usc"
  }
  case object Use extends Region {
    override def toString = "use"
  }
  case object Usw extends Region {
    override def toString = "usw"
  }
  case object Za extends Region {
    override def toString = "za"
  }
  val values: Seq[Region] = Seq(Au, Br, Ca, De, Eu, Hk, In, Jp, Sg, Uae, Uk, Usc, Use, Usw, Za)

  def withName(name: String): Region = Region.values
    .find(_.toString == name)
    .getOrElse(throw new MappingException(s"Unknown Region value: $name"))
}

class RegionSerializer
    extends CustomSerializer[Region](_ =>
      (
        {
          case JString(value) => Region.withName(value)
          case JNull          => null
        },
        { case value: Region =>
          JString(value.toString)
        }
      )
    )
