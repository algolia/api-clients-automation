/** Composition API Composition API.
  *
  * The version of the OpenAPI document: 1.0.0
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package algoliasearch.composition

import org.json4s._

/** InsideBoundingBox
  */
sealed trait InsideBoundingBox

object InsideBoundingBox {

  case class StringValue(value: String) extends InsideBoundingBox
  case class SeqOfSeqOfDouble(value: Seq[Seq[Double]]) extends InsideBoundingBox

  def apply(value: String): InsideBoundingBox = {
    InsideBoundingBox.StringValue(value)
  }
  def apply(value: Seq[Seq[Double]]): InsideBoundingBox = {
    InsideBoundingBox.SeqOfSeqOfDouble(value)
  }

}

object InsideBoundingBoxSerializer extends Serializer[InsideBoundingBox] {
  override def deserialize(implicit format: Formats): PartialFunction[(TypeInfo, JValue), InsideBoundingBox] = {

    case (TypeInfo(clazz, _), json) if clazz == classOf[InsideBoundingBox] =>
      json match {
        case JString(value) => InsideBoundingBox.StringValue(value)
        case JArray(value) if value.forall(_.isInstanceOf[JArray]) =>
          InsideBoundingBox.SeqOfSeqOfDouble(value.map(_.extract))
        case _ => throw new MappingException("Can't convert " + json + " to InsideBoundingBox")
      }
  }

  override def serialize(implicit format: Formats): PartialFunction[Any, JValue] = { case value: InsideBoundingBox =>
    value match {
      case InsideBoundingBox.StringValue(value)      => JString(value)
      case InsideBoundingBox.SeqOfSeqOfDouble(value) => JArray(value.map(Extraction.decompose).toList)
    }
  }
}
