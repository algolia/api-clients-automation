/** Query Suggestions API The Query Suggestions API lets you manage Algolia's Query Suggestions configurations. Query
  * Suggestions add new indices with popular search queries, external suggestions, or facet values to your Algolia
  * application. In your user interface, you can query the Query Suggestions indices like regular indices and add
  * [suggested searches](https://www.algolia.com/doc/guides/building-search-ui/ui-and-ux-patterns/query-suggestions/js/)
  * to guide users and speed up their search.
  *
  * The version of the OpenAPI document: 1.0.0
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package algoliasearch.querysuggestions

import org.json4s._

sealed trait LogLevel

/** The type of log entry. - `SKIP`. A query is skipped because it doesn't match the conditions for successful
  * inclusion. For example, when a query doesn't generate enough search results. - `INFO`. An informative log entry. -
  * `ERROR`. The Query Suggestions process encountered an error.
  */
object LogLevel {
  case object SKIP extends LogLevel {
    override def toString = "SKIP"
  }
  case object INFO extends LogLevel {
    override def toString = "INFO"
  }
  case object ERROR extends LogLevel {
    override def toString = "ERROR"
  }
  val values: Seq[LogLevel] = Seq(SKIP, INFO, ERROR)

  def withName(name: String): LogLevel = LogLevel.values
    .find(_.toString == name)
    .getOrElse(throw new MappingException(s"Unknown LogLevel value: $name"))
}

class LogLevelSerializer
    extends CustomSerializer[LogLevel](_ =>
      (
        {
          case JString(value) => LogLevel.withName(value)
          case JNull          => null
        },
        { case value: LogLevel =>
          JString(value.toString)
        }
      )
    )
