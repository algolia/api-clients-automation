/** Recommend API The Recommend API lets you generate recommendations with several AI models. > **Note**: You should use
  * Algolia's [libraries and
  * tools](https://www.algolia.com/doc/guides/getting-started/how-algolia-works/in-depth/ecosystem/) to interact with
  * the Recommend API. Using the HTTP endpoints directly is not covered by the
  * [SLA](https://www.algolia.com/policies/sla/).
  *
  * The version of the OpenAPI document: 1.0.0
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package algoliasearch.recommend

/** Effect of the rule. For more information, see
  * [Consequences](https://www.algolia.com/doc/guides/managing-results/rules/rules-overview/#consequences).
  *
  * @param promote
  *   Records you want to pin to a specific position in the search results. You can promote up to 300 records, either
  *   individually, or as groups of up to 100 records each.
  * @param filterPromotes
  *   Whether promoted records must match an active filter for the consequence to be applied. This ensures that user
  *   actions (filtering the search) are given a higher precendence. For example, if you promote a record with the
  *   `color: red` attribute, and the user filters the search for `color: blue`, the \"red\" record won't be shown.
  * @param hide
  *   Records you want to hide from the search results.
  * @param userData
  *   A JSON object with custom data that will be appended to the `userData` array in the response. This object isn't
  *   interpreted by the API and is limited to 1&nbsp;kB of minified JSON.
  */
case class Consequence(
    params: Option[ConsequenceParams] = scala.None,
    promote: Option[Seq[Promote]] = scala.None,
    filterPromotes: Option[Boolean] = scala.None,
    hide: Option[Seq[ConsequenceHide]] = scala.None,
    userData: Option[Any] = scala.None
)
