/** Recommend API The Recommend API lets you generate recommendations with several AI models. > **Note**: You should use
  * Algolia's [libraries and
  * tools](https://www.algolia.com/doc/guides/getting-started/how-algolia-works/in-depth/ecosystem/) to interact with
  * the Recommend API. Using the HTTP endpoints directly is not covered by the
  * [SLA](https://www.algolia.com/policies/sla/).
  *
  * The version of the OpenAPI document: 1.0.0
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package algoliasearch.recommend

import org.json4s._

/** [Filter on numeric attributes](https://www.algolia.com/doc/api-reference/api-parameters/numericFilters/).
  */
sealed trait NumericFilters

object NumericFilters {

  case class SeqOfMixedSearchFilters(value: Seq[MixedSearchFilters]) extends NumericFilters
  case class StringValue(value: String) extends NumericFilters

  def apply(value: Seq[MixedSearchFilters]): NumericFilters = {
    NumericFilters.SeqOfMixedSearchFilters(value)
  }
  def apply(value: String): NumericFilters = {
    NumericFilters.StringValue(value)
  }
}

object NumericFiltersSerializer extends Serializer[NumericFilters] {
  override def deserialize(implicit format: Formats): PartialFunction[(TypeInfo, JValue), NumericFilters] = {

    case (TypeInfo(clazz, _), json) if clazz == classOf[NumericFilters] =>
      json match {
        case JArray(value) if value.forall(_.isInstanceOf[JArray]) =>
          NumericFilters.SeqOfMixedSearchFilters(value.map(_.extract))
        case JString(value) => NumericFilters.StringValue(value)
        case _              => throw new MappingException("Can't convert " + json + " to NumericFilters")
      }
  }

  override def serialize(implicit format: Formats): PartialFunction[Any, JValue] = { case value: NumericFilters =>
    value match {
      case NumericFilters.SeqOfMixedSearchFilters(value) => JArray(value.map(Extraction.decompose).toList)
      case NumericFilters.StringValue(value)             => JString(value)
    }
  }
}
