/** Recommend API The Recommend API lets you generate recommendations with several AI models. > **Note**: You should use
  * Algolia's [libraries and
  * tools](https://www.algolia.com/doc/guides/getting-started/how-algolia-works/in-depth/ecosystem/) to interact with
  * the Recommend API. Using the HTTP endpoints directly is not covered by the
  * [SLA](https://www.algolia.com/policies/sla/).
  *
  * The version of the OpenAPI document: 1.0.0
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package algoliasearch.recommend

import org.json4s._

sealed trait RecommendationModels

/** Recommendation model.
  */
object RecommendationModels {
  case object RelatedProducts extends RecommendationModels {
    override def toString = "related-products"
  }
  case object BoughtTogether extends RecommendationModels {
    override def toString = "bought-together"
  }
  val values: Seq[RecommendationModels] = Seq(RelatedProducts, BoughtTogether)

  def withName(name: String): RecommendationModels = RecommendationModels.values
    .find(_.toString == name)
    .getOrElse(throw new MappingException(s"Unknown RecommendationModels value: $name"))
}

class RecommendationModelsSerializer
    extends CustomSerializer[RecommendationModels](_ =>
      (
        {
          case JString(value) => RecommendationModels.withName(value)
          case JNull          => null
        },
        { case value: RecommendationModels =>
          JString(value.toString)
        }
      )
    )
