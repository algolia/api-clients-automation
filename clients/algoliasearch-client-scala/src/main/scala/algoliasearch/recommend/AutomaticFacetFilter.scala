/** Recommend API The Recommend API lets you generate recommendations with several AI models. > **Note**: You should use
  * Algolia's [libraries and
  * tools](https://www.algolia.com/doc/guides/getting-started/how-algolia-works/in-depth/ecosystem/) to interact with
  * the Recommend API. Using the HTTP endpoints directly is not covered by the
  * [SLA](https://www.algolia.com/policies/sla/).
  *
  * The version of the OpenAPI document: 1.0.0
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package algoliasearch.recommend

/** Filter or optional filter to be applied to the search.
  *
  * @param facet
  *   Facet name to be applied as filter. The name must match placeholders in the `pattern` parameter. For example, with
  *   `pattern: {facet:genre}`, `automaticFacetFilters` must be `genre`.
  * @param score
  *   Filter scores to give different weights to individual filters.
  * @param disjunctive
  *   Whether the filter is disjunctive or conjunctive. If true the filter has multiple matches, multiple occurences are
  *   combined with the logical `OR` operation. If false, multiple occurences are combined with the logical `AND`
  *   operation.
  */
case class AutomaticFacetFilter(
    facet: String,
    score: Option[Int] = scala.None,
    disjunctive: Option[Boolean] = scala.None
)
