/** A/B Testing API The Algolia A/B Testing API lets you manage your Algolia A/B tests to optimize your search
  * experience. ## Base URLs The base URLs for requests to the A/B testing API are: - `https://analytics.us.algolia.com`
  * \- `https://analytics.de.algolia.com` - `https://analytics.algolia.com` (routes requests to the closest of the above
  * servers, based on your geographical location) Use the URL that matches your [analytics
  * region](https://dashboard.algolia.com/account/infrastructure/analytics). **All requests must use HTTPS.** ##
  * Availability and authentication Access to the A/B testing API is available as part of the [Premium or Elevate
  * plans](https://www.algolia.com/pricing). To authenticate your API requests, add these headers: -
  * `x-algolia-application-id`. Your Algolia application ID. - `x-algolia-api-key`. An API key with the necessary
  * permissions to make the request. The required access control list (ACL) to make a request is listed in each
  * endpoint's reference. You can find your application ID and API key in the [Algolia
  * dashboard](https://dashboard.algolia.com/account/api-keys). ## Rate limits You can make up to **100 requests per
  * minute per app** to the A/B testing API. The response includes headers with information about the limits. ##
  * Parameters Query parameters must be
  * [URL-encoded](https://developer.mozilla.org/en-US/docs/Glossary/Percent-encoding). Non-ASCII characters must be
  * UTF-8 encoded. Plus characters (`+`) are interpreted as spaces. ## Response status and errors The A/B testing API
  * returns JSON responses. Since JSON doesn't guarantee any specific ordering, don't rely on the order of attributes in
  * the API response. Successful responses return a `2xx` status. Client errors return a `4xx` status. Server errors are
  * indicated by a `5xx` status. Error responses have a `message` property with more information. ## Version The current
  * version of the A/B Testing API is version 3, as indicated by the `/3/` in each endpoint's URL.
  *
  * The version of the OpenAPI document: 3.0.0
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package algoliasearch.abtestingv3

import org.json4s._

sealed trait MetricName

/** MetricName enumeration
  */
object MetricName {
  case object SearchCount extends MetricName {
    override def toString = "search_count"
  }
  case object TrackedSearchCount extends MetricName {
    override def toString = "tracked_search_count"
  }
  case object UserCount extends MetricName {
    override def toString = "user_count"
  }
  case object TrackedUserCount extends MetricName {
    override def toString = "tracked_user_count"
  }
  case object NoResultCount extends MetricName {
    override def toString = "no_result_count"
  }
  case object AddToCartCount extends MetricName {
    override def toString = "add_to_cart_count"
  }
  case object PurchaseCount extends MetricName {
    override def toString = "purchase_count"
  }
  case object ClickedSearchCount extends MetricName {
    override def toString = "clicked_search_count"
  }
  case object ConvertedSearchCount extends MetricName {
    override def toString = "converted_search_count"
  }
  case object ClickThroughRate extends MetricName {
    override def toString = "click_through_rate"
  }
  case object ConversionRate extends MetricName {
    override def toString = "conversion_rate"
  }
  case object AddToCartRate extends MetricName {
    override def toString = "add_to_cart_rate"
  }
  case object PurchaseRate extends MetricName {
    override def toString = "purchase_rate"
  }
  case object AverageClickPosition extends MetricName {
    override def toString = "average_click_position"
  }
  case object Revenue extends MetricName {
    override def toString = "revenue"
  }
  val values: Seq[MetricName] = Seq(
    SearchCount,
    TrackedSearchCount,
    UserCount,
    TrackedUserCount,
    NoResultCount,
    AddToCartCount,
    PurchaseCount,
    ClickedSearchCount,
    ConvertedSearchCount,
    ClickThroughRate,
    ConversionRate,
    AddToCartRate,
    PurchaseRate,
    AverageClickPosition,
    Revenue
  )

  def withName(name: String): MetricName = MetricName.values
    .find(_.toString == name)
    .getOrElse(throw new MappingException(s"Unknown MetricName value: $name"))
}

class MetricNameSerializer
    extends CustomSerializer[MetricName](_ =>
      (
        {
          case JString(value) => MetricName.withName(value)
          case JNull          => null
        },
        { case value: MetricName =>
          JString(value.toString)
        }
      )
    )
