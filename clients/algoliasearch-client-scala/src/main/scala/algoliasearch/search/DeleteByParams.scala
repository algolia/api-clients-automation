/** Search API Use the Search REST API to manage your data (indices and records), implement search, and improve
  * relevance (with Rules, synonyms, and language dictionaries). Although Algolia provides a REST API, you should use
  * the official open source API [clients, libraries, and
  * tools](https://www.algolia.com/doc/guides/getting-started/how-algolia-works/in-depth/ecosystem/) instead. There's no
  * [SLA](https://www.algolia.com/policies/sla/) if you use the REST API directly.
  *
  * The version of the OpenAPI document: 1.0.0
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package algoliasearch.search

/** DeleteByParams
  *
  * @param filters
  *   [Filter](https://www.algolia.com/doc/guides/managing-results/refine-results/filtering/) the query with numeric,
  *   facet, or tag filters.
  * @param aroundLatLng
  *   Search for entries [around a central
  *   location](https://www.algolia.com/doc/guides/managing-results/refine-results/geolocation/#filter-around-a-central-point),
  *   enabling a geographical search within a circular area.
  * @param insideBoundingBox
  *   Search inside a [rectangular
  *   area](https://www.algolia.com/doc/guides/managing-results/refine-results/geolocation/#filtering-inside-rectangular-or-polygonal-areas)
  *   (in geographical coordinates).
  * @param insidePolygon
  *   Search inside a
  *   [polygon](https://www.algolia.com/doc/guides/managing-results/refine-results/geolocation/#filtering-inside-rectangular-or-polygonal-areas)
  *   (in geographical coordinates).
  */
case class DeleteByParams(
    facetFilters: Option[FacetFilters] = scala.None,
    filters: Option[String] = scala.None,
    numericFilters: Option[NumericFilters] = scala.None,
    tagFilters: Option[TagFilters] = scala.None,
    aroundLatLng: Option[String] = scala.None,
    aroundRadius: Option[AroundRadius] = scala.None,
    insideBoundingBox: Option[Seq[Seq[Double]]] = scala.None,
    insidePolygon: Option[Seq[Seq[Double]]] = scala.None
)
