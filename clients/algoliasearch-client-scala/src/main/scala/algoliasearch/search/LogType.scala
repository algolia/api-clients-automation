/** Search API Use the Search REST API to manage your data (indices and records), implement search, and improve
  * relevance (with Rules, synonyms, and language dictionaries). Although Algolia provides a REST API, you should use
  * the official open source API [clients, libraries, and
  * tools](https://www.algolia.com/doc/guides/getting-started/how-algolia-works/in-depth/ecosystem/) instead. There's no
  * [SLA](https://www.algolia.com/policies/sla/) if you use the REST API directly.
  *
  * The version of the OpenAPI document: 1.0.0
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package algoliasearch.search

import org.json4s._

sealed trait LogType

/** LogType enumeration
  */
object LogType {
  case object All extends LogType {
    override def toString = "all"
  }
  case object Query extends LogType {
    override def toString = "query"
  }
  case object Build extends LogType {
    override def toString = "build"
  }
  case object Error extends LogType {
    override def toString = "error"
  }
  val values: Seq[LogType] = Seq(All, Query, Build, Error)

  def withName(name: String): LogType = LogType.values
    .find(_.toString == name)
    .getOrElse(throw new MappingException(s"Unknown LogType value: $name"))
}

class LogTypeSerializer
    extends CustomSerializer[LogType](_ =>
      (
        {
          case JString(value) => LogType.withName(value)
          case JNull          => null
        },
        { case value: LogType =>
          JString(value.toString)
        }
      )
    )
