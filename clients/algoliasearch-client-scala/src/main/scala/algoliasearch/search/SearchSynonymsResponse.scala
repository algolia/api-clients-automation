/** Search API Use the Search REST API to manage your data (indices and records), implement search, and improve
  * relevance (with Rules, synonyms, and language dictionaries). Although Algolia provides a REST API, you should use
  * the official open source API [clients, libraries, and
  * tools](https://www.algolia.com/doc/guides/getting-started/how-algolia-works/in-depth/ecosystem/) instead. There's no
  * [SLA](https://www.algolia.com/policies/sla/) if you use the REST API directly.
  *
  * The version of the OpenAPI document: 1.0.0
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package algoliasearch.search

import org.json4s.{Extraction, Formats, JObject, JValue, Serializer, TypeInfo}

/** SearchSynonymsResponse
  *
  * @param hits
  *   Synonym objects.
  * @param nbHits
  *   Number of hits the search query matched.
  */
case class SearchSynonymsResponse(
    hits: Seq[SynonymHit],
    nbHits: Int,
    additionalProperties: Map[String, JValue] = Map.empty
)

class SearchSynonymsResponseSerializer extends Serializer[SearchSynonymsResponse] {

  override def deserialize(implicit format: Formats): PartialFunction[(TypeInfo, JValue), SearchSynonymsResponse] = {
    case (TypeInfo(clazz, _), json) if clazz == classOf[SearchSynonymsResponse] =>
      json match {
        case jobject: JObject =>
          val formats = format - this
          val mf = manifest[SearchSynonymsResponse]
          val obj = Extraction.extract[SearchSynonymsResponse](jobject)(formats, mf)
          val properties = jobject.obj.toMap - "hits" - "nbHits"
          obj.copy(additionalProperties = properties)
        case _ => throw new IllegalArgumentException(s"Can't deserialize $json as SearchSynonymsResponse")
      }
  }

  override def serialize(implicit format: Formats): PartialFunction[Any, JValue] = {
    case value: SearchSynonymsResponse =>
      val formats = format - this // remove current serializer from formats to avoid stackoverflow
      Extraction.decompose(value.copy(additionalProperties = Map.empty))(formats) merge Extraction.decompose(
        value.additionalProperties
      )(formats)
  }
}
