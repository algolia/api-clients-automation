/** Search API Use the Search REST API to manage your data (indices and records), implement search, and improve
  * relevance (with Rules, synonyms, and language dictionaries). Although Algolia provides a REST API, you should use
  * the official open source API [clients, libraries, and
  * tools](https://www.algolia.com/doc/guides/getting-started/how-algolia-works/in-depth/ecosystem/) instead. There's no
  * [SLA](https://www.algolia.com/policies/sla/) if you use the REST API directly.
  *
  * The version of the OpenAPI document: 1.0.0
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package algoliasearch.search

import org.json4s._

object JsonSupport {
  private def enumSerializers: Seq[Serializer[_]] = Seq[Serializer[_]]() :+
    new AclSerializer() :+
    new ActionSerializer() :+
    new AdvancedSyntaxFeaturesSerializer() :+
    new AlternativesAsExactSerializer() :+
    new AnchoringSerializer() :+
    new AroundRadiusAllSerializer() :+
    new BuiltInOperationTypeSerializer() :+
    new DictionaryActionSerializer() :+
    new DictionaryEntryStateSerializer() :+
    new DictionaryTypeSerializer() :+
    new EditTypeSerializer() :+
    new ExactOnSingleWordQuerySerializer() :+
    new LogTypeSerializer() :+
    new MatchLevelSerializer() :+
    new ModeSerializer() :+
    new OperationTypeSerializer() :+
    new QueryTypeSerializer() :+
    new RemoveWordsIfNoResultsSerializer() :+
    new ScopeTypeSerializer() :+
    new SearchStrategySerializer() :+
    new SearchTypeDefaultSerializer() :+
    new SearchTypeFacetSerializer() :+
    new SortRemainingBySerializer() :+
    new SynonymTypeSerializer() :+
    new TaskStatusSerializer() :+
    new TypoToleranceEnumSerializer()

  private def oneOfsSerializers: Seq[Serializer[_]] = Seq[Serializer[_]]() :+
    AroundPrecisionSerializer :+
    AroundRadiusSerializer :+
    AttributeToUpdateSerializer :+
    AutomaticFacetFiltersSerializer :+
    BrowseParamsSerializer :+
    ConsequenceQuerySerializer :+
    DistinctSerializer :+
    FacetFiltersSerializer :+
    HighlightResultSerializer :+
    IgnorePluralsSerializer :+
    MixedSearchFiltersSerializer :+
    NumericFiltersSerializer :+
    OptionalFiltersSerializer :+
    PromoteSerializer :+
    ReRankingApplyFilterSerializer :+
    RemoveStopWordsSerializer :+
    SearchParamsSerializer :+
    SearchQuerySerializer :+
    SearchResultSerializer :+
    SnippetResultSerializer :+
    TagFiltersSerializer :+
    TypoToleranceSerializer

  private def classMapSerializers: Seq[Serializer[_]] = Seq[Serializer[_]]() :+
    new BaseSearchResponseSerializer() :+
    new DictionaryEntrySerializer() :+
    new ErrorBaseSerializer() :+
    new HitSerializer() :+
    new SearchHitsSerializer() :+
    new SearchSynonymsResponseSerializer()

  implicit val format: Formats = DefaultFormats ++ enumSerializers ++ oneOfsSerializers ++ classMapSerializers
  implicit val serialization: org.json4s.Serialization = org.json4s.native.Serialization
}
