/** Search API Use the Search REST API to manage your data (indices and records), implement search, and improve
  * relevance (with Rules, synonyms, and language dictionaries). Although Algolia provides a REST API, you should use
  * the official open source API [clients, libraries, and
  * tools](https://www.algolia.com/doc/guides/getting-started/how-algolia-works/in-depth/ecosystem/) instead. There's no
  * [SLA](https://www.algolia.com/policies/sla/) if you use the REST API directly.
  *
  * The version of the OpenAPI document: 1.0.0
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package algoliasearch.search

import org.json4s._

sealed trait AlternativesAsExact

/** AlternativesAsExact enumeration
  */
object AlternativesAsExact {
  case object IgnorePlurals extends AlternativesAsExact {
    override def toString = "ignorePlurals"
  }
  case object SingleWordSynonym extends AlternativesAsExact {
    override def toString = "singleWordSynonym"
  }
  case object MultiWordsSynonym extends AlternativesAsExact {
    override def toString = "multiWordsSynonym"
  }
  val values: Seq[AlternativesAsExact] = Seq(IgnorePlurals, SingleWordSynonym, MultiWordsSynonym)

  def withName(name: String): AlternativesAsExact = AlternativesAsExact.values
    .find(_.toString == name)
    .getOrElse(throw new MappingException(s"Unknown AlternativesAsExact value: $name"))
}

class AlternativesAsExactSerializer
    extends CustomSerializer[AlternativesAsExact](_ =>
      (
        {
          case JString(value) => AlternativesAsExact.withName(value)
          case JNull          => null
        },
        { case value: AlternativesAsExact =>
          JString(value.toString)
        }
      )
    )
