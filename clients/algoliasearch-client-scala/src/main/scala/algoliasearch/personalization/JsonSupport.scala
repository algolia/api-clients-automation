/** Personalization API The Personalization API lets you access user profiles built from the personalization strategy.
  * ## Base URLs The base URLs for requests to the Personalization API are: - `https://personalization.us.algolia.com` -
  * `https://personalization.eu.algolia.com` Use the URL that matches your [analytics
  * region](https://dashboard.algolia.com/account/infrastructure/analytics). **All requests must use HTTPS.** ##
  * Authentication To authenticate your API requests, add these headers: - `x-algolia-application-id`. Your Algolia
  * application ID. - `x-algolia-api-key`. An API key with the necessary permissions to make the request. The required
  * access control list (ACL) to make a request is listed in each endpoint's reference. You can find your application ID
  * and API key in the [Algolia dashboard](https://dashboard.algolia.com/account). ## Request format Request bodies must
  * be JSON objects. ## Response status and errors The Personalization API returns JSON responses. Since JSON doesn't
  * guarantee any specific ordering, don't rely on the order of attributes in the API response. Successful responses
  * return a `2xx` status. Client errors return a `4xx` status. Server errors are indicated by a `5xx` status. Error
  * responses have a `message` property with more information. ## Version The current version of the Personalization API
  * is version 1, as indicated by the `/1/` in each endpoint's URL.
  *
  * The version of the OpenAPI document: 1.0.0
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech Do not edit the class manually.
  */
package algoliasearch.personalization

import org.json4s._

object JsonSupport {
  private def enumSerializers: Seq[Serializer[?]] = Seq[Serializer[?]]() :+
    new EventTypeSerializer()

  private def oneOfsSerializers: Seq[Serializer[?]] = Seq[Serializer[?]]()

  private def classMapSerializers: Seq[Serializer[?]] = Seq[Serializer[?]]() :+
    new ErrorBaseSerializer()

  implicit val format: Formats = DefaultFormats ++ enumSerializers ++ oneOfsSerializers ++ classMapSerializers
  implicit val serialization: org.json4s.Serialization = org.json4s.native.Serialization
}
