{
  "csharp": {
    "import": {
      "default": "using Algolia.Search.Clients;\nusing Algolia.Search.Http;"
    },
    "customDelete": {
      "default": "var response = await client.CustomDeleteAsync(\"test/minimal\");"
    },
    "customGet": {
      "default": "var response = await client.CustomGetAsync(\"test/minimal\");"
    },
    "customPost": {
      "default": "var response = await client.CustomPostAsync(\"test/minimal\");"
    },
    "customPut": {
      "default": "var response = await client.CustomPutAsync(\"test/minimal\");"
    },
    "getIndexUsage": {
      "default": "var response = await client.GetIndexUsageAsync(\n  Enum.Parse<Statistic>(\"QueriesOperations\"),\n  \"<YOUR_INDEX_NAME>\",\n  \"2024-04-03T12:46:43Z\",\n  \"2024-04-05T12:46:43Z\"\n);"
    },
    "getUsage": {
      "default": "var response = await client.GetUsageAsync(\n  Enum.Parse<Statistic>(\"QueriesOperations\"),\n  \"2024-04-03T12:46:43Z\",\n  \"2024-04-05T12:46:43Z\"\n);"
    },
    "init": {
      "default": "var client = new UsageClient(new UsageConfig(\"YOUR_APP_ID\", \"YOUR_API_KEY\"));"
    }
  },
  "dart": {},
  "go": {
    "import": {
      "default": "import \"github.com/algolia/algoliasearch-client-go/v4/algolia/usage\""
    },
    "customDelete": {
      "default": "response, err := client.CustomDelete(client.NewApiCustomDeleteRequest(\n  \"test/minimal\",\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}\n\n// use the model directly\nprint(response)"
    },
    "customGet": {
      "default": "response, err := client.CustomGet(client.NewApiCustomGetRequest(\n  \"test/minimal\",\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}\n\n// use the model directly\nprint(response)"
    },
    "customPost": {
      "default": "response, err := client.CustomPost(client.NewApiCustomPostRequest(\n  \"test/minimal\",\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}\n\n// use the model directly\nprint(response)"
    },
    "customPut": {
      "default": "response, err := client.CustomPut(client.NewApiCustomPutRequest(\n  \"test/minimal\",\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}\n\n// use the model directly\nprint(response)"
    },
    "getIndexUsage": {
      "default": "response, err := client.GetIndexUsage(client.NewApiGetIndexUsageRequest(\n  usage.Statistic(\"queries_operations\"), \"<YOUR_INDEX_NAME>\", \"2024-04-03T12:46:43Z\", \"2024-04-05T12:46:43Z\",\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}\n\n// use the model directly\nprint(response)"
    },
    "getUsage": {
      "default": "response, err := client.GetUsage(client.NewApiGetUsageRequest(\n  usage.Statistic(\"queries_operations\"), \"2024-04-03T12:46:43Z\", \"2024-04-05T12:46:43Z\",\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}\n\n// use the model directly\nprint(response)"
    },
    "init": {
      "default": "client, err := usage.NewClient(\"YOUR_APP_ID\", \"YOUR_API_KEY\")"
    }
  },
  "java": {
    "import": {
      "default": "import com.algolia.api.UsageClient;\nimport com.algolia.model.usage.*;"
    },
    "customDelete": {
      "default": "client.customDelete(\"test/minimal\");"
    },
    "customGet": {
      "default": "client.customGet(\"test/minimal\");"
    },
    "customPost": {
      "default": "client.customPost(\"test/minimal\");"
    },
    "customPut": {
      "default": "client.customPut(\"test/minimal\");"
    },
    "getIndexUsage": {
      "default": "client.getIndexUsage(Statistic.QUERIES_OPERATIONS, \"<YOUR_INDEX_NAME>\", \"2024-04-03T12:46:43Z\", \"2024-04-05T12:46:43Z\");"
    },
    "getUsage": {
      "default": "client.getUsage(Statistic.QUERIES_OPERATIONS, \"2024-04-03T12:46:43Z\", \"2024-04-05T12:46:43Z\");"
    },
    "init": {
      "default": "UsageClient client = new UsageClient(\"YOUR_APP_ID\", \"YOUR_API_KEY\");"
    }
  },
  "javascript": {
    "import": {
      "default": "import { usageClient } from '@algolia/client-usage';"
    },
    "customDelete": {
      "default": "const response = await client.customDelete({ path: 'test/minimal' });\n\n// use typed response\nconsole.log(response);"
    },
    "customGet": {
      "default": "const response = await client.customGet({ path: 'test/minimal' });\n\n// use typed response\nconsole.log(response);"
    },
    "customPost": {
      "default": "const response = await client.customPost({ path: 'test/minimal' });\n\n// use typed response\nconsole.log(response);"
    },
    "customPut": {
      "default": "const response = await client.customPut({ path: 'test/minimal' });\n\n// use typed response\nconsole.log(response);"
    },
    "getIndexUsage": {
      "default": "const response = await client.getIndexUsage({\n  statistic: 'queries_operations',\n  indexName: 'myIndexName',\n  startDate: '2024-04-03T12:46:43Z',\n  endDate: '2024-04-05T12:46:43Z',\n});\n\n// use typed response\nconsole.log(response);"
    },
    "getUsage": {
      "default": "const response = await client.getUsage({\n  statistic: 'queries_operations',\n  startDate: '2024-04-03T12:46:43Z',\n  endDate: '2024-04-05T12:46:43Z',\n});\n\n// use typed response\nconsole.log(response);"
    },
    "init": {
      "default": "const client = usageClient('YOUR_APP_ID', 'YOUR_API_KEY');"
    }
  },
  "kotlin": {
    "import": {
      "default": "import com.algolia.client.api.UsageClient"
    },
    "customDelete": {
      "default": "var response = client.customDelete(\n  path = \"test/minimal\",\n)\n\n// Use the response\nprintln(response)"
    },
    "customGet": {
      "default": "var response = client.customGet(\n  path = \"test/minimal\",\n)\n\n// Use the response\nprintln(response)"
    },
    "customPost": {
      "default": "var response = client.customPost(\n  path = \"test/minimal\",\n)\n\n// Use the response\nprintln(response)"
    },
    "customPut": {
      "default": "var response = client.customPut(\n  path = \"test/minimal\",\n)\n\n// Use the response\nprintln(response)"
    },
    "getIndexUsage": {
      "default": "var response = client.getIndexUsage(\n  statistic = Statistic.entries.first { it.value == \"queries_operations\" },\n  indexName = \"<YOUR_INDEX_NAME>\",\n  startDate = \"2024-04-03T12:46:43Z\",\n  endDate = \"2024-04-05T12:46:43Z\",\n)\n\n// Use the response\nprintln(response)"
    },
    "getUsage": {
      "default": "var response = client.getUsage(\n  statistic = Statistic.entries.first { it.value == \"queries_operations\" },\n  startDate = \"2024-04-03T12:46:43Z\",\n  endDate = \"2024-04-05T12:46:43Z\",\n)\n\n// Use the response\nprintln(response)"
    },
    "init": {
      "default": "val client = UsageClient(appId = \"YOUR_APP_ID\", apiKey = \"YOUR_API_KEY\")"
    }
  },
  "php": {
    "import": {
      "default": "use Algolia\\AlgoliaSearch\\Api\\UsageClient;"
    },
    "customDelete": {
      "default": "$response = $client->customDelete(\n    'test/minimal',\n);\n\n// play with the response\nvar_dump($response);"
    },
    "customGet": {
      "default": "$response = $client->customGet(\n    'test/minimal',\n);\n\n// play with the response\nvar_dump($response);"
    },
    "customPost": {
      "default": "$response = $client->customPost(\n    'test/minimal',\n);\n\n// play with the response\nvar_dump($response);"
    },
    "customPut": {
      "default": "$response = $client->customPut(\n    'test/minimal',\n);\n\n// play with the response\nvar_dump($response);"
    },
    "getIndexUsage": {
      "default": "$response = $client->getIndexUsage(\n    'queries_operations',\n    '<YOUR_INDEX_NAME>',\n    '2024-04-03T12:46:43Z',\n    '2024-04-05T12:46:43Z',\n);\n\n// play with the response\nvar_dump($response);"
    },
    "getUsage": {
      "default": "$response = $client->getUsage(\n    'queries_operations',\n    '2024-04-03T12:46:43Z',\n    '2024-04-05T12:46:43Z',\n);\n\n// play with the response\nvar_dump($response);"
    },
    "init": {
      "default": "$client = UsageClient::create('<YOUR_APP_ID>', '<YOUR_API_KEY>');"
    }
  },
  "python": {
    "import": {
      "default": "from algoliasearch.usage.client import UsageClient"
    },
    "customDelete": {
      "default": "response = await _client.custom_delete(\n    path=\"test/minimal\",\n)\n\n# use the class directly\nprint(response)\n\n# print the JSON response\nprint(response.to_json())"
    },
    "customGet": {
      "default": "response = await _client.custom_get(\n    path=\"test/minimal\",\n)\n\n# use the class directly\nprint(response)\n\n# print the JSON response\nprint(response.to_json())"
    },
    "customPost": {
      "default": "response = await _client.custom_post(\n    path=\"test/minimal\",\n)\n\n# use the class directly\nprint(response)\n\n# print the JSON response\nprint(response.to_json())"
    },
    "customPut": {
      "default": "response = await _client.custom_put(\n    path=\"test/minimal\",\n)\n\n# use the class directly\nprint(response)\n\n# print the JSON response\nprint(response.to_json())"
    },
    "getIndexUsage": {
      "default": "response = await _client.get_index_usage(\n    statistic=\"queries_operations\",\n    index_name=\"<YOUR_INDEX_NAME>\",\n    start_date=\"2024-04-03T12:46:43Z\",\n    end_date=\"2024-04-05T12:46:43Z\",\n)\n\n# use the class directly\nprint(response)\n\n# print the JSON response\nprint(response.to_json())"
    },
    "getUsage": {
      "default": "response = await _client.get_usage(\n    statistic=\"queries_operations\",\n    start_date=\"2024-04-03T12:46:43Z\",\n    end_date=\"2024-04-05T12:46:43Z\",\n)\n\n# use the class directly\nprint(response)\n\n# print the JSON response\nprint(response.to_json())"
    },
    "init": {
      "default": "_client = UsageClient(\"YOUR_APP_ID\", \"YOUR_API_KEY\")"
    }
  },
  "ruby": {
    "import": {
      "default": "require \"algolia\""
    },
    "customDelete": {
      "default": "response = client.custom_delete(\"test/minimal\")\n\n# use the class directly\nputs(response)\n\n# print the JSON response\nputs(response.to_json)"
    },
    "customGet": {
      "default": "response = client.custom_get(\"test/minimal\")\n\n# use the class directly\nputs(response)\n\n# print the JSON response\nputs(response.to_json)"
    },
    "customPost": {
      "default": "response = client.custom_post(\"test/minimal\")\n\n# use the class directly\nputs(response)\n\n# print the JSON response\nputs(response.to_json)"
    },
    "customPut": {
      "default": "response = client.custom_put(\"test/minimal\")\n\n# use the class directly\nputs(response)\n\n# print the JSON response\nputs(response.to_json)"
    },
    "getIndexUsage": {
      "default": "response = client.get_index_usage(\n  \"queries_operations\",\n  \"<YOUR_INDEX_NAME>\",\n  \"2024-04-03T12:46:43Z\",\n  \"2024-04-05T12:46:43Z\"\n)\n\n# use the class directly\nputs(response)\n\n# print the JSON response\nputs(response.to_json)"
    },
    "getUsage": {
      "default": "response = client.get_usage(\"queries_operations\", \"2024-04-03T12:46:43Z\", \"2024-04-05T12:46:43Z\")\n\n# use the class directly\nputs(response)\n\n# print the JSON response\nputs(response.to_json)"
    },
    "init": {
      "default": "client = Algolia::UsageClient.create(\"YOUR_APP_ID\", \"YOUR_API_KEY\")"
    }
  },
  "scala": {
    "import": {
      "default": "import algoliasearch.api.UsageClient"
    },
    "customDelete": {
      "default": "val response = client.customDelete[JObject](\n  path = \"test/minimal\"\n)\n\n// Use the response\nval value = Await.result(response, Duration(100, \"sec\"))"
    },
    "customGet": {
      "default": "val response = client.customGet[JObject](\n  path = \"test/minimal\"\n)\n\n// Use the response\nval value = Await.result(response, Duration(100, \"sec\"))"
    },
    "customPost": {
      "default": "val response = client.customPost[JObject](\n  path = \"test/minimal\"\n)\n\n// Use the response\nval value = Await.result(response, Duration(100, \"sec\"))"
    },
    "customPut": {
      "default": "val response = client.customPut[JObject](\n  path = \"test/minimal\"\n)\n\n// Use the response\nval value = Await.result(response, Duration(100, \"sec\"))"
    },
    "getIndexUsage": {
      "default": "val response = client.getIndexUsage(\n  statistic = Statistic.withName(\"queries_operations\"),\n  indexName = \"<YOUR_INDEX_NAME>\",\n  startDate = \"2024-04-03T12:46:43Z\",\n  endDate = \"2024-04-05T12:46:43Z\"\n)\n\n// Use the response\nval value = Await.result(response, Duration(100, \"sec\"))"
    },
    "getUsage": {
      "default": "val response = client.getUsage(\n  statistic = Statistic.withName(\"queries_operations\"),\n  startDate = \"2024-04-03T12:46:43Z\",\n  endDate = \"2024-04-05T12:46:43Z\"\n)\n\n// Use the response\nval value = Await.result(response, Duration(100, \"sec\"))"
    },
    "init": {
      "default": "val client = UsageClient(appId = \"YOUR_APP_ID\", apiKey = \"YOUR_API_KEY\")"
    }
  },
  "swift": {
    "import": {
      "default": "import Usage"
    },
    "customDelete": {
      "default": "let response = try await client.customDelete(path: \"test/minimal\")"
    },
    "customGet": {
      "default": "let response = try await client.customGet(path: \"test/minimal\")"
    },
    "customPost": {
      "default": "let response = try await client.customPost(path: \"test/minimal\")"
    },
    "customPut": {
      "default": "let response = try await client.customPut(path: \"test/minimal\")"
    },
    "getIndexUsage": {
      "default": "let response = try await client.getIndexUsage(\n    statistic: Statistic.queriesOperations,\n    indexName: \"<YOUR_INDEX_NAME>\",\n    startDate: \"2024-04-03T12:46:43Z\",\n    endDate: \"2024-04-05T12:46:43Z\"\n)"
    },
    "getUsage": {
      "default": "let response = try await client.getUsage(\n    statistic: Statistic.queriesOperations,\n    startDate: \"2024-04-03T12:46:43Z\",\n    endDate: \"2024-04-05T12:46:43Z\"\n)"
    },
    "init": {
      "default": "let client = try UsageClient(appID: \"YOUR_APP_ID\", apiKey: \"YOUR_API_KEY\")"
    }
  }
}