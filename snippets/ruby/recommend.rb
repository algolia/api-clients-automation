# Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
# >IMPORT
require 'algolia'
# IMPORT<

# Snippet for the customDelete method.
#
# allow del method for a custom path with minimal parameters
def snippet_for_custom_delete
  # >SEPARATOR customDelete default
  # Initialize the client
  client = Algolia::RecommendClient.create('YOUR_APP_ID', 'YOUR_API_KEY')

  # Call the API
  response = client.custom_delete("test/minimal")

  # use the class directly
  puts response

  # print the JSON response
  puts response.to_json
  # SEPARATOR<
end

# Snippet for the customGet method.
#
# allow get method for a custom path with minimal parameters
def snippet_for_custom_get
  # >SEPARATOR customGet default
  # Initialize the client
  client = Algolia::RecommendClient.create('YOUR_APP_ID', 'YOUR_API_KEY')

  # Call the API
  response = client.custom_get("test/minimal")

  # use the class directly
  puts response

  # print the JSON response
  puts response.to_json
  # SEPARATOR<
end

# Snippet for the customPost method.
#
# allow post method for a custom path with minimal parameters
def snippet_for_custom_post
  # >SEPARATOR customPost default
  # Initialize the client
  client = Algolia::RecommendClient.create('YOUR_APP_ID', 'YOUR_API_KEY')

  # Call the API
  response = client.custom_post("test/minimal")

  # use the class directly
  puts response

  # print the JSON response
  puts response.to_json
  # SEPARATOR<
end

# Snippet for the customPut method.
#
# allow put method for a custom path with minimal parameters
def snippet_for_custom_put
  # >SEPARATOR customPut default
  # Initialize the client
  client = Algolia::RecommendClient.create('YOUR_APP_ID', 'YOUR_API_KEY')

  # Call the API
  response = client.custom_put("test/minimal")

  # use the class directly
  puts response

  # print the JSON response
  puts response.to_json
  # SEPARATOR<
end

# Snippet for the deleteRecommendRule method.
#
# deleteRecommendRule
def snippet_for_delete_recommend_rule
  # >SEPARATOR deleteRecommendRule default
  # Initialize the client
  client = Algolia::RecommendClient.create('YOUR_APP_ID', 'YOUR_API_KEY')

  # Call the API
  response = client.delete_recommend_rule("indexName", 'related-products', "objectID")

  # use the class directly
  puts response

  # print the JSON response
  puts response.to_json
  # SEPARATOR<
end

# Snippet for the getRecommendRule method.
#
# getRecommendRule
def snippet_for_get_recommend_rule
  # >SEPARATOR getRecommendRule default
  # Initialize the client
  client = Algolia::RecommendClient.create('YOUR_APP_ID', 'YOUR_API_KEY')

  # Call the API
  response = client.get_recommend_rule("indexName", 'related-products', "objectID")

  # use the class directly
  puts response

  # print the JSON response
  puts response.to_json
  # SEPARATOR<
end

# Snippet for the getRecommendStatus method.
#
# getRecommendStatus
def snippet_for_get_recommend_status
  # >SEPARATOR getRecommendStatus default
  # Initialize the client
  client = Algolia::RecommendClient.create('YOUR_APP_ID', 'YOUR_API_KEY')

  # Call the API
  response = client.get_recommend_status("indexName", 'related-products', 12_345)

  # use the class directly
  puts response

  # print the JSON response
  puts response.to_json
  # SEPARATOR<
end

# Snippet for the getRecommendations method.
#
# get recommendations for recommend model with minimal parameters
def snippet_for_get_recommendations
  # >SEPARATOR getRecommendations default
  # Initialize the client
  client = Algolia::RecommendClient.create('YOUR_APP_ID', 'YOUR_API_KEY')

  # Call the API
  response = client.get_recommendations(
    GetRecommendationsParams.new(
      requests: [RelatedQuery.new(
        index_name: "indexName", object_id: "objectID", model: 'related-products', threshold: 42.1
      )]
    )
  )

  # use the class directly
  puts response

  # print the JSON response
  puts response.to_json
  # SEPARATOR<
end

# Snippet for the searchRecommendRules method.
#
# searchRecommendRules
def snippet_for_search_recommend_rules
  # >SEPARATOR searchRecommendRules default
  # Initialize the client
  client = Algolia::RecommendClient.create('YOUR_APP_ID', 'YOUR_API_KEY')

  # Call the API
  response = client.search_recommend_rules("indexName", 'related-products')

  # use the class directly
  puts response

  # print the JSON response
  puts response.to_json
  # SEPARATOR<
end
