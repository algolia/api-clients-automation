// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
// >IMPORT
import 'package:algoliasearch/algoliasearch_lite.dart';
// IMPORT<

// Snippet for the customPost method.
//
// allow post method for a custom path with minimal parameters
void snippetForcustomPost() async {
  // >SEPARATOR customPost default
  // Initialize the client
  final client = SearchClient(appId: 'YOUR_APP_ID', apiKey: 'YOUR_API_KEY');

  // Call the API
  final response = await client.customPost(
    path: "test/minimal",
  );
  // >LOG
  // SEPARATOR<
}

// Snippet for the getRecommendations method.
//
// get recommendations for recommend model with minimal parameters
void snippetForgetRecommendations() async {
  // >SEPARATOR getRecommendations default
  // Initialize the client
  final client = SearchClient(appId: 'YOUR_APP_ID', apiKey: 'YOUR_API_KEY');

  // Call the API
  final response = await client.getRecommendations(
    getRecommendationsParams: GetRecommendationsParams(
      requests: [
        RelatedQuery(
          indexName: "<YOUR_INDEX_NAME>",
          objectID: "objectID",
          model: RelatedModel.fromJson("related-products"),
          threshold: 42.1,
        ),
      ],
    ),
  );
  // >LOG
  // SEPARATOR<
}

// Snippet for the search method.
//
// withHitsPerPage
void snippetForsearch() async {
  // >SEPARATOR search withHitsPerPage
  // Initialize the client
  final client = SearchClient(appId: 'YOUR_APP_ID', apiKey: 'YOUR_API_KEY');

  // Call the API
  final response = await client.search(
    searchMethodParams: SearchMethodParams(
      requests: [
        SearchForHits(
          indexName: "<YOUR_INDEX_NAME>",
          query: "<YOUR_QUERY>",
          hitsPerPage: 50,
        ),
      ],
    ),
  );
  // >LOG
  // SEPARATOR<
}

// Snippet for the search method.
//
// filterOnly
void snippetForsearch1() async {
  // >SEPARATOR search filterOnly
  // Initialize the client
  final client = SearchClient(appId: 'YOUR_APP_ID', apiKey: 'YOUR_API_KEY');

  // Call the API
  final response = await client.search(
    searchMethodParams: SearchMethodParams(
      requests: [
        SearchForHits(
          indexName: "<YOUR_INDEX_NAME>",
          query: "<YOUR_QUERY>",
          filters: "actor:Scarlett Johansson",
        ),
      ],
    ),
  );
  // >LOG
  // SEPARATOR<
}

// Snippet for the search method.
//
// filterOr
void snippetForsearch2() async {
  // >SEPARATOR search filterOr
  // Initialize the client
  final client = SearchClient(appId: 'YOUR_APP_ID', apiKey: 'YOUR_API_KEY');

  // Call the API
  final response = await client.search(
    searchMethodParams: SearchMethodParams(
      requests: [
        SearchForHits(
          indexName: "<YOUR_INDEX_NAME>",
          query: "<YOUR_QUERY>",
          filters: "actor:Tom Cruise OR actor:Scarlett Johansson",
        ),
      ],
    ),
  );
  // >LOG
  // SEPARATOR<
}

// Snippet for the search method.
//
// filterNot
void snippetForsearch3() async {
  // >SEPARATOR search filterNot
  // Initialize the client
  final client = SearchClient(appId: 'YOUR_APP_ID', apiKey: 'YOUR_API_KEY');

  // Call the API
  final response = await client.search(
    searchMethodParams: SearchMethodParams(
      requests: [
        SearchForHits(
          indexName: "<YOUR_INDEX_NAME>",
          query: "<YOUR_QUERY>",
          filters: "NOT actor:Nicolas Cage",
        ),
      ],
    ),
  );
  // >LOG
  // SEPARATOR<
}

// Snippet for the search method.
//
// retrieveFacets
void snippetForsearch4() async {
  // >SEPARATOR search retrieveFacets
  // Initialize the client
  final client = SearchClient(appId: 'YOUR_APP_ID', apiKey: 'YOUR_API_KEY');

  // Call the API
  final response = await client.search(
    searchMethodParams: SearchMethodParams(
      requests: [
        SearchForHits(
          indexName: "<YOUR_INDEX_NAME>",
          query: "<YOUR_QUERY>",
          facets: [
            "author",
            "genre",
          ],
        ),
      ],
    ),
  );
  // >LOG
  // SEPARATOR<
}

// Snippet for the search method.
//
// retrieveFacetsWildcard
void snippetForsearch5() async {
  // >SEPARATOR search retrieveFacetsWildcard
  // Initialize the client
  final client = SearchClient(appId: 'YOUR_APP_ID', apiKey: 'YOUR_API_KEY');

  // Call the API
  final response = await client.search(
    searchMethodParams: SearchMethodParams(
      requests: [
        SearchForHits(
          indexName: "<YOUR_INDEX_NAME>",
          query: "<YOUR_QUERY>",
          facets: [
            "*",
          ],
        ),
      ],
    ),
  );
  // >LOG
  // SEPARATOR<
}
