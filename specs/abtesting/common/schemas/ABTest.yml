ABTests:
  oneOf:
    - type: array
      description: A/B tests.
      items:
        $ref: '#/ABTest'
    - type: 'null'
      description: No A/B tests are configured for this application.

ABTest:
  type: object
  additionalProperties: false
  properties:
    abTestID:
      $ref: '../parameters.yml#/abTestID'
    clickSignificance:
      description: |
        A/B test significance calculated from click events.

        Values of 0.95 or higher can be considered significant,
        that is, the difference between A and B variants is _not_ due to random variations.
        Lower values have a.
      oneOf:
        - type: number
          format: double
          example: 1
        - type: 'null'
    conversionSignificance:
      description: |
        A/B test significance calculated from conversion events.

        Values of 0.95 or higher can be considered significant,
        that is, the difference between A and B variants is _not_ due to random variations.
      oneOf:
        - type: number
          format: double
          example: 1
        - type: 'null'
    addToCartSignificance:
      description: |
        A/B test significance calculated from add-to-cart events.

        Values of 0.95 or higher can be considered significant,
        that is, the difference between A and B variants is _not_ due to random variations.
      oneOf:
        - type: number
          format: double
          example: 1
        - type: 'null'
    purchaseSignificance:
      description: |
        A/B test significance calculated from purchase events.

        Values of 0.95 or higher can be considered significant,
        that is, the difference between A and B variants is _not_ due to random variations.
      oneOf:
        - type: number
          format: double
          example: 1
        - type: 'null'
    revenueSignificance:
      description: |
        A/B test significance calculated from revenue data.

        Values of 0.95 or higher can be considered significant,
        that is, the difference between A and B variants is _not_ due to random variations.
      oneOf:
        - type: object
          additionalProperties:
            type: number
            format: double
            x-additionalPropertiesName: currency code
          example:
            USD: 1
            EUR: 0.87
        - type: 'null'
    updatedAt:
      $ref: '../parameters.yml#/updatedAt'
    createdAt:
      $ref: '../parameters.yml#/createdAt'
    endAt:
      $ref: '../parameters.yml#/endAt'
    name:
      $ref: '../parameters.yml#/name'
    status:
      $ref: '#/Status'
    variants:
      $ref: 'Variant.yml#/variants'
    configuration:
      $ref: '#/ABTestConfiguration'
  required:
    - status
    - name
    - createdAt
    - endAt
    - updatedAt
    - conversionSignificance
    - clickSignificance
    - purchaseSignificance
    - addToCartSignificance
    - revenueSignificance
    - abTestID
    - variants

Status:
  type: string
  description: |
    A/B test status.

    - `active`. The A/B test is live and search traffic is split between the two variants.
    - `stopped`. You stopped the A/B test. The A/B test data is still available for analysis.
    - `expired`. The A/B test was automatically stopped after reaching its end date.
    - `failed`. Creating the A/B test failed.
  example: active
  enum:
    - active
    - stopped
    - expired
    - failed

ABTestConfiguration:
  title: configuration
  type: object
  description: A/B test configuration.
  properties:
    outliers:
      $ref: '#/Outliers'
    emptySearch:
      $ref: '#/EmptySearch'
    minimumDetectableEffect:
      $ref: '#/MinimumDetectableEffect'
  required:
    - outliers

Outliers:
  type: object
  description: Configuration for handling outliers.
  properties:
    exclude:
      type: boolean
      description: Whether to exclude outliers when calculating A/B test results.
      default: true

EmptySearch:
  type: object
  description: Configuration for handling empty searches.
  properties:
    exclude:
      type: boolean
      description: Whether to exclude empty searches when calculating A/B test results.

MinimumDetectableEffect:
  type: object
  description: Configuration for the smallest difference between test variants you want to detect.
  properties:
    size:
      type: number
      format: double
      minimum: 0
      maximum: 1
      description: |
        Smallest difference in an observable metric between variants.
        For example, to detect a 10% difference between variants, set this value to 0.1.
    effect:
      $ref: '#/Effect'

Effect:
  type: string
  description: Metric for which you want to detect the smallest relative difference.
  enum:
    - addToCartRate
    - clickThroughRate
    - conversionRate
    - purchaseRate
