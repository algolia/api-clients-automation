Source:
  type: object
  additionalProperties: false
  properties:
    sourceID:
      $ref: './common.yml#/sourceID'
    type:
      $ref: '#/SourceType'
    name:
      type: string
    input:
      $ref: '#/SourceInput'
    authenticationID:
      $ref: './common.yml#/authenticationID'
    createdAt:
      $ref: './common.yml#/createdAt'
    updatedAt:
      $ref: './common.yml#/updatedAt'
  required:
    - sourceID
    - type
    - name
    - createdAt

SourceCreate:
  type: object
  additionalProperties: false
  properties:
    type:
      $ref: '#/SourceType'
    name:
      type: string
      description: Descriptive name of the source.
    input:
      $ref: '#/SourceInput'
    authenticationID:
      $ref: './common.yml#/authenticationID'
  required:
    - type
    - name

SourceCreateResponse:
  type: object
  additionalProperties: false
  properties:
    sourceID:
      $ref: './common.yml#/sourceID'
    name:
      type: string
      description: Descriptive name of the source.
    createdAt:
      $ref: './common.yml#/createdAt'
  required:
    - sourceID
    - name
    - createdAt

SourceUpdate:
  type: object
  additionalProperties: false
  properties:
    name:
      type: string
      description: Descriptive name of the source.
    input:
      $ref: '#/SourceUpdateInput'
    authenticationID:
      $ref: './common.yml#/authenticationID'

SourceUpdateResponse:
  type: object
  additionalProperties: false
  properties:
    sourceID:
      $ref: './common.yml#/sourceID'
    name:
      type: string
      description: Descriptive name of the source.
    updatedAt:
      $ref: './common.yml#/updatedAt'
  required:
    - sourceID
    - name
    - updatedAt

SourceSearch:
  type: object
  additionalProperties: false
  properties:
    sourceIDs:
      type: array
      items:
        type: string
  required:
    - sourceIDs

SourceType:
  type: string
  enum:
    - bigcommerce
    - bigquery
    - commercetools
    - csv
    - docker
    - ga4BigqueryExport
    - json
    - shopify
    - sfcc
    - push

SourceCommercetools:
  type: object
  additionalProperties: false
  properties:
    storeKeys:
      type: array
      items:
        description: Unique and immutable key of the referenced store.
        type: string
    locales:
      type: array
      description: Locales for your commercetools stores.
      items:
        type: string
        pattern: '^[a-z]{2}(-[A-Z]{2})?$'
        description: Locale specfied as combination of a two-letter language code and an optional two-letter country code.
        example: 'fr-FR'
    url:
      type: string
    projectKey:
      type: string
    fallbackIsInStockValue:
      type: boolean
      default: true
      description: |
        Whether a fallback value is stored in the Algolia record if there's no inventory information about the product.
    customFields:
      $ref: '#/CommercetoolsCustomFields'
  required:
    - url
    - projectKey
  x-discriminator-fields:
    - projectKey

CommercetoolsCustomFields:
  type: object
  additionalProperties: false
  description: |
    Custom fields from commercetools to add to the records.

    For more information, see [Using Custom Types and Custom Fields](https://docs.commercetools.com/tutorials/custom-types).
  properties:
    inventory:
      oneOf:
        - type: array
          description: Inventory custom fields.
          items:
            type: string
        - type: 'null'
    price:
      oneOf:
        - type: array
          description: Price custom fields.
          items:
            type: string
        - type: 'null'
    category:
      oneOf:
        - type: array
          description: Category custom fields.
          items:
            type: string
        - type: 'null'

SourceBigCommerce:
  type: object
  additionalProperties: false
  properties:
    storeHash:
      type: string
      description: Store hash identifying your BigCommerce store.
    channel:
      $ref: '#/BigCommerceChannel'
    customFields:
      type: array
      items:
        type: string
    productMetafields:
      type: array
      items:
        $ref: '#/BigCommerceMetafield'
    variantMetafields:
      type: array
      items:
        $ref: '#/BigCommerceMetafield'
  required:
    - storeHash
  x-discriminator-fields:
    - storeHash

BigCommerceMetafield:
  type: object
  additionalProperties: false
  properties:
    namespace:
      type: string
      description: Namespace of the metafield.
    key:
      type: string
      description: Key identifier of the metafield.
  required:
    - namespace
    - key

BigCommerceChannel:
  type: object
  additionalProperties: false
  properties:
    id:
      type: integer
      description: ID of the BigCommerce channel.
    currencies:
      type: array
      description: Currencies for the given channel.
      example: [usd, eur]
      items:
        type: string
        description: Three-letter code for the currency.
        example: usd
  required:
    - id

MethodType:
  type: string
  description: HTTP method to be used for retrieving your data.
  enum: [GET, POST]

UniqueIDColumn:
  type: string
  description: Name of a column that contains a unique ID which will be used as `objectID` in Algolia.

SourceJSON:
  type: object
  additionalProperties: false
  properties:
    url:
      type: string
      description: URL of the file.
    uniqueIDColumn:
      $ref: '#/UniqueIDColumn'
    method:
      $ref: '#/MethodType'
  required:
    - url

MappingTypeCSV:
  type: string
  enum: [string, integer, float, boolean, json]

SourceCSV:
  type: object
  additionalProperties: false
  properties:
    url:
      type: string
      description: URL of the file.
    uniqueIDColumn:
      $ref: '#/UniqueIDColumn'
    mapping:
      type: object
      description: |
        Key-value pairs of column names and their expected types.
      x-additionalPropertyName: column name
      additionalProperties:
        $ref: '#/MappingTypeCSV'
    method:
      $ref: '#/MethodType'
    delimiter:
      type: string
      minLength: 1
      maxLength: 1
      default: ','
      description: The character used to split the value on each line, default to a comma (\r, \n, 0xFFFD, and space are forbidden).
  required:
    - url

SourceGA4BigQueryExport:
  type: object
  additionalProperties: false
  properties:
    projectID:
      type: string
      description: GCP project ID that the BigQuery export writes to.
    datasetID:
      type: string
      description: BigQuery dataset ID that the BigQuery export writes to.
    tablePrefix:
      type: string
      description: Prefix of the tables that the BigQuery Export writes to.
      example: events_intraday_
  required:
    - projectID
    - datasetID
    - tablePrefix
  x-discriminator-fields:
    - projectID
    - datasetID
    - tablePrefix

SourceBigQuery:
  type: object
  additionalProperties: false
  properties:
    projectID:
      type: string
      description: Project ID of the BigQuery source.
    datasetID:
      type: string
      description: Dataset ID of the BigQuery source.
    dataType:
      $ref: '#/BigQueryDataType'
    table:
      type: string
      description: Table name for the BigQuery export.
    tablePrefix:
      type: string
      description: Table prefix for a Google Analytics 4 data export to BigQuery.
    customSQLRequest:
      type: string
      description: Custom SQL request to extract data from the BigQuery table.
    uniqueIDColumn:
      $ref: '#/UniqueIDColumn'
  required:
    - projectID
    - datasetID
  x-discriminator-fields:
    - projectID

BigQueryDataType:
  type: string
  enum: [ga4, ga360]

SourceDocker:
  type: object
  additionalProperties: false
  properties:
    imageType:
      $ref: '#/DockerImageType'
    registry:
      $ref: '#/DockerRegistry'
    image:
      type: string
      description: Docker image name.
      example: algolia/zendesk
    version:
      type: string
      description: Docker image version.
      default: latest
      example: v2.1.0
    configuration:
      type: object
      description: Configuration of the spec.
  required:
    - registry
    - image
    - imageType
    - configuration
  x-discriminator-fields:
    - registry
    - image
    - imageType
    - configuration

SourceUpdateDocker:
  type: object
  additionalProperties: false
  properties:
    registry:
      $ref: '#/DockerRegistry'
    image:
      type: string
      description: Docker image name.
      example: algolia/zendesk
    version:
      type: string
      description: Docker image version.
      default: latest
      example: v2.1.0
    configuration:
      type: object
      description: Configuration of the spec.
  required:
    - configuration
  x-discriminator-fields:
    - configuration

DockerRegistry:
  type: string
  description: Container registry name from where to pull the image.
  enum: [dockerhub, ghcr]

DockerImageType:
  type: string
  enum: [singer, custom, airbyte]
  description: Image type.

SourceInput:
  oneOf:
    - $ref: '#/SourceCommercetools'
    - $ref: '#/SourceBigCommerce'
    - $ref: '#/SourceJSON'
    - $ref: '#/SourceCSV'
    - $ref: '#/SourceBigQuery'
    - $ref: '#/SourceGA4BigQueryExport'
    - $ref: '#/SourceDocker'
    - $ref: '#/SourceShopify'

SourceUpdateCommercetools:
  type: object
  additionalProperties: false
  properties:
    storeKeys:
      type: array
      items:
        description: Unique and immutable key of the referenced store.
        type: string
    locales:
      type: array
      description: Locales for your commercetools stores.
      items:
        type: string
        pattern: '^[a-z]{2}(-[A-Z]{2})?$'
        description: Locale specfied as combination of a two-letter language code and an optional two-letter country code.
        example: 'fr-FR'
    url:
      type: string
    fallbackIsInStockValue:
      type: boolean
      description: |
        Whether a fallback value is stored in the Algolia record if there's no inventory information about the product.
    customFields:
      $ref: '#/CommercetoolsCustomFields'

SourceUpdateInput:
  oneOf:
    - $ref: '#/SourceUpdateCommercetools'
    - $ref: '#/SourceJSON'
    - $ref: '#/SourceCSV'
    - $ref: '#/SourceBigQuery'
    - $ref: '#/SourceGA4BigQueryExport'
    - $ref: '#/SourceUpdateDocker'
    - $ref: '#/SourceUpdateShopify'

SourceUpdateShopify:
  type: object
  additionalProperties: false
  properties:
    featureFlags:
      type: object
      description: Feature flags for the Shopify source.
      additionalProperties: true

SourceShopify:
  allOf:
    - $ref: '#/SourceUpdateShopify'
    - $ref: '#/sourceShopifyBase'

sourceShopifyBase:
  type: object
  additionalProperties: false
  properties:
    shopURL:
      type: string
      description: URL of the Shopify store.
  required:
    - shopURL
  x-discriminator-fields:
    - shopURL

SourceWatchResponse:
  type: object
  additionalProperties: false
  properties:
    runID:
      $ref: './common.yml#/runID'
    data:
      type: array
      description: depending on the source type, the validation returns sampling data of your source (JSON, CSV, BigQuery).
      items:
        type: object
    events:
      description: in case of error, observability events will be added to the response, if any.
      type: array
      items:
        $ref: '../../common/schemas/event.yml#/Event'
    message:
      description: a message describing the outcome of a validate run.
      type: string
  required:
    - message

RunSourcePayload:
  type: object
  additionalProperties: false
  properties:
    indexToInclude:
      type: array
      description: List of index names to include in reidexing/update.
      items:
        type: string
    indexToExclude:
      type: array
      description: List of index names to exclude in reidexing/update.
      items:
        type: string
    entityIDs:
      type: array
      items:
        type: string
      description: List of entityID to update.
    entityType:
      $ref: '#/EntityType'

EntityType:
  type: string
  description: Type of entity to update.
  enum:
    - product
    - collection
