Transformation:
  type: object
  additionalProperties: false
  properties:
    transformationID:
      $ref: './common.yml#/transformationID'
    authenticationIDs:
      $ref: '#/AuthenticationIDs'
    code:
      deprecated: true
      $ref: '#/Code'
    type:
      $ref: '#/TransformationType'
    input:
      $ref: '#/TransformationInput'
    name:
      $ref: '#/Name'
    description:
      $ref: '#/Description'
    owner:
      $ref: './common.yml#/owner'
    createdAt:
      $ref: './common.yml#/createdAt'
    updatedAt:
      $ref: './common.yml#/updatedAt'
  required:
    - transformationID
    - code
    - name
    - createdAt
    - updatedAt

TransformationType:
  type: string
  description: The type of transformation, which can be either 'code' or 'noCode'.
  enum:
    - code
    - noCode

TransformationInput:
  description: The input for the transformation, which can be either code or a no-code configuration.
  oneOf:
    - $ref: '#/TransformationCode'
    - $ref: '#/TransformationNoCode'

TransformationCode:
  type: object
  additionalProperties: false
  description: Input for a transformation that contains the source code of the transformation.
  properties:
    code:
      $ref: '#/Code'
  required:
    - code

TransformationNoCode:
  type: object
  additionalProperties: false
  description: Input for a no-code transformation that contains a series of steps.
  properties:
    steps:
      type: array
      items:
        $ref: '#/TransformationNoCodeStep'
  required:
    - steps

TransformationNoCodeStep:
  type: object
  additionalProperties: false
  description: A step in a no-code transformation.
  properties:
    enabled:
      type: boolean
      description: Whether the operation is enabled.
    id:
      type: string
      description: A unique identifier for the operation.
    configuration:
      title: noCodeConfiguration
      type: object
      description: Configuration settings for the transformation step.
      properties:
        action:
          $ref: '#/NoCodeAction'
        condition:
          $ref: '#/NoCodeConditionGroup'
          description: The condition determining when the action is applied.
      required:
        - action
        - condition
  required:
    - enabled
    - id
    - configuration

NoCodeAction:
  description: The action to perform in a no-code transformation step.
  oneOf:
    - $ref: '#/NoCodeRemoveAttribute'
    - $ref: '#/NoCodeComputeValue'
    - $ref: '#/NoCodeFilterRecordValue'

NoCodeRemoveAttributeKind:
  type: string
  description: 'The kind of action to perform: here, remove an attribute.'
  enum:
    - 'remove_attribute'

NoCodeRemoveAttribute:
  type: object
  description: 'For remove_attribute: specifies the attribute to remove.'
  additionalProperties: false
  properties:
    kind:
      $ref: '#/NoCodeRemoveAttributeKind'
      description: 'The kind of action to perform: here, remove an attribute.'
    attribute_name:
      type: string
      description: The name of the attribute to remove.
  required:
    - kind
    - attribute_name

NoCodeComputeValueKind:
  type: string
  description: 'The kind of action to perform: here, compute a value.'
  enum:
    - 'compute_value'

NoCodeComputeValue:
  type: object
  description: 'For compute_value: specifies the formula to compute.'
  additionalProperties: false
  properties:
    attribute_name:
      type: string
      description: The name of the attribute to compute.
    kind:
      $ref: '#/NoCodeComputeValueKind'
    formula:
      type: string
      description: The formula to compute the value (e.g., 'price * 0.9').
  required:
    - attribute_name
    - kind
    - formula

NoCodeFilterRecordKind:
  type: string
  description: 'The kind of action to perform: here, filter a record.'
  enum:
    - 'filter_record'

NoCodeFilterRecordValue:
  type: object
  description: 'For filter_record: no value is needed (filtering action).'
  additionalProperties: false
  properties:
    kind:
      $ref: '#/NoCodeFilterRecordKind'
  required:
    - kind

NoCodeCondition:
  description: The value object defining the condition logic.
  oneOf:
    - $ref: '#/NoCodeConditionGroup'
    - $ref: '#/NoCodeSimpleCondition'

NoCodeGate:
  type: string
  enum:
    - 'AND'
    - 'OR'
    - 'NOT'
  description: The logical gate applied to the children of a condition group.

NoCodeConditionGroupKind:
  type: string
  description: The 'condition_group' kind of condition groups multiple conditions together.
  enum:
    - 'condition_group'

NoCodeConditionGroup:
  type: object
  description: The value object defining the condition logic.
  additionalProperties: false
  properties:
    kind:
      $ref: '#/NoCodeConditionGroupKind'
    conditions:
      type: array
      description: A list of child condition nodes (recursive).
      items:
        $ref: '#/NoCodeCondition'
    gate:
      $ref: '#/NoCodeGate'
  required:
    - conditions
    - gate

NoCodeOperator:
  type: string
  enum:
    - 'EQUAL'
    - 'NOT_EQUAL'
    - 'GREATER_THAN'
    - 'GREATER_THAN_OR_EQUAL'
    - 'LESS_THAN'
    - 'LESS_THAN_OR_EQUAL'
  description: The operator used in a simple condition to compare the value of a property against a literal value.

NoCodeSimpleConditionKind:
  type: string
  description: The 'simple_condition' kind of condition compares the value of a property found at a given JSON path against a literal value.
  enum:
    - 'simple_condition'

NoCodeSimpleConditionValue:
  oneOf:
    - type: string
      description: A string value to compare against.
    - type: number
      description: A numeric value to compare against.
    - type: boolean
      description: A boolean value to compare against.

NoCodeSimpleCondition:
  type: object
  description: The 'simple_condition' kind of condition compares the value of a property found at a given JSON path against a literal value.
  additionalProperties: false
  properties:
    kind:
      $ref: '#/NoCodeSimpleConditionKind'
    operator:
      $ref: '#/NoCodeOperator'
    field:
      type: string
    value:
      $ref: '#/NoCodeSimpleConditionValue'
  required:
    - kind
    - operator
    - field
    - value

Code:
  type: string
  description: The source code of the transformation.

Name:
  type: string
  description: The uniquely identified name of your transformation.

Description:
  type: string
  description: A descriptive name for your transformation of what it does.

AuthenticationIDs:
  description: The authentications associated with the current transformation.
  type: array
  items:
    $ref: './common.yml#/authenticationID'

TransformationCreate:
  type: object
  additionalProperties: false
  description: API request body for creating a transformation.
  properties:
    code:
      deprecated: true
      $ref: '#/Code'
    name:
      $ref: '#/Name'
    type:
      $ref: '#/TransformationType'
    input:
      $ref: '#/TransformationInput'
    description:
      $ref: '#/Description'
    authenticationIDs:
      $ref: '#/AuthenticationIDs'
  oneOf:
    - required:
        - code
        - name
    - required:
        - input
        - name
        - type

TransformationCreateResponse:
  type: object
  additionalProperties: false
  description: API response for creating a transformation.
  properties:
    transformationID:
      $ref: './common.yml#/transformationID'
    createdAt:
      $ref: './common.yml#/createdAt'
  required:
    - transformationID
    - createdAt

TransformationUpdateResponse:
  type: object
  description: API response for updating a transformation.
  additionalProperties: false
  properties:
    transformationID:
      $ref: './common.yml#/transformationID'
    updatedAt:
      $ref: './common.yml#/updatedAt'
  required:
    - transformationID
    - updatedAt

TransformationSearch:
  type: object
  additionalProperties: false
  properties:
    transformationIDs:
      type: array
      items:
        $ref: './common.yml#/transformationID'
  required:
    - transformationIDs

TransformationTry:
  type: object
  additionalProperties: false
  properties:
    code:
      $ref: '#/Code'
    sampleRecord:
      description: The record to apply the given code to.
      type: object
    authentications:
      type: array
      items:
        $ref: './authentication.yml#/AuthenticationCreate'
  required:
    - code
    - sampleRecord

TransformationTryResponse:
  type: object
  additionalProperties: false
  properties:
    payloads:
      type: array
      description: The array of stringified records returned by the transformation service.
      items:
        type: string
    error:
      title: transformationError
      type: object
      description: The error if the transformation failed.
      properties:
        code:
          description: The error status code.
          type: integer
        message:
          description: A descriptive message explaining the failure.
          type: string
  required:
    - payloads

Model:
  type: object
  additionalProperties: false
  properties:
    fullname:
      type: string
    modelName:
      type: string
    systemPrompt:
      type: string
    id:
      type: string
    provider:
      type: string
  required:
    - fullname
    - modelName
    - systemPrompt
    - id
    - provider
