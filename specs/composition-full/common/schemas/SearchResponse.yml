searchResponse:
  additionalProperties: true
  allOf:
    - $ref: '#/compositionBaseSearchResponse'
    - $ref: '#/searchResults'

searchResults:
  type: object
  additionalProperties: false
  properties:
    results:
      type: array
      description: Search results.
      items:
        $ref: '#/searchResultsItem'
  required:
    - results

searchResultsItem:
  allOf:
    - $ref: '../../../common/schemas/SearchResponse.yml#/baseSearchResponse'
    - $ref: '#/SearchPagination'
    - $ref: '#/searchHits'
    - $ref: '#/resultsCompositionsResponse'

SearchPagination:
  type: object
  additionalProperties: false
  properties:
    page:
      $ref: '../../../common/schemas/SearchParams.yml#/page'
    nbHits:
      $ref: '../../../common/schemas/SearchResponse.yml#/nbHits'
    nbPages:
      $ref: '../../../common/schemas/SearchResponse.yml#/nbPages'
    hitsPerPage:
      $ref: '../../../common/schemas/IndexSettings.yml#/hitsPerPage'
  required:
    - page
    - nbHits
    - nbPages
    - hitsPerPage

searchHits:
  type: object
  additionalProperties: true
  properties:
    hits:
      type: array
      description: |
        Search results (hits).

        Hits are records from your index that match the search criteria, augmented with additional attributes, such as, for highlighting.
      items:
        $ref: 'Hit.yml#/hit'
    query:
      $ref: '../../../common/schemas/SearchParams.yml#/query'
    params:
      type: string
      description: URL-encoded string of all search parameters.
      example: query=a&hitsPerPage=20
  required:
    - hits
    - query
    - params

resultsCompositionsResponse:
  type: object
  additionalProperties: true
  properties:
    compositions:
      title: resultsCompositionsInfoResponse
      type: object
      additionalProperties:
        title: resultsCompositionInfoResponse
        type: object
        properties:
          injectedItems:
            type: array
            items:
              $ref: '#/resultsInjectedItemInfoResponse'
        required:
          - injectedItems
  required:
    - compositions

resultsInjectedItemInfoResponse:
  type: object
  additionalProperties: true
  properties:
    key:
      type: string
    appliedRules:
      type: array
      items:
        title: resultsInjectedItemAppliedRulesInfoResponse
        type: object
        properties:
          objectID:
            $ref: '../../../common/parameters.yml#/objectID'
        required:
          - objectID
  required:
    - key

# copy of specs/common/schemas/SearchResponse.yml/#baseSearchResponse without appliedRules
compositionBaseSearchResponse:
  type: object
  additionalProperties: true
  required:
    - processingTimeMS
  properties:
    compositions:
      $ref: '#/compositionsSearchResponse'

compositionsSearchResponse:
  type: object
  additionalProperties: true
  properties:
    run:
      type: array
      items:
        $ref: '#/compositionRunSearchResponse'
  required:
    - run

compositionRunSearchResponse:
  type: object
  additionalProperties: true
  properties:
    objectID:
      $ref: '../../../common/parameters.yml#/objectID'
    appliedRules:
      type: array
      items:
        title: compositionRunAppliedRules
        type: object
        properties:
          objectID:
            $ref: '../../../common/parameters.yml#/objectID'
        required:
          - objectID
  required:
    - objectID
