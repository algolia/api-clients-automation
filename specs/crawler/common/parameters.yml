CrawlerIdParameter:
  name: id
  in: path
  description: The Id of the targeted Crawler.
  required: true
  schema:
    type: string

TaskIdParameter:
  name: tid
  in: path
  description: The Id of the targeted Task.
  required: true
  schema:
    type: string

CrawlerVersionParameter:
  name: version
  in: path
  description: The version of the targeted Crawler revision.
  required: true
  schema:
    type: integer

CrawlerId:
  type: string
  description: The unique id of the Crawler.
  example: 'e0f6db8a-24f5-4092-83a4-1b2c6cb6d809'

CrawlerName:
  type: string
  maxLength: 64
  description: The name of the Crawler.
  example: 'My Crawler'

Configuration:
  type: object
  description: A Crawler configuration object. See the Crawler documentation to have more details about it.
  properties:
    appId:
      type: string
      example: ABC9DEFGHI
    apiKey:
      type: string
      example: c69564c68bad256f8d11399bf2048f82
    indexPrefix:
      type: string
      example: crawler_
    rateLimit:
      type: number
      example: 8
    startUrls:
      type: array
      items:
        type: string
        example: https://www.algolia.com
    actions:
      type: array
      items:
        type: object
        properties:
          indexName:
            type: string
            example: algolia_website
          pathsToMatch:
            type: array
            items:
              type: string
              example: https://www.algolia.com/**
          selectorsToMatch:
            type: array
            items:
              type: string
            example: ['.products', '!.featured']
          fileTypesToMatch:
            type: array
            items:
              type: string
            example: ['html', 'pdf']
          recordExtractor:
            type: object
            properties:
              __type:
                $ref: '#/configurationRecordExtractorType'
              source:
                type: string
                example: '() => {}'
        required:
          - indexName
          - recordExtractor

configurationRecordExtractorType:
  type: string
  enum:
    - function

UrlsCrawledGroup:
  type: object
  description: Represent a group of URLs that have been crawled and have the same final state.
  properties:
    status:
      $ref: '#/urlsCrawledGroupStatus'
    reason:
      type: string
      description: The code of the reason why when ended up in this status.
    category:
      $ref: '#/urlsCrawledGroupCategory'
    count:
      type: integer
      description: Number of URLs belonging to this group.
    readable:
      type: string
      description: Human redeable version of the error.
  example:
    status: SKIPPED
    reason: forbidden_by_robotstxt
    category: fetch
    nbUrls: 3
    readable: Forbidden by robots.txt

urlsCrawledGroupStatus:
  type: string
  description: A string corresponding to the status of the group.
  enum:
    - DONE
    - SKIPPED
    - FAILED

urlsCrawledGroupCategory:
  type: string
  description: In case of error, will be set to the step where the error occurred, otherwise will be set to 'success'.
  enum: 
    - fetch
    - extraction
    - indexing
    - success

Pagination:
  type: object
  description: Represent a group of items and pagination information.
  properties:
    items:
      type: array
      items:
        type: object
    itemsPerPage:
      type: integer
      description: The maximum number of items returned by this request.
      default: 20
      example: 20
    page:
      type: integer
      description: The current page browsed by this request.
      default: 1
      example: 1
    total:
      type: integer
      description: The total number of items.
      example: 100
