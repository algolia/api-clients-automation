post:
  operationId: testUrl
  summary: Test crawling a URL
  description: |
    Tests a URL with the crawler's configuration and shows the extracted records.

    You can override parts of the configuration to test your changes before updating the configuration.
  tags:
    - actions
  parameters:
    - $ref: '../common/parameters.yml#/CrawlerIdParameter'
  requestBody:
    content:
      application/json:
        schema:
          title: testUrl
          type: object
          properties:
            url:
              type: string
              description: URL to test.
              example: https://www.algolia.com/blog
            config:
              $ref: '../common/schemas/configuration.yml#/PartialConfig'
          required:
            - url
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            title: urlTest
            type: object
            properties:
              startDate:
                type: string
                description: Date and time when the test crawl started, in RFC 3339 format.
                example: 2024-04-02T15:34:29Z
              endDate:
                type: string
                description: Date and time when the test crawl finished, in RFC 3339 format.
                example: 2024-04-02T15:34:29Z
              logs:
                type: array
                description: Logs from the record extraction.
                items:
                  type: array
                  description: Parameters associated with each log.
                  items:
                    type: string
                    example: Processing url 'https://www.algolia.com/blog'
              records:
                type: array
                description: Extracted records from the URL.
                items:
                  title: extractedRecords
                  type: object
                  properties:
                    indexName:
                      type: string
                      description: Name of the index where this record will be stored.
                      example: testIndex
                    records:
                      type: array
                      description: Extracted records.
                      items:
                        type: object
                        description: Algolia record.
                        example:
                          objectID: 'https://www.algolia.com/blog'
                          numberOfLinks: 2
                    recordsPerExtractor:
                      type: array
                      description: Partial records generated by each record extractor.
                      items:
                        title: recordPerExtractor
                        type: object
                        properties:
                          index:
                            type: number
                            description: Index of the extractor.
                            minimum: 0
                          type:
                            type: string
                            description: Extractor type.
                          records:
                            type: array
                            description: Extracted records.
                            items:
                              type: object
                      example:
                        - index: 0
                          type: 'custom'
                          records:
                            - objectID: 'https://www.algolia.com/blog'

              links:
                type: array
                description: |
                  Links found on the page, which match the configuration and would be processed.
                items:
                  type: string
                example:
                  - https://blog.algolia.com/challenging-migration-heroku-google-kubernetes-engine/
                  - https://blog.algolia.com/tale-two-engines-algolia-unity/
              externalData:
                type: object
                description: |
                  External data associated with the tested URL.
                  External data is refreshed automatically at the beginning of the crawl.
                example:
                  externalData1: {data1: 'val1', data2: 'val2'}
                  externalData2: {data1: 'val1', data2: 'val2'}
              error:
                title: urlTestError
                type: object
                description: An error.
                properties:
                  code:
                    type: string
                    example: http_internal_server_error
                  message:
                    type: string
                    example: HTTP Internal Server Error (500)
                example: {}
            required:
              - startDate
              - endDate
              - logs
              - records
              - links
    '400':
      $ref: '../../common/responses/InvalidRequest.yml'
    '401':
      $ref: '../common/schemas/responses.yml#/MissingAuthorization'
    '403':
      $ref: '../common/schemas/responses.yml#/NoRightsOnCrawler'
