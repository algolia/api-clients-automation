searchParams:
  title: Composition Search parameters as object
  type: object
  additionalProperties: false
  properties:
    query:
      $ref: '../../../common/schemas/SearchParams.yml#/query'
    filters:
      $ref: '../../../common/schemas/SearchParams.yml#/filters'
    page:
      $ref: '#/page'
    getRankingInfo:
      type: boolean
      description: Whether the search response should include detailed ranking information.
    relevancyStrictness:
      type: integer
    facetFilters:
      $ref: '../../../common/schemas/SearchParams.yml#/facetFilters'
    optionalFilters:
      $ref: '../../../common/schemas/SearchParams.yml#/optionalFilters'
    numericFilters:
      $ref: '../../../common/schemas/SearchParams.yml#/numericFilters'
    hitsPerPage:
      $ref: '../../../common/schemas/IndexSettings.yml#/hitsPerPage'
    aroundLatLng:
      $ref: '../../../common/schemas/SearchParams.yml#/aroundLatLng'
    aroundLatLngViaIP:
      $ref: '../../../common/schemas/SearchParams.yml#/aroundLatLngViaIP'
    aroundRadius:
      $ref: '../../../common/schemas/SearchParams.yml#/aroundRadius'
    aroundPrecision:
      $ref: '../../../common/schemas/SearchParams.yml#/aroundPrecision'
    minimumAroundRadius:
      type: integer
      description: Minimum radius (in meters) for a search around a location when `aroundRadius` isn't set.
      minimum: 1
      x-categories:
        - Geo-Search
    insideBoundingBox:
      $ref: '../../../common/schemas/SearchParams.yml#/insideBoundingBox'
    insidePolygon:
      $ref: '../../../common/schemas/SearchParams.yml#/insidePolygon'
    queryLanguages:
      type: array
      items:
        $ref: '../../../common/schemas/IndexSettings.yml#/supportedLanguage'
      example:
        - es
      description: |
        Languages for language-specific query processing steps such as plurals, stop-word removal, and word-detection dictionaries.

        This setting sets a default list of languages used by the `removeStopWords` and `ignorePlurals` settings.
        This setting also sets a dictionary for word detection in the logogram-based [CJK](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/handling-natural-languages-nlp/in-depth/normalization/#normalization-for-logogram-based-languages-cjk) languages.
        To support this, you must place the CJK language **first**.

        **You should always specify a query language.**
        If you don't specify an indexing language, the search engine uses all [supported languages](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/handling-natural-languages-nlp/in-depth/supported-languages/),
        or the languages you specified with the `ignorePlurals` or `removeStopWords` parameters.
        This can lead to unexpected search results.
        For more information, see [Language-specific configuration](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/handling-natural-languages-nlp/in-depth/language-specific-configurations/).
      default: []
      x-categories:
        - Languages
    naturalLanguages:
      type: array
      items:
        $ref: '../../../common/schemas/IndexSettings.yml#/supportedLanguage'
      description: |
        ISO language codes that adjust settings that are useful for processing natural language queries (as opposed to keyword searches):

        - Sets `removeStopWords` and `ignorePlurals` to the list of provided languages.
        - Sets `removeWordsIfNoResults` to `allOptional`.
        - Adds a `natural_language` attribute to `ruleContexts` and `analyticsTags`.
      default: []
      x-categories:
        - Languages
    enableRules:
      type: boolean
      description: Whether to enable rules.
      default: true
      x-categories:
        - Rules
    ruleContexts:
      type: array
      items:
        type: string
      description: |
        Assigns a rule context to the search query.

        [Rule contexts](https://www.algolia.com/doc/guides/managing-results/rules/rules-overview/how-to/customize-search-results-by-platform/#whats-a-context) are strings that you can use to trigger matching rules.
      default: []
      example: [mobile]
      x-categories:
        - Rules
    userToken:
      $ref: '../../../common/schemas/SearchParams.yml#/userToken'
    clickAnalytics:
      type: boolean
      description: |
        Whether to include a `queryID` attribute in the response.

        The query ID is a unique identifier for a search query and is required for tracking [click and conversion events](https://www.algolia.com/guides/sending-events/getting-started/).
      default: false
      x-categories:
        - Analytics
    analytics:
      type: boolean
      description: Whether this search will be included in Analytics.
      default: true
      x-categories:
        - Analytics
    analyticsTags:
      type: array
      items:
        type: string
      description: Tags to apply to the query for [segmenting analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).
      default: []
      x-categories:
        - Analytics
    enableABTest:
      type: boolean
      description: Whether to enable A/B testing for this search.
      default: true
      x-categories:
        - Advanced
    enableReRanking:
      type: boolean
      description: |
        Whether this search will use [Dynamic Re-Ranking](https://www.algolia.com/doc/guides/algolia-ai/re-ranking/).

        This setting only has an effect if you activated Dynamic Re-Ranking for this index in the Algolia dashboard.
      default: true
      x-categories:
        - Filtering
