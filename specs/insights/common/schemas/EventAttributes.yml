eventName:
  type: string
  minLength: 1
  maxLength: 64
  pattern: '[\x20-\x7E]{1,64}'
  description: |
    Event name, up to 64 ASCII characters.

    Consider naming events consistentlyâ€”for example, by adopting Segment's
    [object-action](https://segment.com/academy/collecting-data/naming-conventions-for-clean-data/#the-object-action-framework)
    framework.
  example: Product Clicked

index:
  type: string
  description: Index name to which the event's items belong.
  example: YourIndexName

userToken:
  type: string
  minLength: 1
  maxLength: 129
  pattern: '[a-zA-Z0-9_=/+-]{1,129}'
  description: |
    Anonymous or pseudonymous user identifier.

    Don't use personally identifiable information in user tokens.
    For more information, see [User token](https://www.algolia.com/doc/guides/sending-events/concepts/usertoken/).
  example: test-user-1

authenticatedUserToken:
  type: string
  minLength: 1
  maxLength: 129
  pattern: '[a-zA-Z0-9_=/+-]{1,129}'
  description: |
    Identifier for authenticated users.

    When the user signs in, you can get an identifier from your system and send it as `authenticatedUserToken`.
    This lets you keep using the `userToken` from before the user signed in, while providing a reliable way to identify users across sessions.
    Don't use personally identifiable information in user tokens.
    For more information, see [User token](https://www.algolia.com/doc/guides/sending-events/concepts/usertoken/).
  example: c6a52c02-d0c7-4b53-8ce3-2b8fd202f3f9

timestamp:
  description: |
    Optional time of the event. By default, the Insights API uses the time it receives an event as its timestamp.
    If you do provide this, you can either provide a string in RFC3339 format or an integer in [Unix epoch time](https://wikipedia.org/wiki/Unix_time). If you want to provide a Unix time, either seconds, milliseconds or nanoseconds variants are accepted.

  oneOf:
    - type: integer
      format: int64
      example: 1687193127
    - type: string
      example: '2006-01-02T15:04:05Z07:00'

queryID:
  type: string
  pattern: '[0-9a-f]{32}'
  minLength: 32
  maxLength: 32
  description: |
    Unique identifier for a search query.

    The query ID is required for events related to search or browse requests.
    If you add `clickAnalytics: true` as a search request parameter, the query ID is included in the API response.
  example: 3e48cd0616e466948dd85abf5c3fbbe2

objectIDs:
  type: array
  description: Object IDs of the records that are part of the event.
  items:
    type: string
  minItems: 1
  maxItems: 20
  example: ['object-1', 'object-2', 'object-3']

filters:
  type: array
  description: |
    Applied facet filters.

    Facet filters are `facet:value` pairs.
    Facet values must be URL-encoded, such as, `discount:10%25`.
  items:
    type: string
  minItems: 1
  maxItems: 20
  example: ['brand:apple']

positions:
  type: array
  items:
    type: integer
  minimum: 1
  minItems: 1
  maxItems: 20
  description: |
    Position of the clicked item the search results.

    You must provide 1 `position` for each `objectID`.
  example: [1, 2, 5]

price:
  description: Total price of a product, including any discounts, in units of `currency`.
  oneOf:
    - type: number
      format: double
      example: 9.99
    - type: string
      example: '9.99'

discount:
  description: Absolute value of the discount for this product, in units of `currency`.
  oneOf:
    - type: number
      format: double
      example: 20
    - type: string
      example: '20'

quantity:
  type: integer
  format: int32
  example: 2
  description: |
    Quantity of a product that has been purchased or added to the cart.
    The total purchase value is the sum of `quantity` multiplied with the `price` for each purchased item.

objectData:
  type: object
  additionalProperties: false
  properties:
    price:
      $ref: '#/price'
    quantity:
      $ref: '#/quantity'
    discount:
      $ref: '#/discount'

objectDataList:
  type: array
  description: |
    Extra information about the records involved in a purchase or add-to-cart event.

    If specified, it must have the same length as `objectIDs`.
  items:
    $ref: '#/objectData'
  minItems: 1
  maxItems: 20

objectDataAfterSearch:
  type: object
  additionalProperties: false
  properties:
    queryID:
      type: string
      pattern: '[0-9a-f]{32}'
      minLength: 32
      maxLength: 32
      description: Unique identifier for a search query, used to track purchase events with multiple records that originate from different searches.
      example: 3e48cd0616e466948dd85abf5c3fbbe2
    price:
      $ref: '#/price'
    quantity:
      $ref: '#/quantity'
    discount:
      $ref: '#/discount'

objectDataAfterSearchList:
  type: array
  description: |
    Extra information about the records involved in a purchase or add-to-cart events.

    If provided, it must be the same length as `objectIDs`.
  items:
    $ref: '#/objectDataAfterSearch'
  minItems: 1
  maxItems: 20

currency:
  type: string
  description: Three-letter [currency code](https://www.iso.org/iso-4217-currency-codes.html).
  example: EUR

value:
  description: Total monetary value of this event in units of `currency`.
  oneOf:
    - type: number
      format: double
      example: 1000.00
    - type: string
      example: '1000.00'
