rule:
  type: object
  description: Rule object.
  additionalProperties: false
  properties:
    objectID:
      $ref: '../../../../common/parameters.yml#/objectID'
    conditions:
      type: array
      description: A list of conditions that should apply to activate a Rule. You can use up to 25 conditions per Rule.
      items:
        $ref: '#/condition'
    consequence:
      $ref: '#/consequence'
    description:
      type: string
      description: This field is intended for Rule management purposes, in particular to ease searching for Rules and presenting them to human readers. It’s not interpreted by the API.
    enabled:
      type: boolean
      default: true
      description: Whether the Rule is enabled. Disabled Rules remain in the index, but aren’t applied at query time.
    validity:
      type: array
      description: By default, Rules are permanently valid. When validity periods are specified, the Rule applies only during those periods; it’s ignored the rest of the time. The list must not be empty.
      items:
        $ref: '#/timeRange'
  required:
    - objectID
    - consequence

condition: 
  type: object
  additionalProperties: false
  properties:
    pattern:
      type: string
      description: Query pattern syntax
    anchoring:
      type: string
      description: Whether the pattern parameter must match the beginning or the end of the query string, or both, or none.
      enum:
        [
          'is',
          'startsWith',
          'endsWith',
          'contains',
        ]
    alternatives:
      type: boolean
      description: Whether the pattern matches on plurals, synonyms, and typos.
      default: false
    context:
      type: string
      description: 'Rule context format: [A-Za-z0-9_-]+).'


consequence:
  type: object
  description: Consequence of the Rule.
  additionalProperties: false
  properties:
    params:
      $ref: '#/params'
    promote:
      type: array
      description: Objects to promote as hits. 
      items:
        $ref: '#/promote'
    filterPromotes:
    hide:
    userData:

promote:
  type: object
  description: Object to promote as hits. 
  additionalProperties: false
  properties:
    objectID: FIXME
    objectIDs:
    position:
  required:
    - objectID
    - objectIDs
    - position

params:
  type: object
  description: Additional search parameters. Any valid search parameter is allowed.
  additionalProperties: false
  properties:
    query:
      type: string
      description: Query string.
    automaticFacetFilters:
      $ref: '#/automaticFacetFilters'
    automaticOptionalFacetFilters:
      $ref: '#/automaticOptionalFacetFilters'

automaticFacetFilters:
  type: array
  description: Names of facets to which automatic filtering must be applied; they must match the facet name of a facet value placeholder in the query pattern.
  items: 
    $ref: '#/automaticFacetFilter'

automaticOptionalFacetFilters:
  type: object
  description: Same syntax as automaticFacetFilters, but the engine treats the filters as optional.
  items: 
    $ref: '#/automaticFacetFilter'

automaticFacetFilter:
  type: object
  description: Automatic facet Filter.
  additionalProperties: false
  properties:
    facet:
      type: string
      description: Attribute to filter on. This must match a facet placeholder in the Rule’s pattern.
    score:
      type: integer
      default: 1
      description: Score for the filter. Typically used for optional or disjunctive filters.
    disjunctive:
      type: boolean
      default: false
      description: Whether the filter is disjunctive (true) or conjunctive (false).
  required:
    - facet

timeRange:
  type: object
  additionalProperties: false
  properties:
    from:
      type: integer
      description: Lower bound of the time range (Unix timestamp).
    until:
      type: until
      description: Upper bound of the time range (Unix timestamp).
  required:
    - from
    - until

updatedRuleResponse:
  type: object
  additionalProperties: false
  properties:
    objectID:
      $ref: '../../../../common/parameters.yml#/objectID'
    updatedAt:
      $ref: '../../../../common/parameters.yml#/updatedAt'
    taskID:
      $ref: '../../../../common/parameters.yml#/taskID'
  required:
    - objectID
    - updatedAt
    - taskID

deletedRule:
  type: object
  additionalProperties: false
  properties:
    updatedAt:
      $ref: '../../../../common/parameters.yml#/updatedAt'
    taskID:
      $ref: '../../../../common/parameters.yml#/taskID'
  required:
    - updatedAt
    - taskID
