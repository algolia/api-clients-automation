apiKey:
  type: object
  description: API key object.
  additionalProperties: false
  properties:
    acl:
      type: array
      description: |
        Permissions that determine the type of API requests this key can make.
        The required ACL is listed in each endpoint's reference.
        For more information, see [access control list](https://www.algolia.com/doc/guides/security/api-keys/#access-control-list-acl).
      example:
        - search
        - addObject
      default: []
      items:
        $ref: '#/acl'
    description:
      type: string
      description: Description of an API key to help you identify this API key.
      example: Used for indexing by the CLI
      default: ''
    indexes:
      type: array
      description: |
        Index names or patterns that this API key can access.
        By default, an API key can access all indices in the same application.

        You can use leading and trailing wildcard characters (`*`):

        - `dev_*` matches all indices starting with "dev_".
        - `*_dev` matches all indices ending with "_dev".
        - `*_products_*` matches all indices containing "_products_".
      example:
        - dev_*
        - prod_en_products
      default: []
      items:
        type: string
    maxHitsPerQuery:
      type: integer
      description: |
        Maximum number of results this API key can retrieve in one query.
        By default, there's no limit.
      default: 0
    maxQueriesPerIPPerHour:
      type: integer
      description: |
        Maximum number of API requests allowed per IP address or [user token](https://www.algolia.com/doc/guides/sending-events/concepts/usertoken/) per hour.

        If this limit is reached, the API returns an error with status code `429`.
        By default, there's no limit.
      default: 0
    queryParameters:
      type: string
      description: |
        Query parameters to add when making API requests with this API key.

        To restrict this API key to specific IP addresses, add the `restrictSources` parameter.
        You can only add a single source, but you can provide a range of IP addresses.

        Creating an API key fails if the request is made from an IP address outside the restricted range.
      example: 'typoTolerance=strict&restrictSources=192.168.1.0/24'
      default: ''
    referers:
      type: array
      description: |
        Allowed HTTP referrers for this API key.

        By default, all referrers are allowed.
        You can use leading and trailing wildcard characters (`*`):

        - `https://algolia.com/*` allows all referrers starting with "https://algolia.com/"
        - `*.algolia.com` allows all referrers ending with ".algolia.com"
        - `*algolia.com*` allows all referrers in the domain "algolia.com".

        Like all HTTP headers, referrers can be spoofed. Don't rely on them to secure your data.
        For more information, see [HTTP referrer restrictions](https://www.algolia.com/doc/guides/security/security-best-practices/#http-referrers-restrictions).
      example: ['*algolia.com*']
      default: []
      items:
        type: string
    validity:
      type: integer
      description: |
        Duration (in seconds) after which the API key expires.
        By default, API keys don't expire.
      example: 86400
      default: 0
  required:
    - acl

keyString:
  type: string
  description: API key.
  example: 13ad45b4d0a2f6ea65ecbddf6aa260f2

getApiKeyResponse:
  allOf:
    - $ref: '#/baseGetApiKeyResponse'
    - $ref: '#/apiKey'

baseGetApiKeyResponse:
  type: object
  additionalProperties: false
  properties:
    value:
      $ref: '#/keyString'
    createdAt:
      $ref: '../../../../common/responses/common.yml#/createdAtTimestamp'
  required:
    - key
    - createdAt

addApiKeyResponse:
  type: object
  additionalProperties: false
  properties:
    key:
      $ref: '#/keyString'
    createdAt:
      $ref: '../../../../common/responses/common.yml#/createdAt'
  required:
    - key
    - createdAt

acl:
  description: Access control list permissions.
  type: string
  enum:
    - addObject
    - analytics
    - browse
    - deleteObject
    - deleteIndex
    - editSettings
    - inference
    - listIndexes
    - logs
    - personalization
    - recommendation
    - search
    - seeUnretrievableAttributes
    - settings
    - usage
