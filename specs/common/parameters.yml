# path
IndexName:
  name: indexName
  in: path
  description: Index on which to perform the request.
  required: true
  schema:
    type: string
    example: myIndexName

ObjectID:
  name: objectID
  in: path
  description: Unique record (object) identifier.
  required: true
  schema:
    type: string
    example: '123'

# query
Index:
  in: query
  name: index
  description: The index name to target.
  required: true
  schema:
    type: string

StartDate:
  in: query
  name: startDate
  description: The lower bound timestamp (a date, a string like "2006-01-02") of the period to analyze.
  schema:
    type: string
    example: 1999-09-19
    pattern: ^\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$

EndDate:
  in: query
  name: endDate
  description: The upper bound timestamp (a date, a string like "2006-01-02") of the period to analyze.
  schema:
    type: string
    example: 2000-01-21
    pattern: ^\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$

ForwardToReplicas:
  in: query
  name: forwardToReplicas
  description: If `true`, the updated `indexName` settings will be forwarded to its replica indices.
  schema:
    type: boolean

Page:
  in: query
  name: page
  description: >
    Returns the requested page number (zero-based: the first page is page 0). Page size is set by `hitsPerPage`. When null, there's no pagination.
  schema:
    type: integer
    nullable: true
    default: null

PageDefault0:
  in: query
  name: page
  description: >
    Returns the requested page number (zero-based: the first page is page 0). Page size is set by `hitsPerPage`. When null, there's no pagination.
  schema:
    type: integer
    nullable: true
    default: 0

HitsPerPage:
  in: query
  name: hitsPerPage
  description: Maximum number of hits in a page.
  schema:
    type: integer
    default: 100

Offset:
  in: query
  name: offset
  description: Position of the starting record. Used for paging. 0 is the first record.
  schema:
    type: integer
    default: 0

Limit:
  in: query
  name: limit
  description: Number of records to return. Limit is the size of the page.
  schema:
    type: integer
    default: 10

# misc
objectID:
  type: string
  description: Unique object identifier.

id:
  type: string
  description: objectID of the inserted object.

indexName:
  type: string
  example: products
  description: Algolia index name.

hitsPerPage:
  type: integer
  default: 20
  description: Maximum number of hits in a page. Minimum is 1, maximum is 1,000.

query:
  type: string
  description: Full text query.
  default: ''

page:
  type: integer
  default: 0
  description: >
    Requested page (zero-based: the first page is page 0).

trackedSearchCount:
  type: integer
  description: The number of tracked search click.

count:
  description: The number of occurrences.
  type: integer
