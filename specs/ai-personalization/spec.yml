openapi: 3.1.0
info:
  title: AI Personalization API
  description: |
    The AI Personalization API lets you access user profiles built based on the behavior of your users on your website or app.

    ## Client libraries

    Use Algolia's API clients and libraries to reliably integrate Algolia's APIs with your apps.
    The official API clients are covered by Algolia's [Service Level Agreement](https://www.algolia.com/policies/sla/).

    See: [Algolia's ecosystem](https://www.algolia.com/doc/guides/getting-started/how-algolia-works/in-depth/ecosystem/)

    ## Base URLs

    The AI Personalization API can be reached from multiple domains, each specific to a region.

    - `https://ai-personalization.eu.algolia.com`
    - `https://ai-personalization.us.algolia.com`

    Use the URL that matches your [analytics region](https://dashboard.algolia.com/account/infrastructure/analytics).

    **All requests must use HTTPS.**

    ## Authentication

    To authenticate your API requests, add these headers:

    - `x-algolia-application-id`. Your Algolia application ID.
    - `x-algolia-api-key`. An API key with the `search`, `browse` and `recommendation` ACL permissions.

    You can find your application ID and API key in the [Algolia dashboard](https://dashboard.algolia.com/account).

    ## Request format

    Request bodies must be JSON objects.

    ## Response status and errors

    The AI Personalization API returns JSON responses.
    Since JSON doesn't guarantee any specific ordering, don't rely on the order of attributes in the API response.

    Successful responses return a `2xx` status. Client errors return a `4xx` status. Server errors are indicated by a `5xx` status.
    Error responses have a `message` property with more information.

    ## Rate limiting

    When making requests to the AI Personalization API, you are limited to 500 API calls per minute per application.

    The following headers provide information about your current limit:

    - `x-ratelimit-limit`: The number of requests allowed every 60 seconds.
    - `x-ratelimit-remaining`: The number of requests remaining in the current 60 second period.
    - `x-ratelimit-reset`: [Unix timestamp](https://www.unixtimestamp.com/) of the next time period.

    ## Version

    The current version of the AI Personalization API is version 2, as indicated by the `/2/` in each endpoint's URL.
  version: 2.0.0
components:
  securitySchemes:
    appId:
      $ref: '../common/securitySchemes.yml#/appId'
    apiKey:
      $ref: '../common/securitySchemes.yml#/apiKey'
servers:
  - url: https://ai-personalization.{region}.algolia.com
    variables:
      region:
        description: |
          Use the URL that matches your [analytics region](https://dashboard.algolia.com/account/infrastructure/analytics).
        enum: [eu, us]
        default: eu
externalDocs:
  url: https://www.algolia.com/doc/guides/personalization/ai-personalization/what-is-ai-personalization/
security:
  - appId: []
    apiKey: []
tags:
  - name: config
    x-displayName: Configuration
    description: |
      Manage your AI Personalization configuration.

      The configuration defines the indices, facet attributes and events that describe your user's 
      behaviour on your website or app. It helps AI Personalization determine how personalization should affect the search results.
  - name: users
    x-displayName: Users
    description: |
      Manage user profiles generated by AI Personalization.

      User profiles contain the affinities each user has for the different facets in your index.
    externalDocs:
      url: https://www.algolia.com/doc/guides/personalization/ai-personalization/what-is-ai-personalization/concepts/user-profiles/
      description: |
        Related guide: User Profiles.
x-tagGroups:
  - name: AI Personalization
    tags:
      - config
      - users
paths:
  # ######################
  # ### Custom request ###
  # ######################
  /{path}:
    $ref: '../common/paths/customRequest.yml'

  /2/config:
    $ref: 'paths/config.yml'

  /2/users:
    $ref: 'paths/users.yml'

  /2/users/{userID}:
    $ref: 'paths/user.yml'
