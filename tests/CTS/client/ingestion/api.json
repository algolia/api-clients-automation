[
  {
    "testName": "can handle HTML error",
    "autoCreateClient": false,
    "steps": [
      {
        "type": "createClient",
        "parameters": {
          "appId": "test-app-id",
          "apiKey": "test-api-key",
          "region": "us",
          "customHosts": [
            {
              "port": 6676
            }
          ]
        }
      },
      {
        "type": "method",
        "method": "customGet",
        "parameters": {
          "path": "1/html-error"
        },
        "expected": {
          "error": {
            "csharp": "<html><body>429 too many requests</body></html>",
            "go": "API error [429] Too Many Requests",
            "java": "Status Code: 429 - Too Many Requests",
            "javascript": "Too Many Requests",
            "kotlin": "Client request(GET http://%localhost%:6676/1/html-error) invalid: 429 Too Many Requests. Text: \\\"<html><body>429 Too Many Requests</body></html>\\\"",
            "php": "429: Too Many Requests",
            "python": "Too Many Requests",
            "ruby": "429: Too Many Requests",
            "scala": "<html><body>429 Too Many Requests</body></html>",
            "swift": "HTTP error: Status code: 429 Message: No message"
          }
        }
      }
    ]
  },
  {
    "testName": "calls api with default read timeouts",
    "steps": [
      {
        "type": "method",
        "method": "customGet",
        "parameters": {
          "path": "1/test"
        },
        "expected": {
          "type": "timeouts",
          "match": {
            "connectTimeout": 25000,
            "responseTimeout": 25000
          }
        }
      }
    ]
  },
  {
    "testName": "calls api with default write timeouts",
    "steps": [
      {
        "type": "method",
        "method": "customPost",
        "parameters": {
          "path": "1/test"
        },
        "expected": {
          "type": "timeouts",
          "match": {
            "connectTimeout": 25000,
            "responseTimeout": 25000
          }
        }
      }
    ]
  }
]
