# Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
from os import environ
from json import loads
from algoliasearch.abtesting.client import AbtestingClient
from algoliasearch.abtesting.client import AbtestingClientSync
from ..helpers import Helpers
from dotenv import load_dotenv

load_dotenv("../../.env")


class TestAbtestingClientE2E:
    _helpers = Helpers()
    _e2e_app_id = environ.get("ALGOLIA_APPLICATION_ID")
    if _e2e_app_id is None:
        raise Exception(
            "please provide an `ALGOLIA_APPLICATION_ID` env var for e2e tests"
        )

    _e2e_api_key = environ.get("ALGOLIA_ADMIN_KEY")
    if _e2e_api_key is None:
        raise Exception("please provide an `ALGOLIA_ADMIN_KEY` env var for e2e tests")

    async def test_list_ab_tests_1(self):
        """
        listABTests with parameters
        """
        raw_resp = await AbtestingClient(
            self._e2e_app_id, self._e2e_api_key, "us"
        ).list_ab_tests_with_http_info(
            offset=0,
            limit=21,
            index_prefix="cts_e2e ab",
            index_suffix="t",
        )
        assert raw_resp.status_code == 200

        resp = await AbtestingClient(
            self._e2e_app_id, self._e2e_api_key, "us"
        ).list_ab_tests(
            offset=0,
            limit=21,
            index_prefix="cts_e2e ab",
            index_suffix="t",
        )
        _expected_body = loads(
            """{"abtests":[{"abTestID":85635,"createdAt":"2024-05-13T10:12:27.739233Z","endAt":"2124-05-13T00:00:00Z","name":"cts_e2e_abtest","status":"active","variants":[{"addToCartCount":0,"clickCount":0,"conversionCount":0,"description":"this abtest is used for api client automation tests and will expire in 2124","index":"cts_e2e_search_facet","purchaseCount":0,"trafficPercentage":25},{"addToCartCount":0,"clickCount":0,"conversionCount":0,"description":"","index":"cts_e2e abtest","purchaseCount":0,"trafficPercentage":75}]}],"count":1,"total":1}"""
        )
        assert self._helpers.union(_expected_body, resp) == _expected_body


class TestAbtestingClientSyncE2E:
    _helpers = Helpers()
    _e2e_app_id = environ.get("ALGOLIA_APPLICATION_ID")
    if _e2e_app_id is None:
        raise Exception(
            "please provide an `ALGOLIA_APPLICATION_ID` env var for e2e tests"
        )

    _e2e_api_key = environ.get("ALGOLIA_ADMIN_KEY")
    if _e2e_api_key is None:
        raise Exception("please provide an `ALGOLIA_ADMIN_KEY` env var for e2e tests")

    def test_list_ab_tests_1(self):
        """
        listABTests with parameters
        """
        raw_resp = AbtestingClientSync(
            self._e2e_app_id, self._e2e_api_key, "us"
        ).list_ab_tests_with_http_info(
            offset=0,
            limit=21,
            index_prefix="cts_e2e ab",
            index_suffix="t",
        )
        assert raw_resp.status_code == 200

        resp = AbtestingClientSync(
            self._e2e_app_id, self._e2e_api_key, "us"
        ).list_ab_tests(
            offset=0,
            limit=21,
            index_prefix="cts_e2e ab",
            index_suffix="t",
        )
        _expected_body = loads(
            """{"abtests":[{"abTestID":85635,"createdAt":"2024-05-13T10:12:27.739233Z","endAt":"2124-05-13T00:00:00Z","name":"cts_e2e_abtest","status":"active","variants":[{"addToCartCount":0,"clickCount":0,"conversionCount":0,"description":"this abtest is used for api client automation tests and will expire in 2124","index":"cts_e2e_search_facet","purchaseCount":0,"trafficPercentage":25},{"addToCartCount":0,"clickCount":0,"conversionCount":0,"description":"","index":"cts_e2e abtest","purchaseCount":0,"trafficPercentage":75}]}],"count":1,"total":1}"""
        )
        assert self._helpers.union(_expected_body, resp) == _expected_body
