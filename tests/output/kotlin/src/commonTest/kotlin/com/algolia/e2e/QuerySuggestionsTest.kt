// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package com.algolia.e2e

import com.algolia.client.api.QuerySuggestionsClient
import com.algolia.client.configuration.*
import com.algolia.client.model.querysuggestions.*
import com.algolia.client.transport.*
import com.algolia.utils.*
import io.github.cdimascio.dotenv.Dotenv
import io.ktor.http.*
import kotlinx.coroutines.test.*
import kotlinx.serialization.encodeToString
import kotlinx.serialization.json.*
import org.skyscreamer.jsonassert.JSONAssert
import org.skyscreamer.jsonassert.JSONCompareMode
import kotlin.test.*

class QuerySuggestionsTest {

  var client: QuerySuggestionsClient

  init {
    if (System.getenv("CI") == "true") {
      this.client = QuerySuggestionsClient(appId = System.getenv("ALGOLIA_APPLICATION_ID"), apiKey = System.getenv("ALGOLIA_ADMIN_KEY"), region = "us")
    } else {
      val dotenv = Dotenv.configure().directory("../../").load()
      this.client = QuerySuggestionsClient(appId = dotenv["ALGOLIA_APPLICATION_ID"], apiKey = dotenv["ALGOLIA_ADMIN_KEY"], region = "us")
    }
  }

  @Test
  fun `Retrieve QS config e2e`() = runTest {
    client.runTest(
      call = {
        getConfig(
          indexName = "cts_e2e_browse_query_suggestions",
        )
      },
      response = {
        JSONAssert.assertEquals("{\"appID\":\"T8JK9S7I7X\",\"allowSpecialCharacters\":true,\"enablePersonalization\":false,\"exclude\":[\"^cocaines$\"],\"indexName\":\"cts_e2e_browse_query_suggestions\",\"languages\":[],\"sourceIndices\":[{\"facets\":[{\"amount\":1,\"attribute\":\"title\"}],\"generate\":[[\"year\"]],\"indexName\":\"cts_e2e_browse\",\"minHits\":5,\"minLetters\":4,\"replicas\":false}]}", Json.encodeToString(it), JSONCompareMode.LENIENT)
      },
    )
  }
}
