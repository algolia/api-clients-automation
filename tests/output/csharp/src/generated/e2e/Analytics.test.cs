// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
using System.Text.Json;
using Algolia.Search.Clients;
using Algolia.Search.Http;
using Algolia.Search.Models.Analytics;
using Algolia.Search.Serializer;
using Algolia.Search.Tests.Utils;
using dotenv.net;
using Quibble.Xunit;
using Xunit;
using Action = Algolia.Search.Models.Search.Action;

public class AnalyticsClientRequestTestsE2E
{
  private readonly AnalyticsClient _client;

  public AnalyticsClientRequestTestsE2E()
  {
    DotEnv.Load(
      options: new DotEnvOptions(
        ignoreExceptions: true,
        probeForEnv: true,
        probeLevelsToSearch: 8,
        envFilePaths: new[] { ".env" }
      )
    );

    var appId = Environment.GetEnvironmentVariable("ALGOLIA_APPLICATION_ID");
    if (appId == null)
    {
      throw new Exception("please provide an `ALGOLIA_APPLICATION_ID` env var for e2e tests");
    }

    var apiKey = Environment.GetEnvironmentVariable("ALGOLIA_ADMIN_KEY");
    if (apiKey == null)
    {
      throw new Exception("please provide an `ALGOLIA_ADMIN_KEY` env var for e2e tests");
    }

    _client = new AnalyticsClient(new AnalyticsConfig(appId, apiKey, "us"));
  }

  [Fact]
  public void Dispose() { }

  [Fact(DisplayName = "e2e with complex query params")]
  public async Task GetTopSearchesTest2()
  {
    try
    {
      var resp = await _client.GetTopSearchesAsync("cts_e2e_space in index");
      // Check status code 200
      Assert.NotNull(resp);

      JsonAssert.EqualOverrideDefault(
        "{\"searches\":[{\"search\":\"\",\"nbHits\":0}]}",
        JsonSerializer.Serialize(resp, JsonConfig.Options),
        new JsonDiffConfig(true)
      );
    }
    catch (Exception e)
    {
      Assert.Fail("An exception was thrown: " + e.Message);
    }
  }
}
