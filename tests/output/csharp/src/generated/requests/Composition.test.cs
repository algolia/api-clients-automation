// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
using System.Text.Json;
using Algolia.Search.Clients;
using Algolia.Search.Http;
using Algolia.Search.Models.Composition;
using Algolia.Search.Serializer;
using Algolia.Search.Tests.Utils;
using dotenv.net;
using Quibble.Xunit;
using Xunit;
using Action = Algolia.Search.Models.Ingestion.Action;

namespace Algolia.Search.requests;

public class CompositionClientRequestTests
{
  private readonly CompositionClient client;
  private readonly EchoHttpRequester _echo;

  public CompositionClientRequestTests()
  {
    _echo = new EchoHttpRequester();
    client = new CompositionClient(new CompositionConfig("appId", "apiKey"), _echo);
  }

  [Fact]
  public void Dispose() { }

  [Fact(DisplayName = "search")]
  public async Task SearchTest()
  {
    await client.SearchAsync<Hit>(
      "foo",
      new RequestBody { Params = new Params { Query = "batman" } }
    );

    var req = _echo.LastResponse;
    Assert.Equal("/1/compositions/foo/run", req.Path);
    Assert.Equal("POST", req.Method.ToString());
    JsonAssert.EqualOverrideDefault(
      "{\"params\":{\"query\":\"batman\"}}",
      req.Body,
      new JsonDiffConfig(false)
    );
  }

  [Fact(DisplayName = "searchForFacetValues")]
  public async Task SearchForFacetValuesTest()
  {
    await client.SearchForFacetValuesAsync(
      "foo",
      "brand",
      new SearchForFacetValuesRequest
      {
        Params = new SearchForFacetValuesParams { MaxFacetHits = 10 },
      }
    );

    var req = _echo.LastResponse;
    Assert.Equal("/1/compositions/foo/facets/brand/query", req.Path);
    Assert.Equal("POST", req.Method.ToString());
    JsonAssert.EqualOverrideDefault(
      "{\"params\":{\"maxFacetHits\":10}}",
      req.Body,
      new JsonDiffConfig(false)
    );
  }
}
